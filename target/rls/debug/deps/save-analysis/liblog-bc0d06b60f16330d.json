{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8","program":"/home/merlin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","log","/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"use_std\"","-C","metadata=bc0d06b60f16330d","-C","extra-filename=-bc0d06b60f16330d","--out-dir","/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps","-L","dependency=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/merlin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/liblog-bc0d06b60f16330d.rmeta"},"prelude":{"crate_id":{"name":"log","disambiguator":[17561866448411810924,4504362296182916005]},"crate_root":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src","external_crates":[{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[761217931017169021,11182540429948991214]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2858088706689600179,17176650857302713463]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15879356389475821678,5643460802079966270]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8920863043171661139,6394972819860350927]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7444524629517225000,3862632196027588969]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5618285707243958873,10527758992658711681]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15786611459077781418,3427959288485188730]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7447291644365204408,1470667821728193545]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6110035509052048891,1769159197608489149]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2517392378542245850,1007682534799069383]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10841319041269114641,5435836511512932455]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11288057705607810041,2650294536215064940]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3615958118357796166,6340715783279141278]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5192402504599619502,9026648258735454425]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[18157078792379649936,5967302931976128037]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[7273518522570529581,7645160771462661682]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14392049376104722820,4331661258852677409]}}],"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":467,"byte_end":33171,"line_start":11,"line_end":1040,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":467,"byte_end":33171,"line_start":11,"line_end":1040,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":144},{"krate":0,"index":164},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":159},{"krate":0,"index":156},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":165},{"krate":0,"index":186},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":181},{"krate":0,"index":178},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":187},{"krate":0,"index":192},{"krate":0,"index":84},{"krate":0,"index":195},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":209},{"krate":0,"index":206},{"krate":0,"index":202},{"krate":0,"index":199},{"krate":0,"index":91},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":223},{"krate":0,"index":245},{"krate":0,"index":243},{"krate":0,"index":241},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":232},{"krate":0,"index":230},{"krate":0,"index":227},{"krate":0,"index":103},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"decl_id":null,"docs":" A lightweight logging facade.","sig":null,"attributes":[{"value":"/ A lightweight logging facade.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":467,"byte_end":500,"line_start":11,"line_end":11,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":501,"byte_end":504,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The `log` crate provides a single logging API that abstracts over the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":505,"byte_end":578,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ actual logging implementation. Libraries can use the logging API provided","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":579,"byte_end":656,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ by this crate, and the consumer of those libraries can choose the logging","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":657,"byte_end":734,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ framework that is most suitable for its use case.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":735,"byte_end":788,"line_start":16,"line_end":16,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":789,"byte_end":792,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If no logging implementation is selected, the facade falls back to a \"noop\"","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":793,"byte_end":872,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ implementation that ignores all log messages. The overhead in this case","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":873,"byte_end":948,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ is very small - just an integer load, comparison and jump.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":949,"byte_end":1011,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1012,"byte_end":1015,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ A log request consists of a _target_, a _level_, and a _body_. A target is a","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1016,"byte_end":1096,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ string which defaults to the module path of the location of the log request,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1097,"byte_end":1177,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ though that default may be overridden. Logger implementations typically use","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1178,"byte_end":1257,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ the target to filter requests based on some user configuration.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1258,"byte_end":1325,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1326,"byte_end":1329,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Use","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1330,"byte_end":1339,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1340,"byte_end":1343,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## In libraries","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1344,"byte_end":1363,"line_start":29,"line_end":29,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1364,"byte_end":1367,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Libraries should link only to the `log` crate, and use the provided","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1368,"byte_end":1439,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ macros to log whatever information will be useful to downstream consumers.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1440,"byte_end":1518,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1519,"byte_end":1522,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ### Examples","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1523,"byte_end":1539,"line_start":34,"line_end":34,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1540,"byte_end":1543,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1544,"byte_end":1555,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ # #![allow(unstable)]","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1556,"byte_end":1581,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/ #[macro_use]","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1582,"byte_end":1598,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/ extern crate log;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1599,"byte_end":1620,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1621,"byte_end":1624,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # #[derive(Debug)] pub struct Yak(String);","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1625,"byte_end":1671,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/ # impl Yak { fn shave(&self, _: u32) {} }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1672,"byte_end":1717,"line_start":42,"line_end":42,"column_start":1,"column_end":46}},{"value":"/ # fn find_a_razor() -> Result<u32, u32> { Ok(1) }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1718,"byte_end":1771,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/ pub fn shave_the_yak(yak: &Yak) {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1772,"byte_end":1809,"line_start":44,"line_end":44,"column_start":1,"column_end":38}},{"value":"/     info!(target: \"yak_events\", \"Commencing yak shaving for {:?}\", yak);","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1810,"byte_end":1886,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1887,"byte_end":1890,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1891,"byte_end":1905,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/         match find_a_razor() {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1906,"byte_end":1940,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/             Ok(razor) => {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1941,"byte_end":1971,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/                 info!(\"Razor located: {}\", razor);","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":1972,"byte_end":2026,"line_start":50,"line_end":50,"column_start":1,"column_end":55}},{"value":"/                 yak.shave(razor);","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2027,"byte_end":2064,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/                 break;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2065,"byte_end":2091,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2092,"byte_end":2109,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/             Err(err) => {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2110,"byte_end":2139,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"/                 warn!(\"Unable to locate a razor: {}, retrying\", err);","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2140,"byte_end":2213,"line_start":55,"line_end":55,"column_start":1,"column_end":74}},{"value":"/             }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2214,"byte_end":2231,"line_start":56,"line_end":56,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2232,"byte_end":2245,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2246,"byte_end":2255,"line_start":58,"line_end":58,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2256,"byte_end":2261,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2262,"byte_end":2280,"line_start":60,"line_end":60,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2281,"byte_end":2288,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2289,"byte_end":2292,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ## In executables","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2293,"byte_end":2314,"line_start":63,"line_end":63,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2315,"byte_end":2318,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Executables should choose a logging framework and initialize it early in the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2319,"byte_end":2399,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/ runtime of the program. Logging frameworks will typically include a","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2400,"byte_end":2471,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"/ function to do this. Any log messages generated before the framework is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2472,"byte_end":2547,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ initialized will be ignored.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2548,"byte_end":2580,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2581,"byte_end":2584,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The executable itself may use the `log` crate to log as well.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2585,"byte_end":2650,"line_start":70,"line_end":70,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2651,"byte_end":2654,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ### Warning","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2655,"byte_end":2670,"line_start":72,"line_end":72,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2671,"byte_end":2674,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The logging system may only be initialized once.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2675,"byte_end":2727,"line_start":74,"line_end":74,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2728,"byte_end":2731,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ### Examples","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2732,"byte_end":2748,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2749,"byte_end":2752,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2753,"byte_end":2771,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"/ #[macro_use]","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2772,"byte_end":2788,"line_start":79,"line_end":79,"column_start":1,"column_end":17}},{"value":"/ extern crate log;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2789,"byte_end":2810,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/ extern crate env_logger;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2811,"byte_end":2839,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2840,"byte_end":2843,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2844,"byte_end":2859,"line_start":83,"line_end":83,"column_start":1,"column_end":16}},{"value":"/     // Select env_logger, one possible logger implementation","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2860,"byte_end":2924,"line_start":84,"line_end":84,"column_start":1,"column_end":65}},{"value":"/     // (see https://doc.rust-lang.org/log/env_logger/index.html)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2925,"byte_end":2993,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/     env_logger::init().unwrap();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":2994,"byte_end":3030,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/     ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3031,"byte_end":3039,"line_start":87,"line_end":87,"column_start":1,"column_end":9}},{"value":"/     info!(\"starting up\");","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3040,"byte_end":3069,"line_start":88,"line_end":88,"column_start":1,"column_end":30}},{"value":"/     error!(\"error: {}\", 404);","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3070,"byte_end":3103,"line_start":89,"line_end":89,"column_start":1,"column_end":34}},{"value":"/     ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3104,"byte_end":3112,"line_start":90,"line_end":90,"column_start":1,"column_end":9}},{"value":"/     // ...","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3113,"byte_end":3127,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3128,"byte_end":3133,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3134,"byte_end":3141,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3142,"byte_end":3145,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # Logger implementations","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3146,"byte_end":3174,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3175,"byte_end":3178,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ Loggers implement the [`Log`] trait. Here's a very basic example that simply","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3179,"byte_end":3259,"line_start":97,"line_end":97,"column_start":1,"column_end":81}},{"value":"/ logs all messages at the [`Error`][level_link], [`Warn`][level_link] or","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3260,"byte_end":3335,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/ [`Info`][level_link] levels to stdout:","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3336,"byte_end":3378,"line_start":99,"line_end":99,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3379,"byte_end":3382,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3383,"byte_end":3394,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/ extern crate log;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3395,"byte_end":3416,"line_start":102,"line_end":102,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3417,"byte_end":3420,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ use log::{LogRecord, LogLevel, LogMetadata};","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3421,"byte_end":3469,"line_start":104,"line_end":104,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3470,"byte_end":3473,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ struct SimpleLogger;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3474,"byte_end":3498,"line_start":106,"line_end":106,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3499,"byte_end":3502,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ impl log::Log for SimpleLogger {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3503,"byte_end":3539,"line_start":108,"line_end":108,"column_start":1,"column_end":37}},{"value":"/     fn enabled(&self, metadata: &LogMetadata) -> bool {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3540,"byte_end":3599,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/         metadata.level() <= LogLevel::Info","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3600,"byte_end":3646,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3647,"byte_end":3656,"line_start":111,"line_end":111,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3657,"byte_end":3660,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/     fn log(&self, record: &LogRecord) {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3661,"byte_end":3704,"line_start":113,"line_end":113,"column_start":1,"column_end":44}},{"value":"/         if self.enabled(record.metadata()) {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3705,"byte_end":3753,"line_start":114,"line_end":114,"column_start":1,"column_end":49}},{"value":"/             println!(\"{} - {}\", record.level(), record.args());","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3754,"byte_end":3821,"line_start":115,"line_end":115,"column_start":1,"column_end":68}},{"value":"/         }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3822,"byte_end":3835,"line_start":116,"line_end":116,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3836,"byte_end":3845,"line_start":117,"line_end":117,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3846,"byte_end":3851,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3852,"byte_end":3855,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ # fn main() {}","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3856,"byte_end":3874,"line_start":120,"line_end":120,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3875,"byte_end":3882,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3883,"byte_end":3886,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ Loggers are installed by calling the [`set_logger`] function. It takes a","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3887,"byte_end":3963,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ closure which is provided a [`MaxLogLevelFilter`] token and returns a","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":3964,"byte_end":4037,"line_start":124,"line_end":124,"column_start":1,"column_end":74}},{"value":"/ [`Log`] trait object. The [`MaxLogLevelFilter`] token controls the global","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4038,"byte_end":4115,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ maximum log level. The logging facade uses this as an optimization to","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4116,"byte_end":4189,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ improve performance of log messages at levels that are disabled. In the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4190,"byte_end":4265,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ case of our example logger, we'll want to set the maximum log level to","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4266,"byte_end":4340,"line_start":128,"line_end":128,"column_start":1,"column_end":75}},{"value":"/ [`Info`][level_link], since we ignore any [`Debug`][level_link] or","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4341,"byte_end":4411,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"/ [`Trace`][level_link] level log messages. A logging framework should","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4412,"byte_end":4484,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ provide a function that wraps a call to [`set_logger`], handling","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4485,"byte_end":4553,"line_start":131,"line_end":131,"column_start":1,"column_end":69}},{"value":"/ initialization of the logger:","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4554,"byte_end":4587,"line_start":132,"line_end":132,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4588,"byte_end":4591,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4592,"byte_end":4603,"line_start":134,"line_end":134,"column_start":1,"column_end":12}},{"value":"/ # extern crate log;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4604,"byte_end":4627,"line_start":135,"line_end":135,"column_start":1,"column_end":24}},{"value":"/ # use log::{LogLevel, LogLevelFilter, SetLoggerError, LogMetadata};","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4628,"byte_end":4699,"line_start":136,"line_end":136,"column_start":1,"column_end":72}},{"value":"/ # struct SimpleLogger;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4700,"byte_end":4726,"line_start":137,"line_end":137,"column_start":1,"column_end":27}},{"value":"/ # impl log::Log for SimpleLogger {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4727,"byte_end":4765,"line_start":138,"line_end":138,"column_start":1,"column_end":39}},{"value":"/ #   fn enabled(&self, _: &LogMetadata) -> bool { false }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4766,"byte_end":4826,"line_start":139,"line_end":139,"column_start":1,"column_end":61}},{"value":"/ #   fn log(&self, _: &log::LogRecord) {}","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4827,"byte_end":4871,"line_start":140,"line_end":140,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4872,"byte_end":4879,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/ # fn main() {}","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4880,"byte_end":4898,"line_start":142,"line_end":142,"column_start":1,"column_end":19}},{"value":"/ # #[cfg(feature = \"use_std\")]","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4899,"byte_end":4932,"line_start":143,"line_end":143,"column_start":1,"column_end":34}},{"value":"/ pub fn init() -> Result<(), SetLoggerError> {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4933,"byte_end":4982,"line_start":144,"line_end":144,"column_start":1,"column_end":50}},{"value":"/     log::set_logger(|max_log_level| {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":4983,"byte_end":5024,"line_start":145,"line_end":145,"column_start":1,"column_end":42}},{"value":"/         max_log_level.set(LogLevelFilter::Info);","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5025,"byte_end":5077,"line_start":146,"line_end":146,"column_start":1,"column_end":53}},{"value":"/         Box::new(SimpleLogger)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5078,"byte_end":5112,"line_start":147,"line_end":147,"column_start":1,"column_end":35}},{"value":"/     })","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5113,"byte_end":5123,"line_start":148,"line_end":148,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5124,"byte_end":5129,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5130,"byte_end":5137,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5138,"byte_end":5141,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Use with `no_std`","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5142,"byte_end":5165,"line_start":152,"line_end":152,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5166,"byte_end":5169,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ To use the `log` crate without depending on `libstd`, you need to specify","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5170,"byte_end":5247,"line_start":154,"line_end":154,"column_start":1,"column_end":78}},{"value":"/ `default-features = false` when specifying the dependency in `Cargo.toml`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5248,"byte_end":5326,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ This makes no difference to libraries using `log` since the logging API","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5327,"byte_end":5402,"line_start":156,"line_end":156,"column_start":1,"column_end":76}},{"value":"/ remains the same. However executables will need to use the [`set_logger_raw`]","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5403,"byte_end":5484,"line_start":157,"line_end":157,"column_start":1,"column_end":82}},{"value":"/ function to initialize a logger and the [`shutdown_logger_raw`] function to","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5485,"byte_end":5564,"line_start":158,"line_end":158,"column_start":1,"column_end":80}},{"value":"/ shut down the global logger before exiting:","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5565,"byte_end":5612,"line_start":159,"line_end":159,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5613,"byte_end":5616,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5617,"byte_end":5628,"line_start":161,"line_end":161,"column_start":1,"column_end":12}},{"value":"/ # extern crate log;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5629,"byte_end":5652,"line_start":162,"line_end":162,"column_start":1,"column_end":24}},{"value":"/ # use log::{LogLevel, LogLevelFilter, SetLoggerError, ShutdownLoggerError,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5653,"byte_end":5731,"line_start":163,"line_end":163,"column_start":1,"column_end":79}},{"value":"/ #           LogMetadata};","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5732,"byte_end":5761,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/ # struct SimpleLogger;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5762,"byte_end":5788,"line_start":165,"line_end":165,"column_start":1,"column_end":27}},{"value":"/ # impl log::Log for SimpleLogger {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5789,"byte_end":5827,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/ #   fn enabled(&self, _: &LogMetadata) -> bool { false }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5828,"byte_end":5888,"line_start":167,"line_end":167,"column_start":1,"column_end":61}},{"value":"/ #   fn log(&self, _: &log::LogRecord) {}","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5889,"byte_end":5933,"line_start":168,"line_end":168,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5934,"byte_end":5941,"line_start":169,"line_end":169,"column_start":1,"column_end":8}},{"value":"/ # impl SimpleLogger {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5942,"byte_end":5967,"line_start":170,"line_end":170,"column_start":1,"column_end":26}},{"value":"/ #   fn flush(&self) {}","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5968,"byte_end":5994,"line_start":171,"line_end":171,"column_start":1,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":5995,"byte_end":6002,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ # fn main() {}","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6003,"byte_end":6021,"line_start":173,"line_end":173,"column_start":1,"column_end":19}},{"value":"/ pub fn init() -> Result<(), SetLoggerError> {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6022,"byte_end":6071,"line_start":174,"line_end":174,"column_start":1,"column_end":50}},{"value":"/     unsafe {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6072,"byte_end":6088,"line_start":175,"line_end":175,"column_start":1,"column_end":17}},{"value":"/         log::set_logger_raw(|max_log_level| {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6089,"byte_end":6138,"line_start":176,"line_end":176,"column_start":1,"column_end":50}},{"value":"/             static LOGGER: SimpleLogger = SimpleLogger;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6139,"byte_end":6198,"line_start":177,"line_end":177,"column_start":1,"column_end":60}},{"value":"/             max_log_level.set(LogLevelFilter::Info);","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6199,"byte_end":6255,"line_start":178,"line_end":178,"column_start":1,"column_end":57}},{"value":"/             &SimpleLogger","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6256,"byte_end":6285,"line_start":179,"line_end":179,"column_start":1,"column_end":30}},{"value":"/         })","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6286,"byte_end":6300,"line_start":180,"line_end":180,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6301,"byte_end":6310,"line_start":181,"line_end":181,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6311,"byte_end":6316,"line_start":182,"line_end":182,"column_start":1,"column_end":6}},{"value":"/ pub fn shutdown() -> Result<(), ShutdownLoggerError> {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6317,"byte_end":6375,"line_start":183,"line_end":183,"column_start":1,"column_end":59}},{"value":"/     log::shutdown_logger_raw().map(|logger| {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6376,"byte_end":6425,"line_start":184,"line_end":184,"column_start":1,"column_end":50}},{"value":"/         let logger = unsafe { &*(logger as *const SimpleLogger) };","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6426,"byte_end":6496,"line_start":185,"line_end":185,"column_start":1,"column_end":71}},{"value":"/         logger.flush();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6497,"byte_end":6524,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/     })","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6525,"byte_end":6535,"line_start":187,"line_end":187,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6536,"byte_end":6541,"line_start":188,"line_end":188,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6542,"byte_end":6549,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6550,"byte_end":6553,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ [`Log`]: trait.Log.html","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6554,"byte_end":6581,"line_start":191,"line_end":191,"column_start":1,"column_end":28}},{"value":"/ [level_link]: enum.LogLevel.html","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6582,"byte_end":6618,"line_start":192,"line_end":192,"column_start":1,"column_end":37}},{"value":"/ [`set_logger`]: fn.set_logger.html","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6619,"byte_end":6657,"line_start":193,"line_end":193,"column_start":1,"column_end":39}},{"value":"/ [`MaxLogLevelFilter`]: struct.MaxLogLevelFilter.html","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6658,"byte_end":6714,"line_start":194,"line_end":194,"column_start":1,"column_end":57}},{"value":"/ [`set_logger_raw`]: fn.set_logger_raw.html","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6715,"byte_end":6761,"line_start":195,"line_end":195,"column_start":1,"column_end":47}},{"value":"/ [`shutdown_logger_raw`]: fn.shutdown_logger_raw.html","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":6762,"byte_end":6818,"line_start":196,"line_end":196,"column_start":1,"column_end":57}},{"value":"warn(missing_docs)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":7032,"byte_end":7054,"line_start":201,"line_end":201,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":7055,"byte_end":7094,"line_start":202,"line_end":202,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":145},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":9870,"byte_end":9875,"line_start":271,"line_end":271,"column_start":5,"column_end":10},"name":"Error","qualname":"::LogLevel::Error","value":"LogLevel::Error","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" The \"error\" level.","sig":null,"attributes":[{"value":"/ The \"error\" level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":9795,"byte_end":9817,"line_start":268,"line_end":268,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":9822,"byte_end":9825,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ Designates very serious errors.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":9830,"byte_end":9865,"line_start":270,"line_end":270,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":148},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10034,"byte_end":10038,"line_start":275,"line_end":275,"column_start":5,"column_end":9},"name":"Warn","qualname":"::LogLevel::Warn","value":"LogLevel::Warn","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" The \"warn\" level.","sig":null,"attributes":[{"value":"/ The \"warn\" level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":9959,"byte_end":9980,"line_start":272,"line_end":272,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":9985,"byte_end":9988,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Designates hazardous situations.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":9993,"byte_end":10029,"line_start":274,"line_end":274,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":150},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10117,"byte_end":10121,"line_start":279,"line_end":279,"column_start":5,"column_end":9},"name":"Info","qualname":"::LogLevel::Info","value":"LogLevel::Info","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" The \"info\" level.","sig":null,"attributes":[{"value":"/ The \"info\" level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10044,"byte_end":10065,"line_start":276,"line_end":276,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10070,"byte_end":10073,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Designates useful information.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10078,"byte_end":10112,"line_start":278,"line_end":278,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":152},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10209,"byte_end":10214,"line_start":283,"line_end":283,"column_start":5,"column_end":10},"name":"Debug","qualname":"::LogLevel::Debug","value":"LogLevel::Debug","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" The \"debug\" level.","sig":null,"attributes":[{"value":"/ The \"debug\" level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10127,"byte_end":10149,"line_start":280,"line_end":280,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10154,"byte_end":10157,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Designates lower priority information.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10162,"byte_end":10204,"line_start":282,"line_end":282,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":154},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10331,"byte_end":10336,"line_start":287,"line_end":287,"column_start":5,"column_end":10},"name":"Trace","qualname":"::LogLevel::Trace","value":"LogLevel::Trace","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" The \"trace\" level.","sig":null,"attributes":[{"value":"/ The \"trace\" level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10220,"byte_end":10242,"line_start":284,"line_end":284,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10247,"byte_end":10250,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Designates very low priority, often extremely verbose, information.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10255,"byte_end":10326,"line_start":286,"line_end":286,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":144},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":9780,"byte_end":9788,"line_start":267,"line_end":267,"column_start":10,"column_end":18},"name":"LogLevel","qualname":"::LogLevel","value":"pub enum LogLevel {\n\n    /// The \"error\" level.\n    ///\n    /// Designates very serious errors.\n    Error = ,\n\n    /// The \"warn\" level.\n    ///\n    /// Designates hazardous situations.\n    Warn,\n\n    /// The \"info\" level.\n    ///\n    /// Designates useful information.\n    Info,\n\n    /// The \"debug\" level.\n    ///\n    /// Designates lower priority information.\n    Debug,\n\n    /// The \"trace\" level.\n    ///\n    /// Designates very low priority, often extremely verbose, information.\n    Trace,\n}","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154}],"decl_id":null,"docs":" An enum representing the available verbosity levels of the logging framework.","sig":null,"attributes":[{"value":"/ An enum representing the available verbosity levels of the logging framework.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":9364,"byte_end":9445,"line_start":259,"line_end":259,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":9446,"byte_end":9449,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ Typical usage includes: checking if a certain `LogLevel` is enabled with","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":9450,"byte_end":9526,"line_start":261,"line_end":261,"column_start":1,"column_end":77}},{"value":"/ [`log_enabled!`](macro.log_enabled.html), specifying the `LogLevel` of","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":9527,"byte_end":9601,"line_start":262,"line_end":262,"column_start":1,"column_end":75}},{"value":"/ [`log!`](macro.log.html), and comparing a `LogLevel` directly to a","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":9602,"byte_end":9672,"line_start":263,"line_end":263,"column_start":1,"column_end":71}},{"value":"/ [`LogLevelFilter`](enum.LogLevelFilter.html).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":9673,"byte_end":9722,"line_start":264,"line_end":264,"column_start":1,"column_end":50}},{"value":"repr(usize)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":9723,"byte_end":9737,"line_start":265,"line_end":265,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":12771,"byte_end":12774,"line_start":390,"line_end":390,"column_start":12,"column_end":15},"name":"max","qualname":"<LogLevel>::max","value":"pub fn max() -> LogLevel","parent":null,"children":[],"decl_id":null,"docs":" Returns the most verbose logging level.\n","sig":null,"attributes":[{"value":"/ Returns the most verbose logging level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":12702,"byte_end":12745,"line_start":388,"line_end":388,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":12750,"byte_end":12759,"line_start":389,"line_end":389,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":12915,"byte_end":12934,"line_start":396,"line_end":396,"column_start":12,"column_end":31},"name":"to_log_level_filter","qualname":"<LogLevel>::to_log_level_filter","value":"pub fn to_log_level_filter(&Self) -> LogLevelFilter","parent":null,"children":[],"decl_id":null,"docs":" Converts the `LogLevel` to the equivalent `LogLevelFilter`.\n","sig":null,"attributes":[{"value":"/ Converts the `LogLevel` to the equivalent `LogLevelFilter`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":12826,"byte_end":12889,"line_start":394,"line_end":394,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":12894,"byte_end":12903,"line_start":395,"line_end":395,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":166},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13607,"byte_end":13610,"line_start":413,"line_end":413,"column_start":5,"column_end":8},"name":"Off","qualname":"::LogLevelFilter::Off","value":"LogLevelFilter::Off","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" A level lower than all log levels.\n","sig":null,"attributes":[{"value":"/ A level lower than all log levels.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13564,"byte_end":13602,"line_start":412,"line_end":412,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":168},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13662,"byte_end":13667,"line_start":415,"line_end":415,"column_start":5,"column_end":10},"name":"Error","qualname":"::LogLevelFilter::Error","value":"LogLevelFilter::Error","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Corresponds to the `Error` log level.\n","sig":null,"attributes":[{"value":"/ Corresponds to the `Error` log level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13616,"byte_end":13657,"line_start":414,"line_end":414,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":170},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13718,"byte_end":13722,"line_start":417,"line_end":417,"column_start":5,"column_end":9},"name":"Warn","qualname":"::LogLevelFilter::Warn","value":"LogLevelFilter::Warn","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Corresponds to the `Warn` log level.\n","sig":null,"attributes":[{"value":"/ Corresponds to the `Warn` log level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13673,"byte_end":13713,"line_start":416,"line_end":416,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":172},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13773,"byte_end":13777,"line_start":419,"line_end":419,"column_start":5,"column_end":9},"name":"Info","qualname":"::LogLevelFilter::Info","value":"LogLevelFilter::Info","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Corresponds to the `Info` log level.\n","sig":null,"attributes":[{"value":"/ Corresponds to the `Info` log level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13728,"byte_end":13768,"line_start":418,"line_end":418,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":174},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13829,"byte_end":13834,"line_start":421,"line_end":421,"column_start":5,"column_end":10},"name":"Debug","qualname":"::LogLevelFilter::Debug","value":"LogLevelFilter::Debug","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Corresponds to the `Debug` log level.\n","sig":null,"attributes":[{"value":"/ Corresponds to the `Debug` log level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13783,"byte_end":13824,"line_start":420,"line_end":420,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":176},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13886,"byte_end":13891,"line_start":423,"line_end":423,"column_start":5,"column_end":10},"name":"Trace","qualname":"::LogLevelFilter::Trace","value":"LogLevelFilter::Trace","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Corresponds to the `Trace` log level.\n","sig":null,"attributes":[{"value":"/ Corresponds to the `Trace` log level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13840,"byte_end":13881,"line_start":422,"line_end":422,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":165},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13543,"byte_end":13557,"line_start":411,"line_end":411,"column_start":10,"column_end":24},"name":"LogLevelFilter","qualname":"::LogLevelFilter","value":"pub enum LogLevelFilter {\n\n    /// A level lower than all log levels.\n    Off,\n\n    /// Corresponds to the `Error` log level.\n    Error,\n\n    /// Corresponds to the `Warn` log level.\n    Warn,\n\n    /// Corresponds to the `Info` log level.\n    Info,\n\n    /// Corresponds to the `Debug` log level.\n    Debug,\n\n    /// Corresponds to the `Trace` log level.\n    Trace,\n}","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176}],"decl_id":null,"docs":" An enum representing the available verbosity level filters of the logging\n framework.","sig":null,"attributes":[{"value":"/ An enum representing the available verbosity level filters of the logging","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13031,"byte_end":13108,"line_start":401,"line_end":401,"column_start":1,"column_end":78}},{"value":"/ framework.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13109,"byte_end":13123,"line_start":402,"line_end":402,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13124,"byte_end":13127,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ A `LogLevelFilter` may be compared directly to a [`LogLevel`](enum.LogLevel.html).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13128,"byte_end":13214,"line_start":404,"line_end":404,"column_start":1,"column_end":87}},{"value":"/ Use this type to [`get()`](struct.MaxLogLevelFilter.html#method.get) and","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13215,"byte_end":13291,"line_start":405,"line_end":405,"column_start":1,"column_end":77}},{"value":"/ [`set()`](struct.MaxLogLevelFilter.html#method.set) the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13292,"byte_end":13351,"line_start":406,"line_end":406,"column_start":1,"column_end":60}},{"value":"/ [`MaxLogLevelFilter`](struct.MaxLogLevelFilter.html), or to match with the getter","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13352,"byte_end":13437,"line_start":407,"line_end":407,"column_start":1,"column_end":86}},{"value":"/ [`max_log_level()`](fn.max_log_level.html).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13438,"byte_end":13485,"line_start":408,"line_end":408,"column_start":1,"column_end":48}},{"value":"repr(usize)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13486,"byte_end":13500,"line_start":409,"line_end":409,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":15833,"byte_end":15836,"line_start":499,"line_end":499,"column_start":12,"column_end":15},"name":"max","qualname":"<LogLevelFilter>::max","value":"pub fn max() -> LogLevelFilter","parent":null,"children":[],"decl_id":null,"docs":" Returns the most verbose logging level filter.\n","sig":null,"attributes":[{"value":"/ Returns the most verbose logging level filter.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":15757,"byte_end":15807,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":15812,"byte_end":15821,"line_start":498,"line_end":498,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16042,"byte_end":16054,"line_start":507,"line_end":507,"column_start":12,"column_end":24},"name":"to_log_level","qualname":"<LogLevelFilter>::to_log_level","value":"pub fn to_log_level(&Self) -> Option<LogLevel>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` to the equivalent `LogLevel`.","sig":null,"attributes":[{"value":"/ Converts `self` to the equivalent `LogLevel`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":15900,"byte_end":15949,"line_start":503,"line_end":503,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":15954,"byte_end":15957,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is `LogLevelFilter::Off`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":15962,"byte_end":16016,"line_start":505,"line_end":505,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16021,"byte_end":16030,"line_start":506,"line_end":506,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":187},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16371,"byte_end":16380,"line_start":518,"line_end":518,"column_start":12,"column_end":21},"name":"LogRecord","qualname":"::LogRecord","value":"LogRecord {  }","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191}],"decl_id":null,"docs":" The \"payload\" of a log message. This structure is primarily used as a\n parameter in the [`log`] method of the [`Log`] trait.","sig":null,"attributes":[{"value":"/ The \"payload\" of a log message. This structure is primarily used as a","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16138,"byte_end":16211,"line_start":512,"line_end":512,"column_start":1,"column_end":74}},{"value":"/ parameter in the [`log`] method of the [`Log`] trait.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16212,"byte_end":16269,"line_start":513,"line_end":513,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16270,"byte_end":16273,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ [`log`]: trait.Log.html#tymethod.log","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16274,"byte_end":16314,"line_start":515,"line_end":515,"column_start":1,"column_end":41}},{"value":"/ [`Log`]: trait.Log.html","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16315,"byte_end":16342,"line_start":516,"line_end":516,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16544,"byte_end":16548,"line_start":526,"line_end":526,"column_start":12,"column_end":16},"name":"args","qualname":"<LogRecord>::args","value":"pub fn args(&Self) -> &fmt::Arguments","parent":null,"children":[],"decl_id":null,"docs":" The message body.\n","sig":null,"attributes":[{"value":"/ The message body.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16511,"byte_end":16532,"line_start":525,"line_end":525,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16660,"byte_end":16668,"line_start":531,"line_end":531,"column_start":12,"column_end":20},"name":"metadata","qualname":"<LogRecord>::metadata","value":"pub fn metadata(&Self) -> &LogMetadata","parent":null,"children":[],"decl_id":null,"docs":" Metadata about the log directive.\n","sig":null,"attributes":[{"value":"/ Metadata about the log directive.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16611,"byte_end":16648,"line_start":530,"line_end":530,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16778,"byte_end":16786,"line_start":536,"line_end":536,"column_start":12,"column_end":20},"name":"location","qualname":"<LogRecord>::location","value":"pub fn location(&Self) -> &LogLocation","parent":null,"children":[],"decl_id":null,"docs":" The location of the log directive.\n","sig":null,"attributes":[{"value":"/ The location of the log directive.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16728,"byte_end":16766,"line_start":535,"line_end":535,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16896,"byte_end":16901,"line_start":541,"line_end":541,"column_start":12,"column_end":17},"name":"level","qualname":"<LogRecord>::level","value":"pub fn level(&Self) -> LogLevel","parent":null,"children":[],"decl_id":null,"docs":" The verbosity level of the message.\n","sig":null,"attributes":[{"value":"/ The verbosity level of the message.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16845,"byte_end":16884,"line_start":540,"line_end":540,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17020,"byte_end":17026,"line_start":546,"line_end":546,"column_start":12,"column_end":18},"name":"target","qualname":"<LogRecord>::target","value":"pub fn target(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The name of the target of the directive.\n","sig":null,"attributes":[{"value":"/ The name of the target of the directive.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16964,"byte_end":17008,"line_start":545,"line_end":545,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":195},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17184,"byte_end":17195,"line_start":553,"line_end":553,"column_start":12,"column_end":23},"name":"LogMetadata","qualname":"::LogMetadata","value":"LogMetadata {  }","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"decl_id":null,"docs":" Metadata about a log message.\n","sig":null,"attributes":[{"value":"/ Metadata about a log message.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17084,"byte_end":17117,"line_start":551,"line_end":551,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17329,"byte_end":17334,"line_start":560,"line_end":560,"column_start":12,"column_end":17},"name":"level","qualname":"<LogMetadata>::level","value":"pub fn level(&Self) -> LogLevel","parent":null,"children":[],"decl_id":null,"docs":" The verbosity level of the message.\n","sig":null,"attributes":[{"value":"/ The verbosity level of the message.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17278,"byte_end":17317,"line_start":559,"line_end":559,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17442,"byte_end":17448,"line_start":565,"line_end":565,"column_start":12,"column_end":18},"name":"target","qualname":"<LogMetadata>::target","value":"pub fn target(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The name of the target of the directive.\n","sig":null,"attributes":[{"value":"/ The name of the target of the directive.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17386,"byte_end":17430,"line_start":564,"line_end":564,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":95},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17567,"byte_end":17570,"line_start":571,"line_end":571,"column_start":11,"column_end":14},"name":"Log","qualname":"::Log","value":"Log: Sync + Send","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97}],"decl_id":null,"docs":" A trait encapsulating the operations required of a logger\n","sig":null,"attributes":[{"value":"/ A trait encapsulating the operations required of a logger","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17495,"byte_end":17556,"line_start":570,"line_end":570,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17868,"byte_end":17875,"line_start":578,"line_end":578,"column_start":8,"column_end":15},"name":"enabled","qualname":"::Log::enabled","value":"pub fn enabled(&Self, &LogMetadata) -> bool","parent":{"krate":0,"index":95},"children":[],"decl_id":null,"docs":" Determines if a log message with the specified metadata would be\n logged.","sig":null,"attributes":[{"value":"/ Determines if a log message with the specified metadata would be","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17588,"byte_end":17656,"line_start":572,"line_end":572,"column_start":5,"column_end":73}},{"value":"/ logged.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17661,"byte_end":17672,"line_start":573,"line_end":573,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17677,"byte_end":17680,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ This is used by the `log_enabled!` macro to allow callers to avoid","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17685,"byte_end":17755,"line_start":575,"line_end":575,"column_start":5,"column_end":75}},{"value":"/ expensive computation of log message arguments if the message would be","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17760,"byte_end":17834,"line_start":576,"line_end":576,"column_start":5,"column_end":79}},{"value":"/ discarded anyway.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17839,"byte_end":17860,"line_start":577,"line_end":577,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18130,"byte_end":18133,"line_start":585,"line_end":585,"column_start":8,"column_end":11},"name":"log","qualname":"::Log::log","value":"pub fn log(&Self, &LogRecord)","parent":{"krate":0,"index":95},"children":[],"decl_id":null,"docs":" Logs the `LogRecord`.","sig":null,"attributes":[{"value":"/ Logs the `LogRecord`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17921,"byte_end":17946,"line_start":580,"line_end":580,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17951,"byte_end":17954,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ Note that `enabled` is *not* necessarily called before this method.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17959,"byte_end":18030,"line_start":582,"line_end":582,"column_start":5,"column_end":76}},{"value":"/ Implementations of `log` should perform all necessary filtering","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18035,"byte_end":18102,"line_start":583,"line_end":583,"column_start":5,"column_end":72}},{"value":"/ internally.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18107,"byte_end":18122,"line_start":584,"line_end":584,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":223},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18671,"byte_end":18682,"line_start":605,"line_end":605,"column_start":12,"column_end":23},"name":"LogLocation","qualname":"::LogLocation","value":"LogLocation { __module_path, __file, __line }","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226}],"decl_id":null,"docs":" The location of a log message.","sig":null,"attributes":[{"value":"/ The location of a log message.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18355,"byte_end":18389,"line_start":597,"line_end":597,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18390,"byte_end":18393,"line_start":598,"line_end":598,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18394,"byte_end":18407,"line_start":599,"line_end":599,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18408,"byte_end":18411,"line_start":600,"line_end":600,"column_start":1,"column_end":4}},{"value":"/ The fields of this struct are public so that they may be initialized by the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18412,"byte_end":18491,"line_start":601,"line_end":601,"column_start":1,"column_end":80}},{"value":"/ `log!` macro. They are subject to change at any time and should never be","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18492,"byte_end":18568,"line_start":602,"line_end":602,"column_start":1,"column_end":77}},{"value":"/ accessed directly.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18569,"byte_end":18591,"line_start":603,"line_end":603,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":224},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18712,"byte_end":18725,"line_start":607,"line_end":607,"column_start":9,"column_end":22},"name":"__module_path","qualname":"::LogLocation::__module_path","value":"&'static str","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":225},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18768,"byte_end":18774,"line_start":609,"line_end":609,"column_start":9,"column_end":15},"name":"__file","qualname":"::LogLocation::__file","value":"&'static str","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":226},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18817,"byte_end":18823,"line_start":611,"line_end":611,"column_start":9,"column_end":15},"name":"__line","qualname":"::LogLocation::__line","value":"u32","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18903,"byte_end":18914,"line_start":616,"line_end":616,"column_start":12,"column_end":23},"name":"module_path","qualname":"<LogLocation>::module_path","value":"pub fn module_path(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The module path of the message.\n","sig":null,"attributes":[{"value":"/ The module path of the message.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18856,"byte_end":18891,"line_start":615,"line_end":615,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19025,"byte_end":19029,"line_start":621,"line_end":621,"column_start":12,"column_end":16},"name":"file","qualname":"<LogLocation>::file","value":"pub fn file(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The source file containing the message.\n","sig":null,"attributes":[{"value":"/ The source file containing the message.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18970,"byte_end":19013,"line_start":620,"line_end":620,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19126,"byte_end":19130,"line_start":626,"line_end":626,"column_start":12,"column_end":16},"name":"line","qualname":"<LogLocation>::line","value":"pub fn line(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The line containing the message.\n","sig":null,"attributes":[{"value":"/ The line containing the message.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19078,"byte_end":19114,"line_start":625,"line_end":625,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":107},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19642,"byte_end":19659,"line_start":640,"line_end":640,"column_start":12,"column_end":29},"name":"MaxLogLevelFilter","qualname":"::MaxLogLevelFilter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A token providing read and write access to the global maximum log level\n filter.","sig":null,"attributes":[{"value":"/ A token providing read and write access to the global maximum log level","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19176,"byte_end":19251,"line_start":631,"line_end":631,"column_start":1,"column_end":76}},{"value":"/ filter.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19252,"byte_end":19263,"line_start":632,"line_end":632,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19264,"byte_end":19267,"line_start":633,"line_end":633,"column_start":1,"column_end":4}},{"value":"/ The maximum log level is used as an optimization to avoid evaluating log","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19268,"byte_end":19344,"line_start":634,"line_end":634,"column_start":1,"column_end":77}},{"value":"/ messages that will be ignored by the logger. Any message with a level","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19345,"byte_end":19418,"line_start":635,"line_end":635,"column_start":1,"column_end":74}},{"value":"/ higher than the maximum log level filter will be ignored. A logger should","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19419,"byte_end":19496,"line_start":636,"line_end":636,"column_start":1,"column_end":78}},{"value":"/ make sure to keep the maximum log level filter in sync with its current","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19497,"byte_end":19572,"line_start":637,"line_end":637,"column_start":1,"column_end":76}},{"value":"/ configuration.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19573,"byte_end":19591,"line_start":638,"line_end":638,"column_start":1,"column_end":19}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19592,"byte_end":19630,"line_start":639,"line_end":639,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19904,"byte_end":19907,"line_start":650,"line_end":650,"column_start":12,"column_end":15},"name":"get","qualname":"<MaxLogLevelFilter>::get","value":"pub fn get(&Self) -> LogLevelFilter","parent":null,"children":[],"decl_id":null,"docs":" Gets the current maximum log level filter.\n","sig":null,"attributes":[{"value":"/ Gets the current maximum log level filter.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19846,"byte_end":19892,"line_start":649,"line_end":649,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20013,"byte_end":20016,"line_start":655,"line_end":655,"column_start":12,"column_end":15},"name":"set","qualname":"<MaxLogLevelFilter>::set","value":"pub fn set(&Self, LogLevelFilter)","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum log level.\n","sig":null,"attributes":[{"value":"/ Sets the maximum log level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19970,"byte_end":20001,"line_start":654,"line_end":654,"column_start":5,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":115},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20423,"byte_end":20436,"line_start":666,"line_end":666,"column_start":8,"column_end":21},"name":"max_log_level","qualname":"::max_log_level","value":"pub fn max_log_level() -> LogLevelFilter","parent":null,"children":[],"decl_id":null,"docs":" Returns the current maximum log level.","sig":null,"attributes":[{"value":"/ Returns the current maximum log level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20127,"byte_end":20169,"line_start":660,"line_end":660,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20170,"byte_end":20173,"line_start":661,"line_end":661,"column_start":1,"column_end":4}},{"value":"/ The `log!`, `error!`, `warn!`, `info!`, `debug!`, and `trace!` macros check","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20174,"byte_end":20253,"line_start":662,"line_end":662,"column_start":1,"column_end":80}},{"value":"/ this value and discard any message logged at a higher level. The maximum","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20254,"byte_end":20330,"line_start":663,"line_end":663,"column_start":1,"column_end":77}},{"value":"/ log level is set by the `MaxLogLevel` token passed to loggers.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20331,"byte_end":20397,"line_start":664,"line_end":664,"column_start":1,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20398,"byte_end":20415,"line_start":665,"line_end":665,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":116},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21216,"byte_end":21226,"line_start":686,"line_end":686,"column_start":8,"column_end":18},"name":"set_logger","qualname":"::set_logger","value":"pub fn set_logger<M>(M) -> Result<(), SetLoggerError> where\nM: FnOnce(MaxLogLevelFilter) -> Box<Log>","parent":null,"children":[],"decl_id":null,"docs":" Sets the global logger.","sig":null,"attributes":[{"value":"/ Sets the global logger.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20538,"byte_end":20565,"line_start":670,"line_end":670,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20566,"byte_end":20569,"line_start":671,"line_end":671,"column_start":1,"column_end":4}},{"value":"/ The `make_logger` closure is passed a `MaxLogLevel` object, which the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20570,"byte_end":20643,"line_start":672,"line_end":672,"column_start":1,"column_end":74}},{"value":"/ logger should use to keep the global maximum log level in sync with the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20644,"byte_end":20719,"line_start":673,"line_end":673,"column_start":1,"column_end":76}},{"value":"/ highest log level that the logger will not ignore.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20720,"byte_end":20774,"line_start":674,"line_end":674,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20775,"byte_end":20778,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ This function may only be called once in the lifetime of a program. Any log","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20779,"byte_end":20858,"line_start":676,"line_end":676,"column_start":1,"column_end":80}},{"value":"/ events that occur before the call to `set_logger` completes will be","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20859,"byte_end":20930,"line_start":677,"line_end":677,"column_start":1,"column_end":72}},{"value":"/ ignored.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20931,"byte_end":20943,"line_start":678,"line_end":678,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20944,"byte_end":20947,"line_start":679,"line_end":679,"column_start":1,"column_end":4}},{"value":"/ This function does not typically need to be called manually. Logger","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":20948,"byte_end":21019,"line_start":680,"line_end":680,"column_start":1,"column_end":72}},{"value":"/ implementations should provide an initialization method that calls","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21020,"byte_end":21090,"line_start":681,"line_end":681,"column_start":1,"column_end":71}},{"value":"/ `set_logger` internally.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21091,"byte_end":21119,"line_start":682,"line_end":682,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21120,"byte_end":21123,"line_start":683,"line_end":683,"column_start":1,"column_end":4}},{"value":"/ Requires the `use_std` feature (enabled by default).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21124,"byte_end":21180,"line_start":684,"line_end":684,"column_start":1,"column_end":57}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21181,"byte_end":21208,"line_start":685,"line_end":685,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":119},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":22380,"byte_end":22394,"line_start":713,"line_end":713,"column_start":15,"column_end":29},"name":"set_logger_raw","qualname":"::set_logger_raw","value":"pub unsafe fn set_logger_raw<M>(M) -> Result<(), SetLoggerError> where\nM: FnOnce(MaxLogLevelFilter) -> *const Log","parent":null,"children":[],"decl_id":null,"docs":" Sets the global logger from a raw pointer.","sig":null,"attributes":[{"value":"/ Sets the global logger from a raw pointer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21418,"byte_end":21464,"line_start":691,"line_end":691,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21465,"byte_end":21468,"line_start":692,"line_end":692,"column_start":1,"column_end":4}},{"value":"/ This function is similar to `set_logger` except that it is usable in","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21469,"byte_end":21541,"line_start":693,"line_end":693,"column_start":1,"column_end":73}},{"value":"/ `no_std` code.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21542,"byte_end":21560,"line_start":694,"line_end":694,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21561,"byte_end":21564,"line_start":695,"line_end":695,"column_start":1,"column_end":4}},{"value":"/ The `make_logger` closure is passed a `MaxLogLevel` object, which the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21565,"byte_end":21638,"line_start":696,"line_end":696,"column_start":1,"column_end":74}},{"value":"/ logger should use to keep the global maximum log level in sync with the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21639,"byte_end":21714,"line_start":697,"line_end":697,"column_start":1,"column_end":76}},{"value":"/ highest log level that the logger will not ignore.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21715,"byte_end":21769,"line_start":698,"line_end":698,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21770,"byte_end":21773,"line_start":699,"line_end":699,"column_start":1,"column_end":4}},{"value":"/ This function may only be called once in the lifetime of a program. Any log","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21774,"byte_end":21853,"line_start":700,"line_end":700,"column_start":1,"column_end":80}},{"value":"/ events that occur before the call to `set_logger_raw` completes will be","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21854,"byte_end":21929,"line_start":701,"line_end":701,"column_start":1,"column_end":76}},{"value":"/ ignored.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21930,"byte_end":21942,"line_start":702,"line_end":702,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21943,"byte_end":21946,"line_start":703,"line_end":703,"column_start":1,"column_end":4}},{"value":"/ This function does not typically need to be called manually. Logger","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":21947,"byte_end":22018,"line_start":704,"line_end":704,"column_start":1,"column_end":72}},{"value":"/ implementations should provide an initialization method that calls","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":22019,"byte_end":22089,"line_start":705,"line_end":705,"column_start":1,"column_end":71}},{"value":"/ `set_logger_raw` internally.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":22090,"byte_end":22122,"line_start":706,"line_end":706,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":22123,"byte_end":22126,"line_start":707,"line_end":707,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":22127,"byte_end":22139,"line_start":708,"line_end":708,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":22140,"byte_end":22143,"line_start":709,"line_end":709,"column_start":1,"column_end":4}},{"value":"/ The pointer returned by `make_logger` must remain valid for the entire","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":22144,"byte_end":22218,"line_start":710,"line_end":710,"column_start":1,"column_end":75}},{"value":"/ duration of the program or until `shutdown_logger_raw` is called. In","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":22219,"byte_end":22291,"line_start":711,"line_end":711,"column_start":1,"column_end":73}},{"value":"/ addition, `shutdown_logger` *must not* be called after this function.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":22292,"byte_end":22365,"line_start":712,"line_end":712,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":121},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23380,"byte_end":23395,"line_start":736,"line_end":736,"column_start":8,"column_end":23},"name":"shutdown_logger","qualname":"::shutdown_logger","value":"pub fn shutdown_logger() -> Result<Box<Log>, ShutdownLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the global logger.","sig":null,"attributes":[{"value":"/ Shuts down the global logger.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":22787,"byte_end":22820,"line_start":725,"line_end":725,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":22821,"byte_end":22824,"line_start":726,"line_end":726,"column_start":1,"column_end":4}},{"value":"/ This function may only be called once in the lifetime of a program, and may","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":22825,"byte_end":22904,"line_start":727,"line_end":727,"column_start":1,"column_end":80}},{"value":"/ not be called before `set_logger`. Once the global logger has been shut","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":22905,"byte_end":22980,"line_start":728,"line_end":728,"column_start":1,"column_end":76}},{"value":"/ down, it can no longer be re-initialized by `set_logger`. Any log events","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":22981,"byte_end":23057,"line_start":729,"line_end":729,"column_start":1,"column_end":77}},{"value":"/ that occur after the call to `shutdown_logger` completes will be ignored.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23058,"byte_end":23135,"line_start":730,"line_end":730,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23136,"byte_end":23139,"line_start":731,"line_end":731,"column_start":1,"column_end":4}},{"value":"/ The logger that was originally created by the call to to `set_logger` is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23140,"byte_end":23216,"line_start":732,"line_end":732,"column_start":1,"column_end":77}},{"value":"/ returned on success. At that point it is guaranteed that no other threads","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23217,"byte_end":23294,"line_start":733,"line_end":733,"column_start":1,"column_end":78}},{"value":"/ are concurrently accessing the logger object.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23295,"byte_end":23344,"line_start":734,"line_end":734,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23345,"byte_end":23372,"line_start":735,"line_end":735,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":123},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":24179,"byte_end":24198,"line_start":754,"line_end":754,"column_start":8,"column_end":27},"name":"shutdown_logger_raw","qualname":"::shutdown_logger_raw","value":"pub fn shutdown_logger_raw() -> Result<*const Log, ShutdownLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the global logger.","sig":null,"attributes":[{"value":"/ Shuts down the global logger.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23508,"byte_end":23541,"line_start":740,"line_end":740,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23542,"byte_end":23545,"line_start":741,"line_end":741,"column_start":1,"column_end":4}},{"value":"/ This function is similar to `shutdown_logger` except that it is usable in","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23546,"byte_end":23623,"line_start":742,"line_end":742,"column_start":1,"column_end":78}},{"value":"/ `no_std` code.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23624,"byte_end":23642,"line_start":743,"line_end":743,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23643,"byte_end":23646,"line_start":744,"line_end":744,"column_start":1,"column_end":4}},{"value":"/ This function may only be called once in the lifetime of a program, and may","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23647,"byte_end":23726,"line_start":745,"line_end":745,"column_start":1,"column_end":80}},{"value":"/ not be called before `set_logger_raw`. Once the global logger has been shut","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23727,"byte_end":23806,"line_start":746,"line_end":746,"column_start":1,"column_end":80}},{"value":"/ down, it can no longer be re-initialized by `set_logger_raw`. Any log","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23807,"byte_end":23880,"line_start":747,"line_end":747,"column_start":1,"column_end":74}},{"value":"/ events that occur after the call to `shutdown_logger_raw` completes will be","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23881,"byte_end":23960,"line_start":748,"line_end":748,"column_start":1,"column_end":80}},{"value":"/ ignored.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23961,"byte_end":23973,"line_start":749,"line_end":749,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23974,"byte_end":23977,"line_start":750,"line_end":750,"column_start":1,"column_end":4}},{"value":"/ The pointer that was originally passed to `set_logger_raw` is returned on","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":23978,"byte_end":24055,"line_start":751,"line_end":751,"column_start":1,"column_end":78}},{"value":"/ success. At that point it is guaranteed that no other threads are","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":24056,"byte_end":24125,"line_start":752,"line_end":752,"column_start":1,"column_end":70}},{"value":"/ concurrently accessing the logger object.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":24126,"byte_end":24171,"line_start":753,"line_end":753,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":24968,"byte_end":24982,"line_start":778,"line_end":778,"column_start":12,"column_end":26},"name":"SetLoggerError","qualname":"::SetLoggerError","value":"","parent":null,"children":[],"decl_id":null,"docs":" The type returned by `set_logger` if `set_logger` has already been called.\n","sig":null,"attributes":[{"value":"/ The type returned by `set_logger` if `set_logger` has already been called.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":24822,"byte_end":24900,"line_start":775,"line_end":775,"column_start":1,"column_end":79}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":24901,"byte_end":24939,"line_start":776,"line_end":776,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":251},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":25626,"byte_end":25645,"line_start":797,"line_end":797,"column_start":12,"column_end":31},"name":"ShutdownLoggerError","qualname":"::ShutdownLoggerError","value":"","parent":null,"children":[],"decl_id":null,"docs":" The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has\n already been called or if `set_logger_raw` has not been called yet.\n","sig":null,"attributes":[{"value":"/ The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":25411,"byte_end":25486,"line_start":793,"line_end":793,"column_start":1,"column_end":76}},{"value":"/ already been called or if `set_logger_raw` has not been called yet.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":25487,"byte_end":25558,"line_start":794,"line_end":794,"column_start":1,"column_end":72}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":25559,"byte_end":25597,"line_start":795,"line_end":795,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":141},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":27884,"byte_end":27893,"line_start":880,"line_end":880,"column_start":8,"column_end":17},"name":"__enabled","qualname":"::__enabled","value":"pub fn __enabled(LogLevel, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":142},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":28209,"byte_end":28214,"line_start":892,"line_end":892,"column_start":8,"column_end":13},"name":"__log","qualname":"::__log","value":"pub fn __log(LogLevel, &str, &LogLocation, fmt::Arguments)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":143},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":28732,"byte_end":28750,"line_start":912,"line_end":912,"column_start":8,"column_end":26},"name":"__static_max_level","qualname":"::__static_max_level","value":"pub fn __static_max_level() -> LogLevelFilter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":28692,"byte_end":28709,"line_start":910,"line_end":910,"column_start":1,"column_end":18}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10356,"byte_end":10364,"line_start":290,"line_end":290,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10457,"byte_end":10465,"line_start":297,"line_end":297,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10613,"byte_end":10621,"line_start":304,"line_end":304,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10760,"byte_end":10768,"line_start":311,"line_end":311,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10931,"byte_end":10939,"line_start":318,"line_end":318,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":11110,"byte_end":11118,"line_start":325,"line_end":325,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":11843,"byte_end":11851,"line_start":358,"line_end":358,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":12247,"byte_end":12255,"line_start":370,"line_end":370,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":12382,"byte_end":12390,"line_start":376,"line_end":376,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13965,"byte_end":13979,"line_start":428,"line_end":428,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":14078,"byte_end":14092,"line_start":435,"line_end":435,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":14240,"byte_end":14254,"line_start":442,"line_end":442,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":14368,"byte_end":14382,"line_start":449,"line_end":449,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":14545,"byte_end":14559,"line_start":456,"line_end":456,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":14722,"byte_end":14736,"line_start":463,"line_end":463,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":14889,"byte_end":14903,"line_start":470,"line_end":470,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":15201,"byte_end":15215,"line_start":479,"line_end":479,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":15352,"byte_end":15366,"line_start":485,"line_end":485,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16491,"byte_end":16500,"line_start":524,"line_end":524,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17256,"byte_end":17267,"line_start":558,"line_end":558,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18246,"byte_end":18255,"line_start":591,"line_end":591,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18838,"byte_end":18849,"line_start":614,"line_end":614,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19686,"byte_end":19703,"line_start":642,"line_end":642,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19822,"byte_end":19839,"line_start":648,"line_end":648,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":25011,"byte_end":25025,"line_start":780,"line_end":780,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":25316,"byte_end":25330,"line_start":789,"line_end":789,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":25674,"byte_end":25693,"line_start":799,"line_end":799,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":25945,"byte_end":25964,"line_start":807,"line_end":807,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":27271,"byte_end":27282,"line_start":852,"line_end":852,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":27383,"byte_end":27394,"line_start":858,"line_end":858,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10356,"byte_end":10364,"line_start":290,"line_end":290,"column_start":16,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":144},"to":{"krate":2,"index":1763}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10457,"byte_end":10465,"line_start":297,"line_end":297,"column_start":20,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":144},"to":{"krate":2,"index":1791}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10613,"byte_end":10621,"line_start":304,"line_end":304,"column_start":36,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":144},"to":{"krate":2,"index":1791}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10760,"byte_end":10768,"line_start":311,"line_end":311,"column_start":21,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":144},"to":{"krate":2,"index":1834}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":10931,"byte_end":10939,"line_start":318,"line_end":318,"column_start":37,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":144},"to":{"krate":2,"index":1834}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":11110,"byte_end":11118,"line_start":325,"line_end":325,"column_start":14,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":144},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":11843,"byte_end":11851,"line_start":358,"line_end":358,"column_start":18,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":144},"to":{"krate":2,"index":9023}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":12247,"byte_end":12255,"line_start":370,"line_end":370,"column_start":23,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":144},"to":{"krate":2,"index":6951}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":12382,"byte_end":12390,"line_start":376,"line_end":376,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":13965,"byte_end":13979,"line_start":428,"line_end":428,"column_start":16,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":1763}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":14078,"byte_end":14092,"line_start":435,"line_end":435,"column_start":20,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":1791}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":14240,"byte_end":14254,"line_start":442,"line_end":442,"column_start":30,"column_end":44},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":1791}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":14368,"byte_end":14382,"line_start":449,"line_end":449,"column_start":21,"column_end":35},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":1834}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":14545,"byte_end":14559,"line_start":456,"line_end":456,"column_start":31,"column_end":45},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":1834}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":14722,"byte_end":14736,"line_start":463,"line_end":463,"column_start":14,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":14889,"byte_end":14903,"line_start":470,"line_end":470,"column_start":18,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":9023}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":15201,"byte_end":15215,"line_start":479,"line_end":479,"column_start":23,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":6951}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":15352,"byte_end":15366,"line_start":485,"line_end":485,"column_start":6,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":16491,"byte_end":16500,"line_start":524,"line_end":524,"column_start":10,"column_end":19},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17256,"byte_end":17267,"line_start":558,"line_end":558,"column_start":10,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17572,"byte_end":17576,"line_start":571,"line_end":571,"column_start":16,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":95}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":17577,"byte_end":17581,"line_start":571,"line_end":571,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2074},"to":{"krate":0,"index":95}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18246,"byte_end":18255,"line_start":591,"line_end":591,"column_start":14,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":98},"to":{"krate":0,"index":95}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":18838,"byte_end":18849,"line_start":614,"line_end":614,"column_start":6,"column_end":17},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19686,"byte_end":19703,"line_start":642,"line_end":642,"column_start":21,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":107},"to":{"krate":2,"index":6946}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":19822,"byte_end":19839,"line_start":648,"line_end":648,"column_start":6,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":25011,"byte_end":25025,"line_start":780,"line_end":780,"column_start":23,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":6951}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":25316,"byte_end":25330,"line_start":789,"line_end":789,"column_start":23,"column_end":37},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":246},"to":{"krate":1,"index":1751}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":25674,"byte_end":25693,"line_start":799,"line_end":799,"column_start":23,"column_end":42},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":251},"to":{"krate":2,"index":6951}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":25945,"byte_end":25964,"line_start":807,"line_end":807,"column_start":23,"column_end":42},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":251},"to":{"krate":1,"index":1751}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":27271,"byte_end":27282,"line_start":852,"line_end":852,"column_start":15,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":2298}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.8/src/lib.rs","byte_start":27383,"byte_end":27394,"line_start":858,"line_end":858,"column_start":16,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":2274}}]}