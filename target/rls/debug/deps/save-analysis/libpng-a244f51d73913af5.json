{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3","program":"/home/merlin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","png","/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"flate2\"","--cfg","feature=\"png-encoding\"","-C","metadata=a244f51d73913af5","-C","extra-filename=-a244f51d73913af5","--out-dir","/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps","-L","dependency=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps","--extern","bitflags=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libbitflags-57fd0e7eb3414f12.rmeta","--extern","flate2=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libflate2-93a8122d2b6a147c.rmeta","--extern","inflate=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libinflate-aff90cbde871e50c.rmeta","--extern","libc=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/liblibc-e39463c6afe14535.rmeta","--extern","num_iter=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libnum_iter-1fde068b7a61344d.rmeta","--cap-lints","allow","-L","native=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/build/miniz-sys-7d6826dd97f6dd50/out","--error-format=json","--sysroot","/home/merlin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libpng-a244f51d73913af5.rmeta"},"prelude":{"crate_id":{"name":"png","disambiguator":[13595894482409648405,17395687234961626237]},"crate_root":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src","external_crates":[{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[761217931017169021,11182540429948991214]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2858088706689600179,17176650857302713463]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15879356389475821678,5643460802079966270]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8920863043171661139,6394972819860350927]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7444524629517225000,3862632196027588969]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5618285707243958873,10527758992658711681]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15786611459077781418,3427959288485188730]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7447291644365204408,1470667821728193545]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6110035509052048891,1769159197608489149]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2517392378542245850,1007682534799069383]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10841319041269114641,5435836511512932455]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11288057705607810041,2650294536215064940]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3615958118357796166,6340715783279141278]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5192402504599619502,9026648258735454425]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[18157078792379649936,5967302931976128037]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[7273518522570529581,7645160771462661682]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14392049376104722820,4331661258852677409]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":18,"id":{"name":"bitflags","disambiguator":[5656614714592619485,13367440640135249322]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":19,"id":{"name":"libc","disambiguator":[12211130183356822035,9476985101973045270]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":20,"id":{"name":"num_iter","disambiguator":[993258475165615663,13736826989574935361]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":21,"id":{"name":"num_traits","disambiguator":[870466577841255129,13478256605891367024]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","num":22,"id":{"name":"num_integer","disambiguator":[13276579087369052800,13663960796768683638]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","num":23,"id":{"name":"inflate","disambiguator":[11642679791107358065,4028962663860383318]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","num":24,"id":{"name":"flate2","disambiguator":[5934212303376939947,7114951448075655869]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","num":25,"id":{"name":"miniz_sys","disambiguator":[424789791439439413,506917666875451379]}}],"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":0,"byte_end":1641,"line_start":1,"line_end":45,"column_start":1,"column_end":44}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":1420,"byte_end":1421,"line_start":40,"line_end":40,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"TRANSFORM_EXPAND, TRANSFORM_STRIP_16, TRANSFORM_SCALE_16, TRANSFORM_IDENTITY","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":146},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":1441,"byte_end":1448,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":165},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":1450,"byte_end":1456,"line_start":41,"line_end":41,"column_start":28,"column_end":34},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":1458,"byte_end":1468,"line_start":41,"line_end":41,"column_start":36,"column_end":46},"alias_span":null,"name":"OutputInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":75},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":1470,"byte_end":1486,"line_start":41,"line_end":41,"column_start":48,"column_end":64},"alias_span":null,"name":"StreamingDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":407},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":1488,"byte_end":1495,"line_start":41,"line_end":41,"column_start":66,"column_end":73},"alias_span":null,"name":"Decoded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":444},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":1497,"byte_end":1510,"line_start":41,"line_end":41,"column_start":75,"column_end":88},"alias_span":null,"name":"DecodingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":235},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":1564,"byte_end":1571,"line_start":43,"line_end":43,"column_start":19,"column_end":26},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":251},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":1573,"byte_end":1579,"line_start":43,"line_end":43,"column_start":28,"column_end":34},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":465},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":1581,"byte_end":1594,"line_start":43,"line_end":43,"column_start":36,"column_end":49},"alias_span":null,"name":"EncodingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":45,"line_end":45,"column_start":18,"column_end":27},"alias_span":null,"name":"Parameter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":280},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":1626,"byte_end":1639,"line_start":45,"line_end":45,"column_start":29,"column_end":42},"alias_span":null,"name":"HasParameters","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":0,"byte_end":1641,"line_start":1,"line_end":45,"column_start":1,"column_end":44},"name":"","qualname":"::","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":23},{"krate":0,"index":31},{"krate":0,"index":202},{"krate":0,"index":266},{"krate":0,"index":275},{"krate":0,"index":305},{"krate":0,"index":325},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357}],"decl_id":null,"docs":" # PNG encoder and decoder\n This crate contains a PNG decoder. It supports reading of single lines or whole frames.\n ## The decoder\n The most important types for decoding purposes are [`Decoder`](struct.Decoder.html) and\n [`Reader`](struct.Reader.html). They both wrap a `std::io::Read`.\n `Decoder` serves as a builder for `Reader`. Calling `Decoder::read_info` reads from the `Read` until the\n image data is reached.\n ### Using the decoder\n     use std::fs::File;","sig":null,"attributes":[{"value":"/ # PNG encoder and decoder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":0,"byte_end":29,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"/ This crate contains a PNG decoder. It supports reading of single lines or whole frames.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":30,"byte_end":121,"line_start":2,"line_end":2,"column_start":1,"column_end":92}},{"value":"/ ## The decoder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":122,"byte_end":140,"line_start":3,"line_end":3,"column_start":1,"column_end":19}},{"value":"/ The most important types for decoding purposes are [`Decoder`](struct.Decoder.html) and","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":141,"byte_end":232,"line_start":4,"line_end":4,"column_start":1,"column_end":92}},{"value":"/ [`Reader`](struct.Reader.html). They both wrap a `std::io::Read`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":233,"byte_end":302,"line_start":5,"line_end":5,"column_start":1,"column_end":70}},{"value":"/ `Decoder` serves as a builder for `Reader`. Calling `Decoder::read_info` reads from the `Read` until the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":303,"byte_end":411,"line_start":6,"line_end":6,"column_start":1,"column_end":109}},{"value":"/ image data is reached.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":412,"byte_end":438,"line_start":7,"line_end":7,"column_start":1,"column_end":27}},{"value":"/ ### Using the decoder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":439,"byte_end":464,"line_start":8,"line_end":8,"column_start":1,"column_end":26}},{"value":"/     use std::fs::File;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":465,"byte_end":491,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":492,"byte_end":495,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/     // The decoder is a build for reader and can be used to set various decoding options","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":496,"byte_end":588,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/     // via `Transformations`. The default output transformation is `TRANSFORM_EXPAND","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":589,"byte_end":677,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/     // | TRANSFORM_STRIP_ALPHA`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":678,"byte_end":714,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/     let decoder = png::Decoder::new(File::open(\"tests/pngsuite/basi0g01.png\").unwrap());","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":715,"byte_end":807,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/     let (info, mut reader) = decoder.read_info().unwrap();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":808,"byte_end":870,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/     // Allocate the output buffer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":871,"byte_end":909,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/     let mut buf = vec![0; info.buffer_size()];","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":910,"byte_end":960,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/     // Read the next frame. Currently this function should only called once.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":961,"byte_end":1041,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/     // The default options","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":1042,"byte_end":1072,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/     reader.next_frame(&mut buf).unwrap();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":1073,"byte_end":1118,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/ ## Encoder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":1119,"byte_end":1133,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/ Not available yet","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":1134,"byte_end":1155,"line_start":22,"line_end":22,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"chunk","qualname":"::chunk","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22}],"decl_id":null,"docs":" Chunk types and functions\n","sig":null,"attributes":[{"value":"/ Chunk types and functions","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":1643,"byte_end":1672,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"allow(dead_code)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":1673,"byte_end":1693,"line_start":2,"line_end":2,"column_start":1,"column_end":21}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":1694,"byte_end":1727,"line_start":3,"line_end":3,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":7},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":1738,"byte_end":1747,"line_start":5,"line_end":5,"column_start":10,"column_end":19},"name":"ChunkType","qualname":"::chunk::ChunkType","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":1813,"byte_end":1817,"line_start":10,"line_end":10,"column_start":11,"column_end":15},"name":"IHDR","qualname":"::chunk::IHDR","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Image header\n","sig":null,"attributes":[{"value":"/ Image header","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":1786,"byte_end":1802,"line_start":9,"line_end":9,"column_start":1,"column_end":17}}]},{"kind":"Const","id":{"krate":0,"index":10},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":1879,"byte_end":1883,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"name":"PLTE","qualname":"::chunk::PLTE","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Palette\n","sig":null,"attributes":[{"value":"/ Palette","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":1857,"byte_end":1868,"line_start":11,"line_end":11,"column_start":1,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":11},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":1948,"byte_end":1952,"line_start":14,"line_end":14,"column_start":11,"column_end":15},"name":"IDAT","qualname":"::chunk::IDAT","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Image data\n","sig":null,"attributes":[{"value":"/ Image data","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":1923,"byte_end":1937,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Const","id":{"krate":0,"index":12},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2020,"byte_end":2024,"line_start":16,"line_end":16,"column_start":11,"column_end":15},"name":"IEND","qualname":"::chunk::IEND","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Image trailer\n","sig":null,"attributes":[{"value":"/ Image trailer","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":1992,"byte_end":2009,"line_start":15,"line_end":15,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":13},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2119,"byte_end":2123,"line_start":21,"line_end":21,"column_start":11,"column_end":15},"name":"tRNS","qualname":"::chunk::tRNS","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Transparency\n","sig":null,"attributes":[{"value":"/ Transparency","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2092,"byte_end":2108,"line_start":20,"line_end":20,"column_start":1,"column_end":17}}]},{"kind":"Const","id":{"krate":0,"index":14},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2195,"byte_end":2199,"line_start":23,"line_end":23,"column_start":11,"column_end":15},"name":"bKGD","qualname":"::chunk::bKGD","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Background colour\n","sig":null,"attributes":[{"value":"/ Background colour","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2163,"byte_end":2184,"line_start":22,"line_end":22,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":15},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2282,"byte_end":2286,"line_start":25,"line_end":25,"column_start":11,"column_end":15},"name":"tIME","qualname":"::chunk::tIME","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Image last-modification time\n","sig":null,"attributes":[{"value":"/ Image last-modification time","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2239,"byte_end":2271,"line_start":24,"line_end":24,"column_start":1,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":16},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2386,"byte_end":2390,"line_start":30,"line_end":30,"column_start":11,"column_end":15},"name":"acTL","qualname":"::chunk::acTL","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Animation control\n","sig":null,"attributes":[{"value":"/ Animation control","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2354,"byte_end":2375,"line_start":29,"line_end":29,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":17},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2458,"byte_end":2462,"line_start":32,"line_end":32,"column_start":11,"column_end":15},"name":"fcTL","qualname":"::chunk::fcTL","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Frame control\n","sig":null,"attributes":[{"value":"/ Frame control","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2430,"byte_end":2447,"line_start":31,"line_end":31,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":18},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2527,"byte_end":2531,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"name":"fdAT","qualname":"::chunk::fdAT","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Frame data\n","sig":null,"attributes":[{"value":"/ Frame data","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2502,"byte_end":2516,"line_start":33,"line_end":33,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":19},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2657,"byte_end":2668,"line_start":39,"line_end":39,"column_start":8,"column_end":19},"name":"is_critical","qualname":"::chunk::is_critical","value":"pub fn is_critical(ChunkType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the chunk is critical.\n","sig":null,"attributes":[{"value":"/ Returns true if the chunk is critical.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2607,"byte_end":2649,"line_start":38,"line_end":38,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2772,"byte_end":2782,"line_start":44,"line_end":44,"column_start":8,"column_end":18},"name":"is_private","qualname":"::chunk::is_private","value":"pub fn is_private(ChunkType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the chunk is private.\n","sig":null,"attributes":[{"value":"/ Returns true if the chunk is private.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2723,"byte_end":2764,"line_start":43,"line_end":43,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":21},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2950,"byte_end":2962,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"reserved_set","qualname":"::chunk::reserved_set","value":"pub fn reserved_set(ChunkType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the reserved bit of the chunk name is set.\n If it is set the chunk name is invalid.\n","sig":null,"attributes":[{"value":"/ Checks whether the reserved bit of the chunk name is set.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2837,"byte_end":2898,"line_start":48,"line_end":48,"column_start":1,"column_end":62}},{"value":"/ If it is set the chunk name is invalid.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":2899,"byte_end":2942,"line_start":49,"line_end":49,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":3082,"byte_end":3094,"line_start":55,"line_end":55,"column_start":8,"column_end":20},"name":"save_to_copy","qualname":"::chunk::save_to_copy","value":"pub fn save_to_copy(ChunkType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the chunk is safe to copy if unknown.\n","sig":null,"attributes":[{"value":"/ Returns true if the chunk is safe to copy if unknown.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/chunk.rs","byte_start":3017,"byte_end":3074,"line_start":54,"line_end":54,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":409},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":25761,"byte_end":25768,"line_start":45,"line_end":45,"column_start":5,"column_end":12},"name":"Nothing","qualname":"::decoder::stream::Decoded::Nothing","value":"Decoded::Nothing","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" Nothing decoded yet\n","sig":null,"attributes":[{"value":"/ Nothing decoded yet","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":25733,"byte_end":25756,"line_start":44,"line_end":44,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":411},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":25774,"byte_end":25780,"line_start":46,"line_end":46,"column_start":5,"column_end":11},"name":"Header","qualname":"::decoder::stream::Decoded::Header","value":"Decoded::Header(u32, u32, BitDepth, ColorType, bool)","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":418},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":25823,"byte_end":25833,"line_start":47,"line_end":47,"column_start":5,"column_end":15},"name":"ChunkBegin","qualname":"::decoder::stream::Decoded::ChunkBegin","value":"Decoded::ChunkBegin(u32, ChunkType)","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":422},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":25855,"byte_end":25868,"line_start":48,"line_end":48,"column_start":5,"column_end":18},"name":"ChunkComplete","qualname":"::decoder::stream::Decoded::ChunkComplete","value":"Decoded::ChunkComplete(u32, ChunkType)","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":426},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":25890,"byte_end":25906,"line_start":49,"line_end":49,"column_start":5,"column_end":21},"name":"AnimationControl","qualname":"::decoder::stream::Decoded::AnimationControl","value":"Decoded::AnimationControl(AnimationControl)","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":429},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":25930,"byte_end":25942,"line_start":50,"line_end":50,"column_start":5,"column_end":17},"name":"FrameControl","qualname":"::decoder::stream::Decoded::FrameControl","value":"Decoded::FrameControl(&'a FrameControl)","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":432},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":25998,"byte_end":26007,"line_start":52,"line_end":52,"column_start":5,"column_end":14},"name":"ImageData","qualname":"::decoder::stream::Decoded::ImageData","value":"Decoded::ImageData(&'a [u8])","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" Decoded raw image data.\n","sig":null,"attributes":[{"value":"/ Decoded raw image data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":25966,"byte_end":25993,"line_start":51,"line_end":51,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":435},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":26023,"byte_end":26035,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"name":"PartialChunk","qualname":"::decoder::stream::Decoded::PartialChunk","value":"Decoded::PartialChunk(ChunkType, &'a [u8])","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":439},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":26062,"byte_end":26070,"line_start":54,"line_end":54,"column_start":5,"column_end":13},"name":"ImageEnd","qualname":"::decoder::stream::Decoded::ImageEnd","value":"Decoded::ImageEnd","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":407},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":25715,"byte_end":25722,"line_start":43,"line_end":43,"column_start":10,"column_end":17},"name":"Decoded","qualname":"::decoder::stream::Decoded","value":"pub enum Decoded<'a> {\n\n    /// Nothing decoded yet\n    Nothing,\n    Header(u32, u32, BitDepth, ColorType, bool),\n    ChunkBegin(u32, ChunkType),\n    ChunkComplete(u32, ChunkType),\n    AnimationControl(AnimationControl),\n    FrameControl(&'a FrameControl),\n\n    /// Decoded raw image data.\n    ImageData(&'a [u8]),\n    PartialChunk(ChunkType, &'a [u8]),\n    ImageEnd,\n}","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":418},{"krate":0,"index":422},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":439}],"decl_id":null,"docs":" Result of the decoding process\n","sig":null,"attributes":[{"value":"/ Result of the decoding process","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":25671,"byte_end":25705,"line_start":42,"line_end":42,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":445},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":26121,"byte_end":26128,"line_start":59,"line_end":59,"column_start":5,"column_end":12},"name":"IoError","qualname":"::decoder::stream::DecodingError::IoError","value":"DecodingError::IoError(io::Error)","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":448},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":26145,"byte_end":26151,"line_start":60,"line_end":60,"column_start":5,"column_end":11},"name":"Format","qualname":"::decoder::stream::DecodingError::Format","value":"DecodingError::Format(Cow)","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":451},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":26176,"byte_end":26192,"line_start":61,"line_end":61,"column_start":5,"column_end":21},"name":"InvalidSignature","qualname":"::decoder::stream::DecodingError::InvalidSignature","value":"DecodingError::InvalidSignature","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":453},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":26198,"byte_end":26209,"line_start":62,"line_end":62,"column_start":5,"column_end":16},"name":"CrcMismatch","qualname":"::decoder::stream::DecodingError::CrcMismatch","value":"DecodingError::CrcMismatch { recover, crc_val, crc_sum, chunk }","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":458},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":26440,"byte_end":26445,"line_start":71,"line_end":71,"column_start":5,"column_end":10},"name":"Other","qualname":"::decoder::stream::DecodingError::Other","value":"DecodingError::Other(Cow)","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":461},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":26470,"byte_end":26488,"line_start":72,"line_end":72,"column_start":5,"column_end":23},"name":"CorruptFlateStream","qualname":"::decoder::stream::DecodingError::CorruptFlateStream","value":"DecodingError::CorruptFlateStream","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":444},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":26101,"byte_end":26114,"line_start":58,"line_end":58,"column_start":10,"column_end":23},"name":"DecodingError","qualname":"::decoder::stream::DecodingError","value":"pub enum DecodingError {\n    IoError(io::Error),\n    Format(Cow),\n    InvalidSignature,\n    CrcMismatch {\n        /// bytes to skip to try to recover from this error\n        recover: usize,\n        /// Stored CRC32 value\n        crc_val: u32,\n        /// Calculated CRC32 sum\n        crc_sum: u32,\n        chunk: ChunkType,\n    },\n    Other(Cow),\n    CorruptFlateStream,\n}","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":458},{"krate":0,"index":461}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":75},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":27774,"byte_end":27790,"line_start":121,"line_end":121,"column_start":12,"column_end":28},"name":"StreamingDecoder","qualname":"::decoder::stream::StreamingDecoder","value":"StreamingDecoder {  }","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81}],"decl_id":null,"docs":" PNG StreamingDecoder (low-level interface)\n","sig":null,"attributes":[{"value":"/ PNG StreamingDecoder (low-level interface)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":27716,"byte_end":27762,"line_start":120,"line_end":120,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":28093,"byte_end":28096,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamingDecoder>::new","value":"pub fn new() -> StreamingDecoder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new StreamingDecoder","sig":null,"attributes":[{"value":"/ Creates a new StreamingDecoder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":27999,"byte_end":28033,"line_start":131,"line_end":131,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":28038,"byte_end":28041,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Allocates the internal buffers.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":28046,"byte_end":28081,"line_start":133,"line_end":133,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":28489,"byte_end":28494,"line_start":146,"line_end":146,"column_start":12,"column_end":17},"name":"reset","qualname":"<StreamingDecoder>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the StreamingDecoder\n","sig":null,"attributes":[{"value":"/ Resets the StreamingDecoder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":28446,"byte_end":28477,"line_start":145,"line_end":145,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":29085,"byte_end":29091,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"update","qualname":"<StreamingDecoder>::update","value":"pub fn update<'a>(&'a mut Self, &[u8])\n-> Result<(usize, Decoded), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Low level StreamingDecoder interface.","sig":null,"attributes":[{"value":"/ Low level StreamingDecoder interface.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":28838,"byte_end":28879,"line_start":157,"line_end":157,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":28884,"byte_end":28887,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Allows to stream partial data to the encoder. Returns a tuple containing the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":28892,"byte_end":28972,"line_start":159,"line_end":159,"column_start":5,"column_end":85}},{"value":"/ bytes that have been consumed from the input buffer and the current decoding","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":28977,"byte_end":29057,"line_start":160,"line_end":160,"column_start":5,"column_end":85}},{"value":"/ result.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":29062,"byte_end":29073,"line_start":161,"line_end":161,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":138},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":8039,"byte_end":8049,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"OutputInfo","qualname":"::decoder::OutputInfo","value":"OutputInfo { width, height, color_type, bit_depth, line_size }","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"decl_id":null,"docs":" Output info\n","sig":null,"attributes":[{"value":"/ Output info","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":8012,"byte_end":8027,"line_start":40,"line_end":40,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":139},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":8060,"byte_end":8065,"line_start":42,"line_end":42,"column_start":9,"column_end":14},"name":"width","qualname":"::decoder::OutputInfo::width","value":"u32","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":140},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":8080,"byte_end":8086,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"name":"height","qualname":"::decoder::OutputInfo::height","value":"u32","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":141},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":8101,"byte_end":8111,"line_start":44,"line_end":44,"column_start":9,"column_end":19},"name":"color_type","qualname":"::decoder::OutputInfo::color_type","value":"common::ColorType","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":142},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":8132,"byte_end":8141,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"name":"bit_depth","qualname":"::decoder::OutputInfo::bit_depth","value":"common::BitDepth","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":143},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":8161,"byte_end":8170,"line_start":46,"line_end":46,"column_start":9,"column_end":18},"name":"line_size","qualname":"::decoder::OutputInfo::line_size","value":"usize","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":8267,"byte_end":8278,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"buffer_size","qualname":"<OutputInfo>::buffer_size","value":"pub fn buffer_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size needed to hold a decoded frame\n","sig":null,"attributes":[{"value":"/ Returns the size needed to hold a decoded frame","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":8204,"byte_end":8255,"line_start":50,"line_end":50,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":146},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":8379,"byte_end":8386,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::decoder::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"decl_id":null,"docs":" PNG Decoder\n","sig":null,"attributes":[{"value":"/ PNG Decoder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":8352,"byte_end":8367,"line_start":56,"line_end":56,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":8527,"byte_end":8530,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"pub fn new(R) -> Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":8778,"byte_end":8787,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"read_info","qualname":"<Decoder<R>>::read_info","value":"pub fn read_info(Self) -> Result<(OutputInfo, Reader<R>), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads all meta data until the first IDAT chunk\n","sig":null,"attributes":[{"value":"/ Reads all meta data until the first IDAT chunk","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":8716,"byte_end":8766,"line_start":73,"line_end":73,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":165},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":10667,"byte_end":10673,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"name":"Reader","qualname":"::decoder::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"decl_id":null,"docs":" PNG reader (mostly high-level interface)","sig":null,"attributes":[{"value":"/ PNG reader (mostly high-level interface)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":10539,"byte_end":10583,"line_start":131,"line_end":131,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":10584,"byte_end":10587,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ Provides a high level that iterates over lines or whole images.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":10588,"byte_end":10655,"line_start":133,"line_end":133,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":12836,"byte_end":12840,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"name":"info","qualname":"<Reader<R>>::info","value":"pub fn info(&Self) -> &Info","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":12948,"byte_end":12958,"line_start":213,"line_end":213,"column_start":12,"column_end":22},"name":"next_frame","qualname":"<Reader<R>>::next_frame","value":"pub fn next_frame(&mut Self, &mut [u8]) -> Result<(), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the next frame into `buf`\n","sig":null,"attributes":[{"value":"/ Decodes the next frame into `buf`","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":12899,"byte_end":12936,"line_start":212,"line_end":212,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":13942,"byte_end":13950,"line_start":238,"line_end":238,"column_start":12,"column_end":20},"name":"next_row","qualname":"<Reader<R>>::next_row","value":"pub fn next_row(&mut Self) -> Result<Option<&[u8]>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next processed row of the image\n","sig":null,"attributes":[{"value":"/ Returns the next processed row of the image","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":13883,"byte_end":13930,"line_start":237,"line_end":237,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":14137,"byte_end":14156,"line_start":243,"line_end":243,"column_start":12,"column_end":31},"name":"next_interlaced_row","qualname":"<Reader<R>>::next_interlaced_row","value":"pub fn next_interlaced_row(&mut Self)\n-> Result<Option<(&[u8], Option<(u8, u32, u32)>)>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next processed row of the image\n","sig":null,"attributes":[{"value":"/ Returns the next processed row of the image","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":14078,"byte_end":14125,"line_start":242,"line_end":242,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":17023,"byte_end":17040,"line_start":309,"line_end":309,"column_start":12,"column_end":29},"name":"output_color_type","qualname":"<Reader<R>>::output_color_type","value":"pub fn output_color_type(&mut Self) -> (ColorType, BitDepth)","parent":null,"children":[],"decl_id":null,"docs":" Returns the color type and the number of bits per sample\n of the data returned by `Reader::next_row` and Reader::frames`.\n","sig":null,"attributes":[{"value":"/ Returns the color type and the number of bits per sample","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":16879,"byte_end":16939,"line_start":307,"line_end":307,"column_start":5,"column_end":65}},{"value":"/ of the data returned by `Reader::next_row` and Reader::frames`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":16944,"byte_end":17011,"line_start":308,"line_end":308,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":18253,"byte_end":18271,"line_start":341,"line_end":341,"column_start":12,"column_end":30},"name":"output_buffer_size","qualname":"<Reader<R>>::output_buffer_size","value":"pub fn output_buffer_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes required to hold a deinterlaced image frame\n that is decoded using the given input transformations.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes required to hold a deinterlaced image frame","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":18103,"byte_end":18178,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ that is decoded using the given input transformations.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":18183,"byte_end":18241,"line_start":340,"line_end":340,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":18519,"byte_end":18535,"line_start":348,"line_end":348,"column_start":12,"column_end":28},"name":"output_line_size","qualname":"<Reader<R>>::output_line_size","value":"pub fn output_line_size(&Self, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes required to hold a deinterlaced row.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes required to hold a deinterlaced row.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":18439,"byte_end":18507,"line_start":347,"line_end":347,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":466},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":46347,"byte_end":46354,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"IoError","qualname":"::encoder::EncodingError::IoError","value":"EncodingError::IoError(io::Error)","parent":{"krate":0,"index":465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":469},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":46371,"byte_end":46377,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Format","qualname":"::encoder::EncodingError::Format","value":"EncodingError::Format(Cow)","parent":{"krate":0,"index":465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":465},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":46327,"byte_end":46340,"line_start":18,"line_end":18,"column_start":10,"column_end":23},"name":"EncodingError","qualname":"::encoder::EncodingError","value":"pub enum EncodingError { IoError(io::Error), Format(Cow), }","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":469}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":235},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":47192,"byte_end":47199,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":47280,"byte_end":47283,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W>>::new","value":"pub fn new(W, u32, u32) -> Encoder<W>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":47520,"byte_end":47532,"line_start":69,"line_end":69,"column_start":12,"column_end":24},"name":"write_header","qualname":"<Encoder<W>>::write_header","value":"pub fn write_header(Self) -> Result<Writer<W>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":251},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":48000,"byte_end":48006,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"Writer","qualname":"::encoder::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":48713,"byte_end":48724,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"write_chunk","qualname":"<Writer<W>>::write_chunk","value":"pub fn write_chunk(&mut Self, [u8; ], &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":49103,"byte_end":49119,"line_start":129,"line_end":129,"column_start":12,"column_end":28},"name":"write_image_data","qualname":"<Writer<W>>::write_image_data","value":"pub fn write_image_data(&mut Self, &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the image data.\n","sig":null,"attributes":[{"value":"/ Writes the image data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":49065,"byte_end":49091,"line_start":128,"line_end":128,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":277},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/traits.rs","byte_start":54380,"byte_end":54389,"line_start":4,"line_end":4,"column_start":11,"column_end":20},"name":"Parameter","qualname":"::traits::Parameter","value":"Parameter<Object>","parent":null,"children":[{"krate":0,"index":279}],"decl_id":null,"docs":" Configuration parameter trait\n","sig":null,"attributes":[{"value":"/ Configuration parameter trait","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/traits.rs","byte_start":54336,"byte_end":54369,"line_start":3,"line_end":3,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/traits.rs","byte_start":54407,"byte_end":54416,"line_start":5,"line_end":5,"column_start":8,"column_end":17},"name":"set_param","qualname":"::traits::Parameter::set_param","value":"pub fn set_param(Self, &mut Object)","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":280},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/traits.rs","byte_start":54476,"byte_end":54489,"line_start":9,"line_end":9,"column_start":11,"column_end":24},"name":"HasParameters","qualname":"::traits::HasParameters","value":"HasParameters: Sized","parent":null,"children":[{"krate":0,"index":281}],"decl_id":null,"docs":" Object has parameters\n","sig":null,"attributes":[{"value":"/ Object has parameters","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/traits.rs","byte_start":54440,"byte_end":54465,"line_start":8,"line_end":8,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/traits.rs","byte_start":54506,"byte_end":54509,"line_start":10,"line_end":10,"column_start":8,"column_end":11},"name":"set","qualname":"::traits::HasParameters::set","value":"pub fn set<T: Parameter<Self>>(&mut Self, T) -> &mut Self","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":502},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":57317,"byte_end":57326,"line_start":7,"line_end":7,"column_start":5,"column_end":14},"name":"Grayscale","qualname":"::common::ColorType::Grayscale","value":"ColorType::Grayscale","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":505},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":57336,"byte_end":57339,"line_start":8,"line_end":8,"column_start":5,"column_end":8},"name":"RGB","qualname":"::common::ColorType::RGB","value":"ColorType::RGB","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":508},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":57349,"byte_end":57356,"line_start":9,"line_end":9,"column_start":5,"column_end":12},"name":"Indexed","qualname":"::common::ColorType::Indexed","value":"ColorType::Indexed","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":511},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":57366,"byte_end":57380,"line_start":10,"line_end":10,"column_start":5,"column_end":19},"name":"GrayscaleAlpha","qualname":"::common::ColorType::GrayscaleAlpha","value":"ColorType::GrayscaleAlpha","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":514},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":57390,"byte_end":57394,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"RGBA","qualname":"::common::ColorType::RGBA","value":"ColorType::RGBA","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":501},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":57301,"byte_end":57310,"line_start":6,"line_end":6,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::common::ColorType","value":"pub enum ColorType {\n    Grayscale = ,\n    RGB = ,\n    Indexed = ,\n    GrayscaleAlpha = ,\n    RGBA = ,\n}","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":514}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":57280,"byte_end":57291,"line_start":5,"line_end":5,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":57498,"byte_end":57505,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"samples","qualname":"<ColorType>::samples","value":"pub fn samples(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of samples used per pixel of `ColorType`\n","sig":null,"attributes":[{"value":"/ Returns the number of samples used per pixel of `ColorType`","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":57423,"byte_end":57486,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":57817,"byte_end":57824,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<ColorType>::from_u8","value":"pub fn from_u8(u8) -> Option<ColorType>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Temporary solution until Rust provides a canonical one.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Temporary solution until Rust provides a canonical one.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":57734,"byte_end":57805,"line_start":27,"line_end":27,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":529},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58094,"byte_end":58097,"line_start":40,"line_end":40,"column_start":5,"column_end":8},"name":"One","qualname":"::common::BitDepth::One","value":"BitDepth::One","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":532},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58111,"byte_end":58114,"line_start":41,"line_end":41,"column_start":5,"column_end":8},"name":"Two","qualname":"::common::BitDepth::Two","value":"BitDepth::Two","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":535},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58128,"byte_end":58132,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"Four","qualname":"::common::BitDepth::Four","value":"BitDepth::Four","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":538},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58145,"byte_end":58150,"line_start":43,"line_end":43,"column_start":5,"column_end":10},"name":"Eight","qualname":"::common::BitDepth::Eight","value":"BitDepth::Eight","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":541},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58162,"byte_end":58169,"line_start":44,"line_end":44,"column_start":5,"column_end":12},"name":"Sixteen","qualname":"::common::BitDepth::Sixteen","value":"BitDepth::Sixteen","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":528},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58079,"byte_end":58087,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"name":"BitDepth","qualname":"::common::BitDepth","value":"pub enum BitDepth { One = , Two = , Four = , Eight = , Sixteen = , }","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":541}],"decl_id":null,"docs":" Bit depth of the png file\n","sig":null,"attributes":[{"value":"/ Bit depth of the png file","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":57983,"byte_end":58012,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"repr(u8)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58058,"byte_end":58069,"line_start":38,"line_end":38,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58282,"byte_end":58289,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<BitDepth>::from_u8","value":"pub fn from_u8(u8) -> Option<BitDepth>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Temporary solution until Rust provides a canonical one.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Temporary solution until Rust provides a canonical one.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58199,"byte_end":58270,"line_start":48,"line_end":48,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":555},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58506,"byte_end":58518,"line_start":59,"line_end":59,"column_start":12,"column_end":24},"name":"FrameControl","qualname":"::common::FrameControl","value":"FrameControl { sequence_number, width, height, x_offset, y_offset, delay_num, delay_den, dispose_op, blend_op }","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564}],"decl_id":null,"docs":" Frame control information\n","sig":null,"attributes":[{"value":"/ Frame control information","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58448,"byte_end":58477,"line_start":57,"line_end":57,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":556},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58593,"byte_end":58608,"line_start":61,"line_end":61,"column_start":9,"column_end":24},"name":"sequence_number","qualname":"::common::FrameControl::sequence_number","value":"u32","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" Sequence number of the animation chunk, starting from 0\n","sig":null,"attributes":[{"value":"/ Sequence number of the animation chunk, starting from 0","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58525,"byte_end":58584,"line_start":60,"line_end":60,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":557},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58660,"byte_end":58665,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"name":"width","qualname":"::common::FrameControl::width","value":"u32","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" Width of the following frame\n","sig":null,"attributes":[{"value":"/ Width of the following frame","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58619,"byte_end":58651,"line_start":62,"line_end":62,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":558},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58718,"byte_end":58724,"line_start":65,"line_end":65,"column_start":9,"column_end":15},"name":"height","qualname":"::common::FrameControl::height","value":"u32","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" Height of the following frame\n","sig":null,"attributes":[{"value":"/ Height of the following frame","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58676,"byte_end":58709,"line_start":64,"line_end":64,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":559},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58797,"byte_end":58805,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"name":"x_offset","qualname":"::common::FrameControl::x_offset","value":"u32","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" X position at which to render the following frame\n","sig":null,"attributes":[{"value":"/ X position at which to render the following frame","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58735,"byte_end":58788,"line_start":66,"line_end":66,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":560},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58878,"byte_end":58886,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"name":"y_offset","qualname":"::common::FrameControl::y_offset","value":"u32","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" Y position at which to render the following frame\n","sig":null,"attributes":[{"value":"/ Y position at which to render the following frame","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58816,"byte_end":58869,"line_start":68,"line_end":68,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":561},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58940,"byte_end":58949,"line_start":71,"line_end":71,"column_start":9,"column_end":18},"name":"delay_num","qualname":"::common::FrameControl::delay_num","value":"u16","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" Frame delay fraction numerator\n","sig":null,"attributes":[{"value":"/ Frame delay fraction numerator","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58897,"byte_end":58931,"line_start":70,"line_end":70,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":562},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59005,"byte_end":59014,"line_start":73,"line_end":73,"column_start":9,"column_end":18},"name":"delay_den","qualname":"::common::FrameControl::delay_den","value":"u16","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" Frame delay fraction denominator\n","sig":null,"attributes":[{"value":"/ Frame delay fraction denominator","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58960,"byte_end":58996,"line_start":72,"line_end":72,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":563},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59103,"byte_end":59113,"line_start":75,"line_end":75,"column_start":9,"column_end":19},"name":"dispose_op","qualname":"::common::FrameControl::dispose_op","value":"u8","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" Type of frame area disposal to be done after rendering this frame\n","sig":null,"attributes":[{"value":"/ Type of frame area disposal to be done after rendering this frame","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59025,"byte_end":59094,"line_start":74,"line_end":74,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":564},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59179,"byte_end":59187,"line_start":77,"line_end":77,"column_start":9,"column_end":17},"name":"blend_op","qualname":"::common::FrameControl::blend_op","value":"u8","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" Type of frame area rendering for this frame\n","sig":null,"attributes":[{"value":"/ Type of frame area rendering for this frame","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59123,"byte_end":59170,"line_start":76,"line_end":76,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":567},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59271,"byte_end":59287,"line_start":82,"line_end":82,"column_start":12,"column_end":28},"name":"AnimationControl","qualname":"::common::AnimationControl","value":"AnimationControl { num_frames, num_plays }","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569}],"decl_id":null,"docs":" Animation control information\n","sig":null,"attributes":[{"value":"/ Animation control information","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59196,"byte_end":59229,"line_start":80,"line_end":80,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":568},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59323,"byte_end":59333,"line_start":84,"line_end":84,"column_start":9,"column_end":19},"name":"num_frames","qualname":"::common::AnimationControl::num_frames","value":"u32","parent":{"krate":0,"index":567},"children":[],"decl_id":null,"docs":" Number of frames\n","sig":null,"attributes":[{"value":"/ Number of frames","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59294,"byte_end":59314,"line_start":83,"line_end":83,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":569},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59422,"byte_end":59431,"line_start":86,"line_end":86,"column_start":9,"column_end":18},"name":"num_plays","qualname":"::common::AnimationControl::num_plays","value":"u32","parent":{"krate":0,"index":567},"children":[],"decl_id":null,"docs":" Number of times to loop this APNG.  0 indicates infinite looping.\n","sig":null,"attributes":[{"value":"/ Number of times to loop this APNG.  0 indicates infinite looping.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59344,"byte_end":59413,"line_start":85,"line_end":85,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":575},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59489,"byte_end":59493,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"Info","qualname":"::common::Info","value":"Info { width, height, bit_depth, color_type, interlaced, trns, palette, frame_control, animation_control }","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584}],"decl_id":null,"docs":" PNG info struct\n","sig":null,"attributes":[{"value":"/ PNG info struct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59441,"byte_end":59460,"line_start":89,"line_end":89,"column_start":1,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":576},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59504,"byte_end":59509,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"name":"width","qualname":"::common::Info::width","value":"u32","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":577},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59524,"byte_end":59530,"line_start":93,"line_end":93,"column_start":9,"column_end":15},"name":"height","qualname":"::common::Info::height","value":"u32","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":578},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59545,"byte_end":59554,"line_start":94,"line_end":94,"column_start":9,"column_end":18},"name":"bit_depth","qualname":"::common::Info::bit_depth","value":"common::BitDepth","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":579},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59574,"byte_end":59584,"line_start":95,"line_end":95,"column_start":9,"column_end":19},"name":"color_type","qualname":"::common::Info::color_type","value":"common::ColorType","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":580},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59605,"byte_end":59615,"line_start":96,"line_end":96,"column_start":9,"column_end":19},"name":"interlaced","qualname":"::common::Info::interlaced","value":"bool","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":581},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59631,"byte_end":59635,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"name":"trns","qualname":"::common::Info::trns","value":"std::option::Option<std::vec::Vec<u8>>","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":582},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59662,"byte_end":59669,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"name":"palette","qualname":"::common::Info::palette","value":"std::option::Option<std::vec::Vec<u8>>","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":583},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59696,"byte_end":59709,"line_start":99,"line_end":99,"column_start":9,"column_end":22},"name":"frame_control","qualname":"::common::Info::frame_control","value":"std::option::Option<common::FrameControl>","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":584},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59741,"byte_end":59758,"line_start":100,"line_end":100,"column_start":9,"column_end":26},"name":"animation_control","qualname":"::common::Info::animation_control","value":"std::option::Option<common::AnimationControl>","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":60204,"byte_end":60208,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"size","qualname":"<Info>::size","value":"pub fn size(&Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Size of the image\n","sig":null,"attributes":[{"value":"/ Size of the image","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":60171,"byte_end":60192,"line_start":120,"line_end":120,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":60340,"byte_end":60351,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"is_animated","qualname":"<Info>::is_animated","value":"pub fn is_animated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the image is an APNG image.\n","sig":null,"attributes":[{"value":"/ Returns true if the image is an APNG image.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":60281,"byte_end":60328,"line_start":125,"line_end":125,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":60523,"byte_end":60540,"line_start":131,"line_end":131,"column_start":12,"column_end":29},"name":"animation_control","qualname":"<Info>::animation_control","value":"pub fn animation_control(&Self) -> Option<&AnimationControl>","parent":null,"children":[],"decl_id":null,"docs":" Returns the frame control information of the image\n","sig":null,"attributes":[{"value":"/ Returns the frame control information of the image","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":60457,"byte_end":60511,"line_start":130,"line_end":130,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":60708,"byte_end":60721,"line_start":136,"line_end":136,"column_start":12,"column_end":25},"name":"frame_control","qualname":"<Info>::frame_control","value":"pub fn frame_control(&Self) -> Option<&FrameControl>","parent":null,"children":[],"decl_id":null,"docs":" Returns the frame control information of the current frame\n","sig":null,"attributes":[{"value":"/ Returns the frame control information of the current frame","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":60634,"byte_end":60696,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":60849,"byte_end":60863,"line_start":141,"line_end":141,"column_start":12,"column_end":26},"name":"bits_per_pixel","qualname":"<Info>::bits_per_pixel","value":"pub fn bits_per_pixel(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the bits per pixel\n","sig":null,"attributes":[{"value":"/ Returns the bits per pixel","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":60807,"byte_end":60837,"line_start":140,"line_end":140,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":61000,"byte_end":61015,"line_start":146,"line_end":146,"column_start":12,"column_end":27},"name":"bytes_per_pixel","qualname":"<Info>::bytes_per_pixel","value":"pub fn bytes_per_pixel(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the bytes per pixel\n","sig":null,"attributes":[{"value":"/ Returns the bytes per pixel","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":60957,"byte_end":60988,"line_start":145,"line_end":145,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":61199,"byte_end":61208,"line_start":151,"line_end":151,"column_start":12,"column_end":21},"name":"raw_bytes","qualname":"<Info>::raw_bytes","value":"pub fn raw_bytes(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes needed for one deinterlaced image\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes needed for one deinterlaced image","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":61122,"byte_end":61187,"line_start":150,"line_end":150,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":61371,"byte_end":61385,"line_start":156,"line_end":156,"column_start":12,"column_end":26},"name":"raw_row_length","qualname":"<Info>::raw_row_length","value":"pub fn raw_row_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes needed for one deinterlaced row \n","sig":null,"attributes":[{"value":"/ Returns the number of bytes needed for one deinterlaced row ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":61295,"byte_end":61359,"line_start":155,"line_end":155,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":61720,"byte_end":61745,"line_start":165,"line_end":165,"column_start":12,"column_end":37},"name":"raw_row_length_from_width","qualname":"<Info>::raw_row_length_from_width","value":"pub fn raw_row_length_from_width(&Self, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes needed for one deinterlaced row of width `width`\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes needed for one deinterlaced row of width `width`","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":61628,"byte_end":61708,"line_start":164,"line_end":164,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":680},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":62161,"byte_end":62176,"line_start":179,"line_end":179,"column_start":11,"column_end":26},"name":"Transformations","qualname":"::common::Transformations","value":"Transformations {  }","parent":null,"children":[{"krate":0,"index":681}],"decl_id":null,"docs":" # Output transformations","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":587},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":62228,"byte_end":62246,"line_start":181,"line_end":181,"column_start":15,"column_end":33},"name":"TRANSFORM_IDENTITY","qualname":"::common::TRANSFORM_IDENTITY","value":"Transformations","parent":null,"children":[],"decl_id":null,"docs":" No transformation\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":588},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":62346,"byte_end":62364,"line_start":183,"line_end":183,"column_start":15,"column_end":33},"name":"TRANSFORM_STRIP_16","qualname":"::common::TRANSFORM_STRIP_16","value":"Transformations","parent":null,"children":[],"decl_id":null,"docs":" Strip 16-bit samples to 8 bits\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":589},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":62454,"byte_end":62475,"line_start":185,"line_end":185,"column_start":15,"column_end":36},"name":"TRANSFORM_STRIP_ALPHA","qualname":"::common::TRANSFORM_STRIP_ALPHA","value":"Transformations","parent":null,"children":[],"decl_id":null,"docs":" Discard the alpha channel\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":590},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":62575,"byte_end":62592,"line_start":187,"line_end":187,"column_start":15,"column_end":32},"name":"TRANSFORM_PACKING","qualname":"::common::TRANSFORM_PACKING","value":"Transformations","parent":null,"children":[],"decl_id":null,"docs":" Expand 1, 2 and 4-bit samples to bytes\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":591},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":62705,"byte_end":62723,"line_start":189,"line_end":189,"column_start":15,"column_end":33},"name":"TRANSFORM_PACKSWAP","qualname":"::common::TRANSFORM_PACKSWAP","value":"Transformations","parent":null,"children":[],"decl_id":null,"docs":" Change order of packed pixels to LSB first\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":592},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":62954,"byte_end":62970,"line_start":193,"line_end":193,"column_start":15,"column_end":31},"name":"TRANSFORM_EXPAND","qualname":"::common::TRANSFORM_EXPAND","value":"Transformations","parent":null,"children":[],"decl_id":null,"docs":" Expand paletted images to RGB, expand grayscale images of\n less than 8-bit depth to 8-bit depth, and expand tRNS chunks\n to alpha channels.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":593},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":63061,"byte_end":63082,"line_start":195,"line_end":195,"column_start":15,"column_end":36},"name":"TRANSFORM_INVERT_MONO","qualname":"::common::TRANSFORM_INVERT_MONO","value":"Transformations","parent":null,"children":[],"decl_id":null,"docs":" Invert monochrome images\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":594},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":63183,"byte_end":63198,"line_start":197,"line_end":197,"column_start":15,"column_end":30},"name":"TRANSFORM_SHIFT","qualname":"::common::TRANSFORM_SHIFT","value":"Transformations","parent":null,"children":[],"decl_id":null,"docs":" Normalize pixels to the sBIT depth\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":595},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":63300,"byte_end":63313,"line_start":199,"line_end":199,"column_start":15,"column_end":28},"name":"TRANSFORM_BGR","qualname":"::common::TRANSFORM_BGR","value":"Transformations","parent":null,"children":[],"decl_id":null,"docs":" Flip RGB to BGR, RGBA to BGRA\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":596},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":63417,"byte_end":63437,"line_start":201,"line_end":201,"column_start":15,"column_end":35},"name":"TRANSFORM_SWAP_ALPHA","qualname":"::common::TRANSFORM_SWAP_ALPHA","value":"Transformations","parent":null,"children":[],"decl_id":null,"docs":" Flip RGBA to ARGB or GA to AG\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":597},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":63529,"byte_end":63550,"line_start":203,"line_end":203,"column_start":15,"column_end":36},"name":"TRANSFORM_SWAP_ENDIAN","qualname":"::common::TRANSFORM_SWAP_ENDIAN","value":"Transformations","parent":null,"children":[],"decl_id":null,"docs":" Byte-swap 16-bit samples\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":598},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":63658,"byte_end":63680,"line_start":205,"line_end":205,"column_start":15,"column_end":37},"name":"TRANSFORM_INVERT_ALPHA","qualname":"::common::TRANSFORM_INVERT_ALPHA","value":"Transformations","parent":null,"children":[],"decl_id":null,"docs":" Change alpha from opacity to transparency\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":599},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":63733,"byte_end":63755,"line_start":206,"line_end":206,"column_start":15,"column_end":37},"name":"TRANSFORM_STRIP_FILLER","qualname":"::common::TRANSFORM_STRIP_FILLER","value":"Transformations","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":600},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":63804,"byte_end":63833,"line_start":207,"line_end":207,"column_start":15,"column_end":44},"name":"TRANSFORM_STRIP_FILLER_BEFORE","qualname":"::common::TRANSFORM_STRIP_FILLER_BEFORE","value":"Transformations","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":601},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":63872,"byte_end":63900,"line_start":208,"line_end":208,"column_start":15,"column_end":43},"name":"TRANSFORM_STRIP_FILLER_AFTER","qualname":"::common::TRANSFORM_STRIP_FILLER_AFTER","value":"Transformations","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":602},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":63943,"byte_end":63964,"line_start":209,"line_end":209,"column_start":15,"column_end":36},"name":"TRANSFORM_GRAY_TO_RGB","qualname":"::common::TRANSFORM_GRAY_TO_RGB","value":"Transformations","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":603},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":64014,"byte_end":64033,"line_start":210,"line_end":210,"column_start":15,"column_end":34},"name":"TRANSFORM_EXPAND_16","qualname":"::common::TRANSFORM_EXPAND_16","value":"Transformations","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":604},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":64085,"byte_end":64103,"line_start":211,"line_end":211,"column_start":15,"column_end":33},"name":"TRANSFORM_SCALE_16","qualname":"::common::TRANSFORM_SCALE_16","value":"Transformations","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/crc.rs","byte_start":6554,"byte_end":6559,"line_start":63,"line_end":63,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":26514,"byte_end":26527,"line_start":75,"line_end":75,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":26962,"byte_end":26975,"line_start":89,"line_end":89,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":27149,"byte_end":27162,"line_start":95,"line_end":95,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":27279,"byte_end":27292,"line_start":101,"line_end":101,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":27422,"byte_end":27427,"line_start":107,"line_end":107,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":27976,"byte_end":27992,"line_start":130,"line_end":130,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":7906,"byte_end":7921,"line_start":33,"line_end":33,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":8187,"byte_end":8197,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":8503,"byte_end":8510,"line_start":64,"line_end":64,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":9363,"byte_end":9370,"line_start":92,"line_end":92,"column_start":33,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":9499,"byte_end":9510,"line_start":100,"line_end":100,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":11101,"byte_end":11107,"line_start":155,"line_end":155,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":46423,"byte_end":46436,"line_start":23,"line_end":23,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":46664,"byte_end":46677,"line_start":33,"line_end":33,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":46859,"byte_end":46872,"line_start":39,"line_end":39,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":46999,"byte_end":47004,"line_start":44,"line_end":44,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":47256,"byte_end":47263,"line_start":58,"line_end":58,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":47684,"byte_end":47691,"line_start":77,"line_end":77,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":47740,"byte_end":47749,"line_start":79,"line_end":79,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":47886,"byte_end":47894,"line_start":85,"line_end":85,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":48063,"byte_end":48069,"line_start":96,"line_end":96,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":50123,"byte_end":50129,"line_start":155,"line_end":155,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/filter.rs","byte_start":51250,"byte_end":51260,"line_start":14,"line_end":14,"column_start":7,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/traits.rs","byte_start":56159,"byte_end":56160,"line_start":61,"line_end":61,"column_start":49,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/traits.rs","byte_start":56354,"byte_end":56355,"line_start":69,"line_end":69,"column_start":50,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/traits.rs","byte_start":56589,"byte_end":56590,"line_start":78,"line_end":78,"column_start":50,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/traits.rs","byte_start":56930,"byte_end":56931,"line_start":91,"line_end":91,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":57407,"byte_end":57416,"line_start":14,"line_end":14,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58184,"byte_end":58192,"line_start":47,"line_end":47,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59805,"byte_end":59809,"line_start":103,"line_end":103,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":60160,"byte_end":60164,"line_start":119,"line_end":119,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/utils.rs","byte_start":67099,"byte_end":67112,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/utils.rs","byte_start":68232,"byte_end":68245,"line_start":141,"line_end":141,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/lib.rs","byte_start":1281,"byte_end":1286,"line_start":30,"line_end":30,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/crc.rs","byte_start":6554,"byte_end":6559,"line_start":63,"line_end":63,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":26514,"byte_end":26527,"line_start":75,"line_end":75,"column_start":23,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":444},"to":{"krate":1,"index":1751}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":26962,"byte_end":26975,"line_start":89,"line_end":89,"column_start":23,"column_end":36},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":6951}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":27149,"byte_end":27162,"line_start":95,"line_end":95,"column_start":26,"column_end":39},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":27279,"byte_end":27292,"line_start":101,"line_end":101,"column_start":23,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":27422,"byte_end":27427,"line_start":107,"line_end":107,"column_start":34,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":1,"index":2785},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/stream.rs","byte_start":27976,"byte_end":27992,"line_start":130,"line_end":130,"column_start":6,"column_end":22},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":75},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":7906,"byte_end":7921,"line_start":33,"line_end":33,"column_start":41,"column_end":56},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":680},"to":{"krate":0,"index":277}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":8187,"byte_end":8197,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":8503,"byte_end":8510,"line_start":64,"line_end":64,"column_start":15,"column_end":22},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":9363,"byte_end":9370,"line_start":92,"line_end":92,"column_start":33,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":146},"to":{"krate":0,"index":280}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":9499,"byte_end":9510,"line_start":100,"line_end":100,"column_start":15,"column_end":26},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/decoder/mod.rs","byte_start":11101,"byte_end":11107,"line_start":155,"line_end":155,"column_start":15,"column_end":21},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":46423,"byte_end":46436,"line_start":23,"line_end":23,"column_start":23,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":465},"to":{"krate":1,"index":1751}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":46664,"byte_end":46677,"line_start":33,"line_end":33,"column_start":23,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":465},"to":{"krate":2,"index":6951}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":46859,"byte_end":46872,"line_start":39,"line_end":39,"column_start":26,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":465},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":46999,"byte_end":47004,"line_start":44,"line_end":44,"column_start":34,"column_end":39},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":2785},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":47256,"byte_end":47263,"line_start":58,"line_end":58,"column_start":16,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":47684,"byte_end":47691,"line_start":77,"line_end":77,"column_start":34,"column_end":41},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":235},"to":{"krate":0,"index":280}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":47740,"byte_end":47749,"line_start":79,"line_end":79,"column_start":42,"column_end":51},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":501},"to":{"krate":0,"index":277}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":47886,"byte_end":47894,"line_start":85,"line_end":85,"column_start":42,"column_end":50},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":528},"to":{"krate":0,"index":277}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":48063,"byte_end":48069,"line_start":96,"line_end":96,"column_start":16,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/encoder.rs","byte_start":50123,"byte_end":50129,"line_start":155,"line_end":155,"column_start":25,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":251},"to":{"krate":2,"index":2298}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/filter.rs","byte_start":51250,"byte_end":51260,"line_start":14,"line_end":14,"column_start":7,"column_end":17},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/traits.rs","byte_start":54491,"byte_end":54496,"line_start":9,"line_end":9,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2079},"to":{"krate":0,"index":280}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/traits.rs","byte_start":55784,"byte_end":55788,"line_start":48,"line_end":48,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":3196},"to":{"krate":0,"index":287}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/traits.rs","byte_start":55983,"byte_end":55988,"line_start":55,"line_end":55,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":3257},"to":{"krate":0,"index":290}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/traits.rs","byte_start":56159,"byte_end":56160,"line_start":61,"line_end":61,"column_start":49,"column_end":50},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":294},"to":{"krate":0,"index":287}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/traits.rs","byte_start":56354,"byte_end":56355,"line_start":69,"line_end":69,"column_start":50,"column_end":51},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":297},"to":{"krate":0,"index":287}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/traits.rs","byte_start":56589,"byte_end":56590,"line_start":78,"line_end":78,"column_start":50,"column_end":51},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":300},"to":{"krate":0,"index":287}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/traits.rs","byte_start":56930,"byte_end":56931,"line_start":91,"line_end":91,"column_start":52,"column_end":53},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":303},"to":{"krate":0,"index":290}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":57407,"byte_end":57416,"line_start":14,"line_end":14,"column_start":6,"column_end":15},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":58184,"byte_end":58192,"line_start":47,"line_end":47,"column_start":6,"column_end":14},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":59805,"byte_end":59809,"line_start":103,"line_end":103,"column_start":18,"column_end":22},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":575},"to":{"krate":2,"index":2062}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/common.rs","byte_start":60160,"byte_end":60164,"line_start":119,"line_end":119,"column_start":6,"column_end":10},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/utils.rs","byte_start":67099,"byte_end":67112,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/png-0.4.3/src/utils.rs","byte_start":68232,"byte_end":68245,"line_start":141,"line_end":141,"column_start":19,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":699},"to":{"krate":2,"index":5618}}]}