{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0","program":"/home/merlin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cgmath","/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=a7f7ac0fa7a9683c","-C","extra-filename=-a7f7ac0fa7a9683c","--out-dir","/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps","-L","dependency=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps","--extern","num=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libnum-1141a168d1df345e.rmeta","--extern","rand=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/librand-2b3a996a803fce67.rmeta","--extern","rustc_serialize=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/librustc_serialize-d3cfd82f0bc10c2d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/merlin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libcgmath-a7f7ac0fa7a9683c.rmeta"},"prelude":{"crate_id":{"name":"cgmath","disambiguator":[18379579236086711145,2830676016578753421]},"crate_root":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src","external_crates":[{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[761217931017169021,11182540429948991214]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2858088706689600179,17176650857302713463]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15879356389475821678,5643460802079966270]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8920863043171661139,6394972819860350927]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7444524629517225000,3862632196027588969]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5618285707243958873,10527758992658711681]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15786611459077781418,3427959288485188730]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7447291644365204408,1470667821728193545]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6110035509052048891,1769159197608489149]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2517392378542245850,1007682534799069383]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10841319041269114641,5435836511512932455]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11288057705607810041,2650294536215064940]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3615958118357796166,6340715783279141278]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5192402504599619502,9026648258735454425]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[18157078792379649936,5967302931976128037]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[7273518522570529581,7645160771462661682]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14392049376104722820,4331661258852677409]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":18,"id":{"name":"num","disambiguator":[16723509055593342059,190299314718485005]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":19,"id":{"name":"num_traits","disambiguator":[870466577841255129,13478256605891367024]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":20,"id":{"name":"num_integer","disambiguator":[13276579087369052800,13663960796768683638]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":21,"id":{"name":"num_iter","disambiguator":[993258475165615663,13736826989574935361]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":22,"id":{"name":"num_complex","disambiguator":[3062671098455844960,16649696466364840033]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":23,"id":{"name":"rustc_serialize","disambiguator":[17911034919332468352,14258196744612283311]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":24,"id":{"name":"num_bigint","disambiguator":[3427165466807514889,2435088450063240992]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":25,"id":{"name":"rand","disambiguator":[2681138644075121271,7886607485055903368]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":26,"id":{"name":"libc","disambiguator":[12211130183356822035,9476985101973045270]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","num":27,"id":{"name":"num_rational","disambiguator":[12286271487378218204,10817775032505011637]}}],"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":721,"byte_end":2094,"line_start":16,"line_end":73,"column_start":1,"column_end":9}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1672,"byte_end":1673,"line_start":38,"line_end":38,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1691,"byte_end":1692,"line_start":39,"line_end":39,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1714,"byte_end":1715,"line_start":40,"line_end":40,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1733,"byte_end":1734,"line_start":41,"line_end":41,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1752,"byte_end":1753,"line_start":43,"line_end":43,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1770,"byte_end":1771,"line_start":44,"line_end":44,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1791,"byte_end":1792,"line_start":45,"line_end":45,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1813,"byte_end":1814,"line_start":46,"line_end":46,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1837,"byte_end":1838,"line_start":48,"line_end":48,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":747},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1857,"byte_end":1865,"line_start":50,"line_end":50,"column_start":17,"column_end":25},"alias_span":null,"name":"ApproxEq","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1880,"byte_end":1881,"line_start":51,"line_end":51,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":40},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1903,"byte_end":1906,"line_start":53,"line_end":53,"column_start":20,"column_end":23},"alias_span":null,"name":"One","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":36},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1908,"byte_end":1912,"line_start":53,"line_end":53,"column_start":25,"column_end":29},"alias_span":null,"name":"Zero","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":45},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1914,"byte_end":1917,"line_start":53,"line_end":53,"column_start":31,"column_end":34},"alias_span":null,"name":"one","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":43},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1919,"byte_end":1923,"line_start":53,"line_end":53,"column_start":36,"column_end":40},"alias_span":null,"name":"zero","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":721,"byte_end":2094,"line_start":16,"line_end":73,"column_start":1,"column_end":9},"name":"","qualname":"::","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":29},{"krate":0,"index":42},{"krate":0,"index":255},{"krate":0,"index":387},{"krate":0,"index":463},{"krate":0,"index":512},{"krate":0,"index":550},{"krate":0,"index":646},{"krate":0,"index":713},{"krate":0,"index":742},{"krate":0,"index":755}],"decl_id":null,"docs":" Computer graphics-centric math.","sig":null,"attributes":[{"value":"/ Computer graphics-centric math.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":721,"byte_end":756,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":757,"byte_end":760,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This crate provides useful mathematical primitives and operations on them.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":761,"byte_end":839,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ It is organized into one module per primitive. The core structures are","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":840,"byte_end":914,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ vectors and matrices. A strongly-typed interface is provided, to prevent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":915,"byte_end":991,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ mixing units or violating mathematical invariants.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":992,"byte_end":1046,"line_start":21,"line_end":21,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1047,"byte_end":1050,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Transformations are not usually done directly on matrices, but go through","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1051,"byte_end":1128,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ transformation objects that can be converted to matrices. Rotations go","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1129,"byte_end":1203,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ through the `Basis` types, which are guaranteed to be orthogonal matrices.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1204,"byte_end":1282,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ Despite this, one can directly create a limited rotation matrix using the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1283,"byte_end":1360,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ `look_at`, `from_angle`, `from_euler`, and `from_axis_angle` methods.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1361,"byte_end":1434,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ These are provided for convenience.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/lib.rs","byte_start":1435,"byte_end":1474,"line_start":28,"line_end":28,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":33},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":10907,"byte_end":10912,"line_start":22,"line_end":22,"column_start":11,"column_end":16},"name":"Array","qualname":"::array::Array","value":"Array","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":" An array containing elements of type `Element`\n","sig":null,"attributes":[{"value":"/ An array containing elements of type `Element`","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":10846,"byte_end":10896,"line_start":21,"line_end":21,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":34},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":11120,"byte_end":11127,"line_start":27,"line_end":27,"column_start":10,"column_end":17},"name":"Element","qualname":"::array::Array::Element","value":"type Element: Copy;","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":11216,"byte_end":11222,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"as_ptr","qualname":"::array::Array::as_ptr","value":"pub fn as_ptr(&Self) -> *const Self::Element","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Get the pointer to the first element of the array.\n","sig":null,"attributes":[{"value":"/ Get the pointer to the first element of the array.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":11140,"byte_end":11194,"line_start":29,"line_end":29,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":11199,"byte_end":11208,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":11366,"byte_end":11376,"line_start":37,"line_end":37,"column_start":8,"column_end":18},"name":"as_mut_ptr","qualname":"::array::Array::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut Self::Element","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Get a mutable pointer to the first element of the array.\n","sig":null,"attributes":[{"value":"/ Get a mutable pointer to the first element of the array.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":11284,"byte_end":11344,"line_start":35,"line_end":35,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":11349,"byte_end":11358,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":11520,"byte_end":11533,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"swap_elements","qualname":"::array::Array::swap_elements","value":"pub fn swap_elements(&mut Self, usize, usize)","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Swap the elements at indices `i` and `j` in-place.\n","sig":null,"attributes":[{"value":"/ Swap the elements at indices `i` and `j` in-place.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":11444,"byte_end":11498,"line_start":41,"line_end":41,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":11503,"byte_end":11512,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":11751,"byte_end":11754,"line_start":49,"line_end":49,"column_start":8,"column_end":11},"name":"sum","qualname":"::array::Array::sum","value":"pub fn sum(Self) -> Self::Element where Self::Element: Add<Output =\n<Self as Array>::Element>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" The sum of the elements of the array.\n","sig":null,"attributes":[{"value":"/ The sum of the elements of the array.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":11702,"byte_end":11743,"line_start":48,"line_end":48,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":11897,"byte_end":11904,"line_start":52,"line_end":52,"column_start":8,"column_end":15},"name":"product","qualname":"::array::Array::product","value":"pub fn product(Self) -> Self::Element where Self::Element: Mul<Output =\n<Self as Array>::Element>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" The product of the elements of the array.\n","sig":null,"attributes":[{"value":"/ The product of the elements of the array.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":11844,"byte_end":11889,"line_start":51,"line_end":51,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":12039,"byte_end":12042,"line_start":55,"line_end":55,"column_start":8,"column_end":11},"name":"min","qualname":"::array::Array::min","value":"pub fn min(Self) -> Self::Element where Self::Element: PartialOrd","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" The minimum element of the array.\n","sig":null,"attributes":[{"value":"/ The minimum element of the array.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":11994,"byte_end":12031,"line_start":54,"line_end":54,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":12149,"byte_end":12152,"line_start":58,"line_end":58,"column_start":8,"column_end":11},"name":"max","qualname":"::array::Array::max","value":"pub fn max(Self) -> Self::Element where Self::Element: PartialOrd","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" The maximum element of the array.\n","sig":null,"attributes":[{"value":"/ The maximum element of the array.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/array.rs","byte_start":12104,"byte_end":12141,"line_start":57,"line_end":57,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":785},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13456,"byte_end":13463,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"Matrix2","qualname":"::matrix::Matrix2","value":"Matrix2 { x, y }","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788}],"decl_id":null,"docs":" A 2 x 2, column major matrix\n","sig":null,"attributes":[{"value":"/ A 2 x 2, column major matrix","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13346,"byte_end":13378,"line_start":37,"line_end":37,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":787},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13473,"byte_end":13474,"line_start":39,"line_end":39,"column_start":29,"column_end":30},"name":"x","qualname":"::matrix::Matrix2::x","value":"vector::Vector2<S>","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":788},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13492,"byte_end":13493,"line_start":39,"line_end":39,"column_start":48,"column_end":49},"name":"y","qualname":"::matrix::Matrix2::y","value":"vector::Vector2<S>","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":812},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13619,"byte_end":13626,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"Matrix3","qualname":"::matrix::Matrix3","value":"Matrix3 { x, y, z }","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816}],"decl_id":null,"docs":" A 3 x 3, column major matrix\n","sig":null,"attributes":[{"value":"/ A 3 x 3, column major matrix","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13509,"byte_end":13541,"line_start":41,"line_end":41,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":814},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13636,"byte_end":13637,"line_start":43,"line_end":43,"column_start":29,"column_end":30},"name":"x","qualname":"::matrix::Matrix3::x","value":"vector::Vector3<S>","parent":{"krate":0,"index":812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":815},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13655,"byte_end":13656,"line_start":43,"line_end":43,"column_start":48,"column_end":49},"name":"y","qualname":"::matrix::Matrix3::y","value":"vector::Vector3<S>","parent":{"krate":0,"index":812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":816},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13674,"byte_end":13675,"line_start":43,"line_end":43,"column_start":67,"column_end":68},"name":"z","qualname":"::matrix::Matrix3::z","value":"vector::Vector3<S>","parent":{"krate":0,"index":812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":841},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13801,"byte_end":13808,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"Matrix4","qualname":"::matrix::Matrix4","value":"Matrix4 { x, y, z, w }","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846}],"decl_id":null,"docs":" A 4 x 4, column major matrix\n","sig":null,"attributes":[{"value":"/ A 4 x 4, column major matrix","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13691,"byte_end":13723,"line_start":45,"line_end":45,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":843},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13818,"byte_end":13819,"line_start":47,"line_end":47,"column_start":29,"column_end":30},"name":"x","qualname":"::matrix::Matrix4::x","value":"vector::Vector4<S>","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":844},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13837,"byte_end":13838,"line_start":47,"line_end":47,"column_start":48,"column_end":49},"name":"y","qualname":"::matrix::Matrix4::y","value":"vector::Vector4<S>","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":845},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13856,"byte_end":13857,"line_start":47,"line_end":47,"column_start":67,"column_end":68},"name":"z","qualname":"::matrix::Matrix4::z","value":"vector::Vector4<S>","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":846},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13875,"byte_end":13876,"line_start":47,"line_end":47,"column_start":86,"column_end":87},"name":"w","qualname":"::matrix::Matrix4::w","value":"vector::Vector4<S>","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":14012,"byte_end":14015,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Matrix2<S>>::new","value":"pub fn new(S, S, S, S) -> Matrix2<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a new matrix, providing values for each index.\n","sig":null,"attributes":[{"value":"/ Create a new matrix, providing values for each index.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13929,"byte_end":13986,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13991,"byte_end":14000,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":14269,"byte_end":14278,"line_start":61,"line_end":61,"column_start":12,"column_end":21},"name":"from_cols","qualname":"<Matrix2<S>>::from_cols","value":"pub fn from_cols(Vector2<S>, Vector2<S>) -> Matrix2<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a new matrix, providing columns.\n","sig":null,"attributes":[{"value":"/ Create a new matrix, providing columns.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":14200,"byte_end":14243,"line_start":59,"line_end":59,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":14248,"byte_end":14257,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":14497,"byte_end":14504,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"look_at","qualname":"<Matrix2<S>>::look_at","value":"pub fn look_at(Vector2<S>, Vector2<S>) -> Matrix2<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a transformation matrix that will cause a vector to point at\n `dir`, using `up` for orientation.\n","sig":null,"attributes":[{"value":"/ Create a transformation matrix that will cause a vector to point at","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":14371,"byte_end":14442,"line_start":65,"line_end":65,"column_start":5,"column_end":76}},{"value":"/ `dir`, using `up` for orientation.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":14447,"byte_end":14485,"line_start":66,"line_end":66,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":14668,"byte_end":14678,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"from_angle","qualname":"<Matrix2<S>>::from_angle","value":"pub fn from_angle(Rad<S>) -> Matrix2<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":14647,"byte_end":14656,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":15000,"byte_end":15008,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"neg_self","qualname":"<Matrix2<S>>::neg_self","value":"pub fn neg_self(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Negate this `Matrix2` in-place.\n","sig":null,"attributes":[{"value":"/ Negate this `Matrix2` in-place.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":14939,"byte_end":14974,"line_start":83,"line_end":83,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":14979,"byte_end":14988,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":15206,"byte_end":15209,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<Matrix3<S>>::new","value":"pub fn new(S, S, S, S, S, S, S, S, S) -> Matrix3<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a new matrix, providing values for each index.\n","sig":null,"attributes":[{"value":"/ Create a new matrix, providing values for each index.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":15123,"byte_end":15180,"line_start":92,"line_end":92,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":15185,"byte_end":15194,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":15585,"byte_end":15594,"line_start":104,"line_end":104,"column_start":12,"column_end":21},"name":"from_cols","qualname":"<Matrix3<S>>::from_cols","value":"pub fn from_cols(Vector3<S>, Vector3<S>, Vector3<S>) -> Matrix3<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a new matrix, providing columns.\n","sig":null,"attributes":[{"value":"/ Create a new matrix, providing columns.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":15516,"byte_end":15559,"line_start":102,"line_end":102,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":15564,"byte_end":15573,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":15830,"byte_end":15837,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"look_at","qualname":"<Matrix3<S>>::look_at","value":"pub fn look_at(Vector3<S>, Vector3<S>) -> Matrix3<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a rotation matrix that will cause a vector to point at\n `dir`, using `up` for orientation.\n","sig":null,"attributes":[{"value":"/ Create a rotation matrix that will cause a vector to point at","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":15710,"byte_end":15775,"line_start":108,"line_end":108,"column_start":5,"column_end":70}},{"value":"/ `dir`, using `up` for orientation.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":15780,"byte_end":15818,"line_start":109,"line_end":109,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":16165,"byte_end":16177,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"from_angle_x","qualname":"<Matrix3<S>>::from_angle_x","value":"pub fn from_angle_x(Rad<S>) -> Matrix3<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a rotation matrix from a rotation around the `x` axis (pitch).\n","sig":null,"attributes":[{"value":"/ Create a rotation matrix from a rotation around the `x` axis (pitch).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":16080,"byte_end":16153,"line_start":118,"line_end":118,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":16547,"byte_end":16559,"line_start":128,"line_end":128,"column_start":12,"column_end":24},"name":"from_angle_y","qualname":"<Matrix3<S>>::from_angle_y","value":"pub fn from_angle_y(Rad<S>) -> Matrix3<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a rotation matrix from a rotation around the `y` axis (yaw).\n","sig":null,"attributes":[{"value":"/ Create a rotation matrix from a rotation around the `y` axis (yaw).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":16464,"byte_end":16535,"line_start":127,"line_end":127,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":16930,"byte_end":16942,"line_start":137,"line_end":137,"column_start":12,"column_end":24},"name":"from_angle_z","qualname":"<Matrix3<S>>::from_angle_z","value":"pub fn from_angle_z(Rad<S>) -> Matrix3<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a rotation matrix from a rotation around the `z` axis (roll).\n","sig":null,"attributes":[{"value":"/ Create a rotation matrix from a rotation around the `z` axis (roll).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":16846,"byte_end":16918,"line_start":136,"line_end":136,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":17527,"byte_end":17537,"line_start":152,"line_end":152,"column_start":12,"column_end":22},"name":"from_euler","qualname":"<Matrix3<S>>::from_euler","value":"pub fn from_euler(Rad<S>, Rad<S>, Rad<S>) -> Matrix3<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a rotation matrix from a set of euler angles.","sig":null,"attributes":[{"value":"/ Create a rotation matrix from a set of euler angles.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":17230,"byte_end":17286,"line_start":145,"line_end":145,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":17291,"byte_end":17294,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":17299,"byte_end":17315,"line_start":147,"line_end":147,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":17320,"byte_end":17323,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ - `x`: the angular rotation around the `x` axis (pitch).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":17328,"byte_end":17388,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/ - `y`: the angular rotation around the `y` axis (yaw).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":17393,"byte_end":17451,"line_start":150,"line_end":150,"column_start":5,"column_end":63}},{"value":"/ - `z`: the angular rotation around the `z` axis (roll).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":17456,"byte_end":17515,"line_start":151,"line_end":151,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":18075,"byte_end":18090,"line_start":164,"line_end":164,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<Matrix3<S>>::from_axis_angle","value":"pub fn from_axis_angle(Vector3<S>, Rad<S>) -> Matrix3<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a rotation matrix from an angle around an arbitrary axis.\n","sig":null,"attributes":[{"value":"/ Create a rotation matrix from an angle around an arbitrary axis.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":17995,"byte_end":18063,"line_start":163,"line_end":163,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":18852,"byte_end":18860,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"neg_self","qualname":"<Matrix3<S>>::neg_self","value":"pub fn neg_self(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Negate this `Matrix3` in-place.\n","sig":null,"attributes":[{"value":"/ Negate this `Matrix3` in-place.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":18791,"byte_end":18826,"line_start":183,"line_end":183,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":18831,"byte_end":18840,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":19086,"byte_end":19089,"line_start":195,"line_end":195,"column_start":12,"column_end":15},"name":"new","qualname":"<Matrix4<S>>::new","value":"pub fn new(S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S) -> Matrix4<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a new matrix, providing values for each index.\n","sig":null,"attributes":[{"value":"/ Create a new matrix, providing values for each index.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":19003,"byte_end":19060,"line_start":193,"line_end":193,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":19065,"byte_end":19074,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":19636,"byte_end":19645,"line_start":207,"line_end":207,"column_start":12,"column_end":21},"name":"from_cols","qualname":"<Matrix4<S>>::from_cols","value":"pub fn from_cols(Vector4<S>, Vector4<S>, Vector4<S>, Vector4<S>) -> Matrix4<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a new matrix, providing columns.\n","sig":null,"attributes":[{"value":"/ Create a new matrix, providing columns.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":19567,"byte_end":19610,"line_start":205,"line_end":205,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":19615,"byte_end":19624,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":19883,"byte_end":19899,"line_start":213,"line_end":213,"column_start":12,"column_end":28},"name":"from_translation","qualname":"<Matrix4<S>>::from_translation","value":"pub fn from_translation(Vector3<S>) -> Matrix4<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a homogeneous transformation matrix from a translation vector.\n","sig":null,"attributes":[{"value":"/ Create a homogeneous transformation matrix from a translation vector.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":19784,"byte_end":19857,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":19862,"byte_end":19871,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":20272,"byte_end":20282,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"from_scale","qualname":"<Matrix4<S>>::from_scale","value":"pub fn from_scale(S) -> Matrix4<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a homogeneous transformation matrix from a scale value.\n","sig":null,"attributes":[{"value":"/ Create a homogeneous transformation matrix from a scale value.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":20180,"byte_end":20246,"line_start":220,"line_end":220,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":20251,"byte_end":20260,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":20480,"byte_end":20501,"line_start":228,"line_end":228,"column_start":12,"column_end":33},"name":"from_nonuniform_scale","qualname":"<Matrix4<S>>::from_nonuniform_scale","value":"pub fn from_nonuniform_scale(S, S, S) -> Matrix4<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a homogeneous transformation matrix from a set of scale values.\n","sig":null,"attributes":[{"value":"/ Create a homogeneous transformation matrix from a set of scale values.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":20380,"byte_end":20454,"line_start":226,"line_end":226,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":20459,"byte_end":20468,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":20920,"byte_end":20927,"line_start":237,"line_end":237,"column_start":12,"column_end":19},"name":"look_at","qualname":"<Matrix4<S>>::look_at","value":"pub fn look_at(Point3<S>, Point3<S>, Vector3<S>) -> Matrix4<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a homogeneous transformation matrix that will cause a vector to point at\n `dir`, using `up` for orientation.\n","sig":null,"attributes":[{"value":"/ Create a homogeneous transformation matrix that will cause a vector to point at","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":20782,"byte_end":20865,"line_start":235,"line_end":235,"column_start":5,"column_end":88}},{"value":"/ `dir`, using `up` for orientation.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":20870,"byte_end":20908,"line_start":236,"line_end":236,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":21513,"byte_end":21521,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"neg_self","qualname":"<Matrix4<S>>::neg_self","value":"pub fn neg_self(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Negate this `Matrix4` in-place.\n","sig":null,"attributes":[{"value":"/ Negate this `Matrix4` in-place.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":21452,"byte_end":21487,"line_start":250,"line_end":250,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":21492,"byte_end":21501,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":104},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":21717,"byte_end":21723,"line_start":261,"line_end":261,"column_start":11,"column_end":17},"name":"Matrix","qualname":"::matrix::Matrix","value":"Matrix","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"decl_id":null,"docs":" A column-major matrix of arbitrary dimensions.\n","sig":null,"attributes":[{"value":"/ A column-major matrix of arbitrary dimensions.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":21656,"byte_end":21706,"line_start":260,"line_end":260,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":105},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":22312,"byte_end":22319,"line_start":276,"line_end":276,"column_start":10,"column_end":17},"name":"Element","qualname":"::matrix::Matrix::Element","value":"type Element: BaseFloat;","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" The type of the elements in the matrix.\n","sig":null,"attributes":[{"value":"/ The type of the elements in the matrix.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":22259,"byte_end":22302,"line_start":275,"line_end":275,"column_start":5,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":106},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":22380,"byte_end":22383,"line_start":279,"line_end":279,"column_start":10,"column_end":13},"name":"Row","qualname":"::matrix::Matrix::Row","value":"type Row: Array<Element = Self::Element>;","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" The row vector of the matrix.\n","sig":null,"attributes":[{"value":"/ The row vector of the matrix.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":22337,"byte_end":22370,"line_start":278,"line_end":278,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":107},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":22467,"byte_end":22473,"line_start":281,"line_end":281,"column_start":10,"column_end":16},"name":"Column","qualname":"::matrix::Matrix::Column","value":"type Column: Array<Element = Self::Element>;","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" The column vector of the matrix.\n","sig":null,"attributes":[{"value":"/ The column vector of the matrix.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":22421,"byte_end":22457,"line_start":280,"line_end":280,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":108},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":22559,"byte_end":22568,"line_start":284,"line_end":284,"column_start":10,"column_end":19},"name":"Transpose","qualname":"::matrix::Matrix::Transpose","value":"type Transpose: Matrix<Element = Self::Element, Row = Self::Column, Column = Self::Row>;","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" The type of the transposed matrix\n","sig":null,"attributes":[{"value":"/ The type of the transposed matrix","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":22512,"byte_end":22549,"line_start":283,"line_end":283,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":22724,"byte_end":22730,"line_start":288,"line_end":288,"column_start":8,"column_end":14},"name":"as_ptr","qualname":"::matrix::Matrix::as_ptr","value":"pub fn as_ptr(&Self) -> *const Self::Element","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Get the pointer to the first element of the array.\n","sig":null,"attributes":[{"value":"/ Get the pointer to the first element of the array.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":22648,"byte_end":22702,"line_start":286,"line_end":286,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":22707,"byte_end":22716,"line_start":287,"line_end":287,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":22877,"byte_end":22887,"line_start":294,"line_end":294,"column_start":8,"column_end":18},"name":"as_mut_ptr","qualname":"::matrix::Matrix::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut Self::Element","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Get a mutable pointer to the first element of the array.\n","sig":null,"attributes":[{"value":"/ Get a mutable pointer to the first element of the array.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":22795,"byte_end":22855,"line_start":292,"line_end":292,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":22860,"byte_end":22869,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":23014,"byte_end":23025,"line_start":300,"line_end":300,"column_start":8,"column_end":19},"name":"replace_col","qualname":"::matrix::Matrix::replace_col","value":"pub fn replace_col(&mut Self, usize, Self::Column) -> Self::Column","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Replace a column in the array.\n","sig":null,"attributes":[{"value":"/ Replace a column in the array.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":22958,"byte_end":22992,"line_start":298,"line_end":298,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":22997,"byte_end":23006,"line_start":299,"line_end":299,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":23183,"byte_end":23186,"line_start":305,"line_end":305,"column_start":8,"column_end":11},"name":"row","qualname":"::matrix::Matrix::row","value":"pub fn row(&Self, usize) -> Self::Row","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Get a row from this matrix by-value.\n","sig":null,"attributes":[{"value":"/ Get a row from this matrix by-value.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":23135,"byte_end":23175,"line_start":304,"line_end":304,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":23263,"byte_end":23272,"line_start":308,"line_end":308,"column_start":8,"column_end":17},"name":"swap_rows","qualname":"::matrix::Matrix::swap_rows","value":"pub fn swap_rows(&mut Self, usize, usize)","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Swap two rows of this array.\n","sig":null,"attributes":[{"value":"/ Swap two rows of this array.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":23223,"byte_end":23255,"line_start":307,"line_end":307,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":23352,"byte_end":23364,"line_start":310,"line_end":310,"column_start":8,"column_end":20},"name":"swap_columns","qualname":"::matrix::Matrix::swap_columns","value":"pub fn swap_columns(&mut Self, usize, usize)","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Swap two columns of this array.\n","sig":null,"attributes":[{"value":"/ Swap two columns of this array.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":23309,"byte_end":23344,"line_start":309,"line_end":309,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":23449,"byte_end":23462,"line_start":312,"line_end":312,"column_start":8,"column_end":21},"name":"swap_elements","qualname":"::matrix::Matrix::swap_elements","value":"pub fn swap_elements(&mut Self, (usize, usize), (usize, usize))","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Swap the values at index `a` and `b`\n","sig":null,"attributes":[{"value":"/ Swap the values at index `a` and `b`","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":23401,"byte_end":23441,"line_start":311,"line_end":311,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":23583,"byte_end":23587,"line_start":315,"line_end":315,"column_start":8,"column_end":12},"name":"zero","qualname":"::matrix::Matrix::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Create a matrix with all of the elements set to zero.\n","sig":null,"attributes":[{"value":"/ Create a matrix with all of the elements set to zero.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":23518,"byte_end":23575,"line_start":314,"line_end":314,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":23662,"byte_end":23671,"line_start":318,"line_end":318,"column_start":8,"column_end":17},"name":"transpose","qualname":"::matrix::Matrix::transpose","value":"pub fn transpose(&Self) -> Self::Transpose","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Transpose this matrix, returning a new matrix.\n","sig":null,"attributes":[{"value":"/ Transpose this matrix, returning a new matrix.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":23604,"byte_end":23654,"line_start":317,"line_end":317,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":118},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":23806,"byte_end":23818,"line_start":322,"line_end":322,"column_start":11,"column_end":23},"name":"SquareMatrix","qualname":"::matrix::SquareMatrix","value":"SquareMatrix","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132}],"decl_id":null,"docs":" A column-major major matrix where the rows and column vectors are of the same dimensions.\n","sig":null,"attributes":[{"value":"/ A column-major major matrix where the rows and column vectors are of the same dimensions.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":23702,"byte_end":23795,"line_start":321,"line_end":321,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":119},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":24575,"byte_end":24584,"line_start":338,"line_end":338,"column_start":10,"column_end":19},"name":"ColumnRow","qualname":"::matrix::SquareMatrix::ColumnRow","value":"type ColumnRow: Array<Element = Self::Element>;","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" The row/column vector of the matrix.","sig":null,"attributes":[{"value":"/ The row/column vector of the matrix.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":24300,"byte_end":24340,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":24345,"byte_end":24348,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ This is used to constrain the column and rows to be of the same type in lieu of equality","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":24353,"byte_end":24445,"line_start":335,"line_end":335,"column_start":5,"column_end":97}},{"value":"/ constraints being implemented for `where` clauses. Once those are added, this type will","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":24450,"byte_end":24541,"line_start":336,"line_end":336,"column_start":5,"column_end":96}},{"value":"/ likely go away.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":24546,"byte_end":24565,"line_start":337,"line_end":337,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":24689,"byte_end":24699,"line_start":341,"line_end":341,"column_start":8,"column_end":18},"name":"from_value","qualname":"::matrix::SquareMatrix::from_value","value":"pub fn from_value(Self::Element) -> Self","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" Create a new diagonal matrix using the supplied value.\n","sig":null,"attributes":[{"value":"/ Create a new diagonal matrix using the supplied value.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":24623,"byte_end":24681,"line_start":340,"line_end":340,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":24787,"byte_end":24800,"line_start":343,"line_end":343,"column_start":8,"column_end":21},"name":"from_diagonal","qualname":"::matrix::SquareMatrix::from_diagonal","value":"pub fn from_diagonal(Self::Column) -> Self","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" Create a matrix from a non-uniform scale\n","sig":null,"attributes":[{"value":"/ Create a matrix from a non-uniform scale","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":24735,"byte_end":24779,"line_start":342,"line_end":342,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":24980,"byte_end":24988,"line_start":347,"line_end":347,"column_start":8,"column_end":16},"name":"identity","qualname":"::matrix::SquareMatrix::identity","value":"pub fn identity() -> Self","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" The [identity matrix](https://en.wikipedia.org/wiki/Identity_matrix). Multiplying this\n matrix with another has no effect.\n","sig":null,"attributes":[{"value":"/ The [identity matrix](https://en.wikipedia.org/wiki/Identity_matrix). Multiplying this","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":24839,"byte_end":24929,"line_start":345,"line_end":345,"column_start":5,"column_end":95}},{"value":"/ matrix with another has no effect.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":24934,"byte_end":24972,"line_start":346,"line_end":346,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25048,"byte_end":25062,"line_start":350,"line_end":350,"column_start":8,"column_end":22},"name":"transpose_self","qualname":"::matrix::SquareMatrix::transpose_self","value":"pub fn transpose_self(&mut Self)","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" Transpose this matrix in-place.\n","sig":null,"attributes":[{"value":"/ Transpose this matrix in-place.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25005,"byte_end":25040,"line_start":349,"line_end":349,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25127,"byte_end":25138,"line_start":352,"line_end":352,"column_start":8,"column_end":19},"name":"determinant","qualname":"::matrix::SquareMatrix::determinant","value":"pub fn determinant(&Self) -> Self::Element","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" Take the determinant of this matrix.\n","sig":null,"attributes":[{"value":"/ Take the determinant of this matrix.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25079,"byte_end":25119,"line_start":351,"line_end":351,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25236,"byte_end":25244,"line_start":355,"line_end":355,"column_start":8,"column_end":16},"name":"diagonal","qualname":"::matrix::SquareMatrix::diagonal","value":"pub fn diagonal(&Self) -> Self::Column","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" Return a vector containing the diagonal of this matrix.\n","sig":null,"attributes":[{"value":"/ Return a vector containing the diagonal of this matrix.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25169,"byte_end":25228,"line_start":354,"line_end":354,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25366,"byte_end":25371,"line_start":359,"line_end":359,"column_start":8,"column_end":13},"name":"trace","qualname":"::matrix::SquareMatrix::trace","value":"pub fn trace(&Self) -> Self::Element","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" Return the trace of this matrix. That is, the sum of the diagonal.\n","sig":null,"attributes":[{"value":"/ Return the trace of this matrix. That is, the sum of the diagonal.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25274,"byte_end":25344,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25349,"byte_end":25358,"line_start":358,"line_end":358,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25637,"byte_end":25643,"line_start":365,"line_end":365,"column_start":8,"column_end":14},"name":"invert","qualname":"::matrix::SquareMatrix::invert","value":"pub fn invert(&Self) -> Option<Self>","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" Invert this matrix, returning a new matrix. `m.mul_m(m.invert())` is\n the identity matrix. Returns `None` if this matrix is not invertible\n (has a determinant of zero).\n","sig":null,"attributes":[{"value":"/ Invert this matrix, returning a new matrix. `m.mul_m(m.invert())` is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25427,"byte_end":25499,"line_start":361,"line_end":361,"column_start":5,"column_end":77}},{"value":"/ the identity matrix. Returns `None` if this matrix is not invertible","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25504,"byte_end":25576,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ (has a determinant of zero).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25581,"byte_end":25613,"line_start":363,"line_end":363,"column_start":5,"column_end":37}},{"value":"must_use","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25618,"byte_end":25629,"line_start":364,"line_end":364,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25727,"byte_end":25738,"line_start":369,"line_end":369,"column_start":8,"column_end":19},"name":"invert_self","qualname":"::matrix::SquareMatrix::invert_self","value":"pub fn invert_self(&mut Self)","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" Invert this matrix in-place.\n","sig":null,"attributes":[{"value":"/ Invert this matrix in-place.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25673,"byte_end":25705,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25710,"byte_end":25719,"line_start":368,"line_end":368,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25916,"byte_end":25929,"line_start":375,"line_end":375,"column_start":8,"column_end":21},"name":"is_invertible","qualname":"::matrix::SquareMatrix::is_invertible","value":"pub fn is_invertible(&Self) -> bool","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" Test if this matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Test if this matrix is invertible.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25856,"byte_end":25894,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":25899,"byte_end":25908,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":26151,"byte_end":26162,"line_start":380,"line_end":380,"column_start":8,"column_end":19},"name":"is_identity","qualname":"::matrix::SquareMatrix::is_identity","value":"pub fn is_identity(&Self) -> bool","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" Test if this matrix is the identity matrix. That is, it is diagonal\n and every element in the diagonal is one.\n","sig":null,"attributes":[{"value":"/ Test if this matrix is the identity matrix. That is, it is diagonal","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":26008,"byte_end":26079,"line_start":377,"line_end":377,"column_start":5,"column_end":76}},{"value":"/ and every element in the diagonal is one.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":26084,"byte_end":26129,"line_start":378,"line_end":378,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":26134,"byte_end":26143,"line_start":379,"line_end":379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":26328,"byte_end":26339,"line_start":384,"line_end":384,"column_start":8,"column_end":19},"name":"is_diagonal","qualname":"::matrix::SquareMatrix::is_diagonal","value":"pub fn is_diagonal(&Self) -> bool","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" Test if this is a diagonal matrix. That is, every element outside of\n the diagonal is 0.\n","sig":null,"attributes":[{"value":"/ Test if this is a diagonal matrix. That is, every element outside of","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":26221,"byte_end":26293,"line_start":382,"line_end":382,"column_start":5,"column_end":77}},{"value":"/ the diagonal is 0.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":26298,"byte_end":26320,"line_start":383,"line_end":383,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":26453,"byte_end":26465,"line_start":388,"line_end":388,"column_start":8,"column_end":20},"name":"is_symmetric","qualname":"::matrix::SquareMatrix::is_symmetric","value":"pub fn is_symmetric(&Self) -> bool","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" Test if this matrix is symmetric. That is, it is equal to its\n transpose.\n","sig":null,"attributes":[{"value":"/ Test if this matrix is symmetric. That is, it is equal to its","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":26361,"byte_end":26426,"line_start":386,"line_end":386,"column_start":5,"column_end":70}},{"value":"/ transpose.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":26431,"byte_end":26445,"line_start":387,"line_end":387,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1457},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":54608,"byte_end":54618,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"Quaternion","qualname":"::quaternion::Quaternion","value":"Quaternion { s, v }","parent":null,"children":[{"krate":0,"index":1459},{"krate":0,"index":1460}],"decl_id":null,"docs":" A [quaternion](https://en.wikipedia.org/wiki/Quaternion) in scalar/vector\n form.\n","sig":null,"attributes":[{"value":"/ A [quaternion](https://en.wikipedia.org/wiki/Quaternion) in scalar/vector","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":54443,"byte_end":54520,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ form.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":54521,"byte_end":54530,"line_start":34,"line_end":34,"column_start":1,"column_end":10}}]},{"kind":"Field","id":{"krate":0,"index":1459},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":54632,"byte_end":54633,"line_start":37,"line_end":37,"column_start":9,"column_end":10},"name":"s","qualname":"::quaternion::Quaternion::s","value":"S","parent":{"krate":0,"index":1457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1460},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":54646,"byte_end":54647,"line_start":38,"line_end":38,"column_start":9,"column_end":10},"name":"v","qualname":"::quaternion::Quaternion::v","value":"vector::Vector3<S>","parent":{"krate":0,"index":1457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":54824,"byte_end":54827,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Quaternion<S>>::new","value":"pub fn new(S, S, S, S) -> Quaternion<S>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new quaternion from one scalar component and three\n imaginary components\n","sig":null,"attributes":[{"value":"/ Construct a new quaternion from one scalar component and three","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":54703,"byte_end":54769,"line_start":42,"line_end":42,"column_start":5,"column_end":71}},{"value":"/ imaginary components","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":54774,"byte_end":54798,"line_start":43,"line_end":43,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":54803,"byte_end":54812,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55025,"byte_end":55032,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"from_sv","qualname":"<Quaternion<S>>::from_sv","value":"pub fn from_sv(S, Vector3<S>) -> Quaternion<S>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new quaternion from a scalar and a vector\n","sig":null,"attributes":[{"value":"/ Construct a new quaternion from a scalar and a vector","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":54942,"byte_end":54999,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55004,"byte_end":55013,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55197,"byte_end":55201,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"zero","qualname":"<Quaternion<S>>::zero","value":"pub fn zero() -> Quaternion<S>","parent":null,"children":[],"decl_id":null,"docs":" The additive identity, ie: `q = 0 + 0i + 0j + 0i`\n","sig":null,"attributes":[{"value":"/ The additive identity, ie: `q = 0 + 0i + 0j + 0i`","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55118,"byte_end":55171,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55176,"byte_end":55185,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55387,"byte_end":55390,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"one","qualname":"<Quaternion<S>>::one","value":"pub fn one() -> Quaternion<S>","parent":null,"children":[],"decl_id":null,"docs":" The multiplicative identity, ie: `q = 1 + 0i + 0j + 0i`\n","sig":null,"attributes":[{"value":"/ The multiplicative identity, ie: `q = 1 + 0i + 0j + 0i`","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55302,"byte_end":55361,"line_start":61,"line_end":61,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55366,"byte_end":55375,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55550,"byte_end":55553,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"dot","qualname":"<Quaternion<S>>::dot","value":"pub fn dot(Self, Quaternion<S>) -> S","parent":null,"children":[],"decl_id":null,"docs":" The dot product of the quaternion and `q`.\n","sig":null,"attributes":[{"value":"/ The dot product of the quaternion and `q`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55478,"byte_end":55524,"line_start":67,"line_end":67,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55529,"byte_end":55538,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55709,"byte_end":55718,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<Quaternion<S>>::conjugate","value":"pub fn conjugate(Self) -> Quaternion<S>","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of the quaternion.\n","sig":null,"attributes":[{"value":"/ The conjugate of the quaternion.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55647,"byte_end":55683,"line_start":73,"line_end":73,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55688,"byte_end":55697,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55985,"byte_end":55995,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"magnitude2","qualname":"<Quaternion<S>>::magnitude2","value":"pub fn magnitude2(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" The squared magnitude of the quaternion. This is useful for\n magnitude comparisons where the exact magnitude does not need to be\n calculated.\n","sig":null,"attributes":[{"value":"/ The squared magnitude of the quaternion. This is useful for","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55800,"byte_end":55863,"line_start":79,"line_end":79,"column_start":5,"column_end":68}},{"value":"/ magnitude comparisons where the exact magnitude does not need to be","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55868,"byte_end":55939,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ calculated.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55944,"byte_end":55959,"line_start":81,"line_end":81,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":55964,"byte_end":55973,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":56394,"byte_end":56403,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"magnitude","qualname":"<Quaternion<S>>::magnitude","value":"pub fn magnitude(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" The magnitude of the quaternion","sig":null,"attributes":[{"value":"/ The magnitude of the quaternion","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":56063,"byte_end":56098,"line_start":87,"line_end":87,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":56103,"byte_end":56106,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Performance notes","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":56111,"byte_end":56134,"line_start":89,"line_end":89,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":56139,"byte_end":56142,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For instances where the exact magnitude of the quaternion does not need","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":56147,"byte_end":56222,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/ to be known, for example for quaternion-quaternion magnitude comparisons,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":56227,"byte_end":56304,"line_start":92,"line_end":92,"column_start":5,"column_end":82}},{"value":"/ it is advisable to use the `magnitude2` method instead.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":56309,"byte_end":56368,"line_start":93,"line_end":93,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":56373,"byte_end":56382,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":56547,"byte_end":56556,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Quaternion<S>>::normalize","value":"pub fn normalize(Self) -> Quaternion<S>","parent":null,"children":[],"decl_id":null,"docs":" Normalize this quaternion, returning the new quaternion.\n","sig":null,"attributes":[{"value":"/ Normalize this quaternion, returning the new quaternion.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":56461,"byte_end":56521,"line_start":99,"line_end":99,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":56526,"byte_end":56535,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":56717,"byte_end":56722,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"nlerp","qualname":"<Quaternion<S>>::nlerp","value":"pub fn nlerp(Self, Quaternion<S>, S) -> Quaternion<S>","parent":null,"children":[],"decl_id":null,"docs":" Do a normalized linear interpolation with `other`, by `amount`.\n","sig":null,"attributes":[{"value":"/ Do a normalized linear interpolation with `other`, by `amount`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":56638,"byte_end":56705,"line_start":105,"line_end":105,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":60201,"byte_end":60206,"line_start":198,"line_end":198,"column_start":12,"column_end":17},"name":"slerp","qualname":"<Quaternion<S>>::slerp","value":"pub fn slerp(Self, Quaternion<S>, S) -> Quaternion<S>","parent":null,"children":[],"decl_id":null,"docs":" Spherical Linear Intoperlation","sig":null,"attributes":[{"value":"/ Spherical Linear Intoperlation","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":59436,"byte_end":59470,"line_start":182,"line_end":182,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":59475,"byte_end":59478,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Return the spherical linear interpolation between the quaternion and","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":59483,"byte_end":59555,"line_start":184,"line_end":184,"column_start":5,"column_end":77}},{"value":"/ `other`. Both quaternions should be normalized first.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":59560,"byte_end":59617,"line_start":185,"line_end":185,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":59622,"byte_end":59625,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Performance notes","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":59630,"byte_end":59653,"line_start":187,"line_end":187,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":59658,"byte_end":59661,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The `acos` operation used in `slerp` is an expensive operation, so","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":59666,"byte_end":59736,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ unless your quarternions are far away from each other it's generally","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":59741,"byte_end":59813,"line_start":190,"line_end":190,"column_start":5,"column_end":77}},{"value":"/ more advisable to use `nlerp` when you know your rotations are going","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":59818,"byte_end":59890,"line_start":191,"line_end":191,"column_start":5,"column_end":77}},{"value":"/ to be small.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":59895,"byte_end":59911,"line_start":192,"line_end":192,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":59916,"byte_end":59919,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ - [Understanding Slerp, Then Not Using It]","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":59924,"byte_end":59970,"line_start":194,"line_end":194,"column_start":5,"column_end":51}},{"value":"/   (http://number-none.com/product/Understanding%20Slerp,%20Then%20Not%20Using%20It/)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":59975,"byte_end":60063,"line_start":195,"line_end":195,"column_start":5,"column_end":93}},{"value":"/ - [Arcsynthesis OpenGL tutorial]","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":60068,"byte_end":60104,"line_start":196,"line_end":196,"column_start":5,"column_end":41}},{"value":"/   (http://www.arcsynthesis.org/gltut/Positioning/Tut08%20Interpolation.html)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":60109,"byte_end":60189,"line_start":197,"line_end":197,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":61383,"byte_end":61391,"line_start":231,"line_end":231,"column_start":12,"column_end":20},"name":"to_euler","qualname":"<Quaternion<S>>::to_euler","value":"pub fn to_euler(Self) -> (Rad<S>, Rad<S>, Rad<S>)","parent":null,"children":[],"decl_id":null,"docs":" Convert a Quaternion to Eular angles\n     This is a polar singularity aware conversion","sig":null,"attributes":[{"value":"/ Convert a Quaternion to Eular angles","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":61098,"byte_end":61138,"line_start":225,"line_end":225,"column_start":5,"column_end":45}},{"value":"/     This is a polar singularity aware conversion","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":61143,"byte_end":61195,"line_start":226,"line_end":226,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":61200,"byte_end":61203,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/  Based on:","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":61208,"byte_end":61222,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/ - [Maths - Conversion Quaternion to Euler]","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":61227,"byte_end":61273,"line_start":229,"line_end":229,"column_start":5,"column_end":51}},{"value":"/   (http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":61278,"byte_end":61371,"line_start":230,"line_end":230,"column_start":5,"column_end":98}}]},{"kind":"Trait","id":{"krate":0,"index":407},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":75563,"byte_end":75569,"line_start":106,"line_end":106,"column_start":11,"column_end":17},"name":"Vector","qualname":"::vector::Vector","value":"Vector: Copy + Clone","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411}],"decl_id":null,"docs":" A trait that specifies a range of numeric operations for vectors. Not all\n of these make sense from a linear algebra point of view, but are included\n for pragmatic reasons.\n","sig":null,"attributes":[{"value":"/ A trait that specifies a range of numeric operations for vectors. Not all","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":75370,"byte_end":75447,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ of these make sense from a linear algebra point of view, but are included","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":75448,"byte_end":75525,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ for pragmatic reasons.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":75526,"byte_end":75552,"line_start":105,"line_end":105,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":408},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":76216,"byte_end":76222,"line_start":123,"line_end":123,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::vector::Vector::Scalar","value":"type Scalar: BaseNum;","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" The associated scalar.\n","sig":null,"attributes":[{"value":"/ The associated scalar.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":76180,"byte_end":76206,"line_start":122,"line_end":122,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":76305,"byte_end":76315,"line_start":126,"line_end":126,"column_start":8,"column_end":18},"name":"from_value","qualname":"::vector::Vector::from_value","value":"pub fn from_value(Self::Scalar) -> Self","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" Construct a vector from a single value, replicating it.\n","sig":null,"attributes":[{"value":"/ Construct a vector from a single value, replicating it.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":76238,"byte_end":76297,"line_start":125,"line_end":125,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":76454,"byte_end":76458,"line_start":130,"line_end":130,"column_start":8,"column_end":12},"name":"zero","qualname":"::vector::Vector::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" The additive identity vector. Adding this vector with another has no effect.\n","sig":null,"attributes":[{"value":"/ The additive identity vector. Adding this vector with another has no effect.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":76352,"byte_end":76432,"line_start":128,"line_end":128,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":76437,"byte_end":76446,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":76547,"byte_end":76550,"line_start":133,"line_end":133,"column_start":8,"column_end":11},"name":"dot","qualname":"::vector::Vector::dot","value":"pub fn dot(Self, Self) -> Self::Scalar","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" Vector dot product\n","sig":null,"attributes":[{"value":"/ Vector dot product","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":76517,"byte_end":76539,"line_start":132,"line_end":132,"column_start":5,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":412},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":76639,"byte_end":76642,"line_start":137,"line_end":137,"column_start":18,"column_end":21},"name":"dot","qualname":"::vector::dot","value":"pub fn dot<V: Vector>(V, V) -> V::Scalar","parent":null,"children":[],"decl_id":null,"docs":" Dot product of two vectors.\n","sig":null,"attributes":[{"value":"/ Dot product of two vectors.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":76590,"byte_end":76621,"line_start":136,"line_end":136,"column_start":1,"column_end":32}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":76622,"byte_end":76631,"line_start":137,"line_end":137,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":1682},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83314,"byte_end":83321,"line_start":288,"line_end":288,"column_start":14,"column_end":21},"name":"Vector2","qualname":"::vector::Vector2","value":"Vector2 { x, y }","parent":null,"children":[{"krate":0,"index":1684},{"krate":0,"index":1685}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1684},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83327,"byte_end":83328,"line_start":288,"line_end":288,"column_start":27,"column_end":28},"name":"x","qualname":"::vector::Vector2::x","value":"S","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1685},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83330,"byte_end":83331,"line_start":288,"line_end":288,"column_start":30,"column_end":31},"name":"y","qualname":"::vector::Vector2::y","value":"S","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1652},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83338,"byte_end":83342,"line_start":288,"line_end":288,"column_start":38,"column_end":42},"name":"vec2","qualname":"::vector::vec2","value":"pub fn vec2<S>(S, S) -> Vector2<S>","parent":null,"children":[],"decl_id":null,"docs":" The short constructor.\n","sig":null,"attributes":[{"value":"/ The short constructor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":77532,"byte_end":77558,"line_start":161,"line_end":161,"column_start":9,"column_end":35}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":77567,"byte_end":77576,"line_start":162,"line_end":162,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1954},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83358,"byte_end":83365,"line_start":289,"line_end":289,"column_start":14,"column_end":21},"name":"Vector3","qualname":"::vector::Vector3","value":"Vector3 { x, y, z }","parent":null,"children":[{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1958}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1956},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83371,"byte_end":83372,"line_start":289,"line_end":289,"column_start":27,"column_end":28},"name":"x","qualname":"::vector::Vector3::x","value":"S","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1957},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83374,"byte_end":83375,"line_start":289,"line_end":289,"column_start":30,"column_end":31},"name":"y","qualname":"::vector::Vector3::y","value":"S","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1958},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83377,"byte_end":83378,"line_start":289,"line_end":289,"column_start":33,"column_end":34},"name":"z","qualname":"::vector::Vector3::z","value":"S","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1924},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83385,"byte_end":83389,"line_start":289,"line_end":289,"column_start":41,"column_end":45},"name":"vec3","qualname":"::vector::vec3","value":"pub fn vec3<S>(S, S, S) -> Vector3<S>","parent":null,"children":[],"decl_id":null,"docs":" The short constructor.\n","sig":null,"attributes":[{"value":"/ The short constructor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":77532,"byte_end":77558,"line_start":161,"line_end":161,"column_start":9,"column_end":35}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":77567,"byte_end":77576,"line_start":162,"line_end":162,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2228},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83405,"byte_end":83412,"line_start":290,"line_end":290,"column_start":14,"column_end":21},"name":"Vector4","qualname":"::vector::Vector4","value":"Vector4 { x, y, z, w }","parent":null,"children":[{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2230},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83418,"byte_end":83419,"line_start":290,"line_end":290,"column_start":27,"column_end":28},"name":"x","qualname":"::vector::Vector4::x","value":"S","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2231},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83421,"byte_end":83422,"line_start":290,"line_end":290,"column_start":30,"column_end":31},"name":"y","qualname":"::vector::Vector4::y","value":"S","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2232},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83424,"byte_end":83425,"line_start":290,"line_end":290,"column_start":33,"column_end":34},"name":"z","qualname":"::vector::Vector4::z","value":"S","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2233},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83427,"byte_end":83428,"line_start":290,"line_end":290,"column_start":36,"column_end":37},"name":"w","qualname":"::vector::Vector4::w","value":"S","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2198},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83435,"byte_end":83439,"line_start":290,"line_end":290,"column_start":44,"column_end":48},"name":"vec4","qualname":"::vector::vec4","value":"pub fn vec4<S>(S, S, S, S) -> Vector4<S>","parent":null,"children":[],"decl_id":null,"docs":" The short constructor.\n","sig":null,"attributes":[{"value":"/ The short constructor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":77532,"byte_end":77558,"line_start":161,"line_end":161,"column_start":9,"column_end":35}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":77567,"byte_end":77576,"line_start":162,"line_end":162,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83985,"byte_end":83991,"line_start":304,"line_end":304,"column_start":12,"column_end":18},"name":"unit_x","qualname":"<Vector2<S>>::unit_x","value":"pub fn unit_x() -> Vector2<S>","parent":null,"children":[],"decl_id":null,"docs":" A unit vector in the `x` direction.\n","sig":null,"attributes":[{"value":"/ A unit vector in the `x` direction.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83920,"byte_end":83959,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83964,"byte_end":83973,"line_start":303,"line_end":303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":84128,"byte_end":84134,"line_start":310,"line_end":310,"column_start":12,"column_end":18},"name":"unit_y","qualname":"<Vector2<S>>::unit_y","value":"pub fn unit_y() -> Vector2<S>","parent":null,"children":[],"decl_id":null,"docs":" A unit vector in the `y` direction.\n","sig":null,"attributes":[{"value":"/ A unit vector in the `y` direction.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":84063,"byte_end":84102,"line_start":308,"line_end":308,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":84107,"byte_end":84116,"line_start":309,"line_end":309,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":84292,"byte_end":84300,"line_start":316,"line_end":316,"column_start":12,"column_end":20},"name":"perp_dot","qualname":"<Vector2<S>>::perp_dot","value":"pub fn perp_dot(Self, Vector2<S>) -> S","parent":null,"children":[],"decl_id":null,"docs":" The perpendicular dot product of the vector and `other`.\n","sig":null,"attributes":[{"value":"/ The perpendicular dot product of the vector and `other`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":84206,"byte_end":84266,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":84271,"byte_end":84280,"line_start":315,"line_end":315,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":84518,"byte_end":84524,"line_start":323,"line_end":323,"column_start":12,"column_end":18},"name":"extend","qualname":"<Vector2<S>>::extend","value":"pub fn extend(Self, S) -> Vector3<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Vector3`, using the `x` and `y` values from this vector, and the\n provided `z`.\n","sig":null,"attributes":[{"value":"/ Create a `Vector3`, using the `x` and `y` values from this vector, and the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":84392,"byte_end":84470,"line_start":320,"line_end":320,"column_start":5,"column_end":83}},{"value":"/ provided `z`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":84475,"byte_end":84492,"line_start":321,"line_end":321,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":84497,"byte_end":84506,"line_start":322,"line_end":322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":84762,"byte_end":84768,"line_start":332,"line_end":332,"column_start":12,"column_end":18},"name":"unit_x","qualname":"<Vector3<S>>::unit_x","value":"pub fn unit_x() -> Vector3<S>","parent":null,"children":[],"decl_id":null,"docs":" A unit vector in the `x` direction.\n","sig":null,"attributes":[{"value":"/ A unit vector in the `x` direction.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":84697,"byte_end":84736,"line_start":330,"line_end":330,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":84741,"byte_end":84750,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":84916,"byte_end":84922,"line_start":338,"line_end":338,"column_start":12,"column_end":18},"name":"unit_y","qualname":"<Vector3<S>>::unit_y","value":"pub fn unit_y() -> Vector3<S>","parent":null,"children":[],"decl_id":null,"docs":" A unit vector in the `y` direction.\n","sig":null,"attributes":[{"value":"/ A unit vector in the `y` direction.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":84851,"byte_end":84890,"line_start":336,"line_end":336,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":84895,"byte_end":84904,"line_start":337,"line_end":337,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":85070,"byte_end":85076,"line_start":344,"line_end":344,"column_start":12,"column_end":18},"name":"unit_z","qualname":"<Vector3<S>>::unit_z","value":"pub fn unit_z() -> Vector3<S>","parent":null,"children":[],"decl_id":null,"docs":" A unit vector in the `w` direction.\n","sig":null,"attributes":[{"value":"/ A unit vector in the `w` direction.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":85005,"byte_end":85044,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":85049,"byte_end":85058,"line_start":343,"line_end":343,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":85257,"byte_end":85262,"line_start":351,"line_end":351,"column_start":12,"column_end":17},"name":"cross","qualname":"<Vector3<S>>::cross","value":"pub fn cross(Self, Vector3<S>) -> Vector3<S>","parent":null,"children":[],"decl_id":null,"docs":" Returns the cross product of the vector and `other`.\n","sig":null,"attributes":[{"value":"/ Returns the cross product of the vector and `other`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":85159,"byte_end":85215,"line_start":348,"line_end":348,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":85220,"byte_end":85229,"line_start":349,"line_end":349,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":85234,"byte_end":85245,"line_start":350,"line_end":350,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":85632,"byte_end":85638,"line_start":360,"line_end":360,"column_start":12,"column_end":18},"name":"extend","qualname":"<Vector3<S>>::extend","value":"pub fn extend(Self, S) -> Vector4<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Vector4`, using the `x`, `y` and `z` values from this vector, and the\n provided `w`.\n","sig":null,"attributes":[{"value":"/ Create a `Vector4`, using the `x`, `y` and `z` values from this vector, and the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":85501,"byte_end":85584,"line_start":357,"line_end":357,"column_start":5,"column_end":88}},{"value":"/ provided `w`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":85589,"byte_end":85606,"line_start":358,"line_end":358,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":85611,"byte_end":85620,"line_start":359,"line_end":359,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":85798,"byte_end":85806,"line_start":366,"line_end":366,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Vector3<S>>::truncate","value":"pub fn truncate(Self) -> Vector2<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Vector2`, dropping the `z` value.\n","sig":null,"attributes":[{"value":"/ Create a `Vector2`, dropping the `z` value.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":85725,"byte_end":85772,"line_start":364,"line_end":364,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":85777,"byte_end":85786,"line_start":365,"line_end":365,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":86034,"byte_end":86040,"line_start":375,"line_end":375,"column_start":12,"column_end":18},"name":"unit_x","qualname":"<Vector4<S>>::unit_x","value":"pub fn unit_x() -> Vector4<S>","parent":null,"children":[],"decl_id":null,"docs":" A unit vector in the `x` direction.\n","sig":null,"attributes":[{"value":"/ A unit vector in the `x` direction.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":85969,"byte_end":86008,"line_start":373,"line_end":373,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":86013,"byte_end":86022,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":86199,"byte_end":86205,"line_start":381,"line_end":381,"column_start":12,"column_end":18},"name":"unit_y","qualname":"<Vector4<S>>::unit_y","value":"pub fn unit_y() -> Vector4<S>","parent":null,"children":[],"decl_id":null,"docs":" A unit vector in the `y` direction.\n","sig":null,"attributes":[{"value":"/ A unit vector in the `y` direction.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":86134,"byte_end":86173,"line_start":379,"line_end":379,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":86178,"byte_end":86187,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":86364,"byte_end":86370,"line_start":387,"line_end":387,"column_start":12,"column_end":18},"name":"unit_z","qualname":"<Vector4<S>>::unit_z","value":"pub fn unit_z() -> Vector4<S>","parent":null,"children":[],"decl_id":null,"docs":" A unit vector in the `z` direction.\n","sig":null,"attributes":[{"value":"/ A unit vector in the `z` direction.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":86299,"byte_end":86338,"line_start":385,"line_end":385,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":86343,"byte_end":86352,"line_start":386,"line_end":386,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":86529,"byte_end":86535,"line_start":393,"line_end":393,"column_start":12,"column_end":18},"name":"unit_w","qualname":"<Vector4<S>>::unit_w","value":"pub fn unit_w() -> Vector4<S>","parent":null,"children":[],"decl_id":null,"docs":" A unit vector in the `w` direction.\n","sig":null,"attributes":[{"value":"/ A unit vector in the `w` direction.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":86464,"byte_end":86503,"line_start":391,"line_end":391,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":86508,"byte_end":86517,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":86702,"byte_end":86710,"line_start":399,"line_end":399,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Vector4<S>>::truncate","value":"pub fn truncate(Self) -> Vector3<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Vector3`, dropping the `w` value.\n","sig":null,"attributes":[{"value":"/ Create a `Vector3`, dropping the `w` value.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":86629,"byte_end":86676,"line_start":397,"line_end":397,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":86681,"byte_end":86690,"line_start":398,"line_end":398,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":86862,"byte_end":86872,"line_start":405,"line_end":405,"column_start":12,"column_end":22},"name":"truncate_n","qualname":"<Vector4<S>>::truncate_n","value":"pub fn truncate_n(&Self, isize) -> Vector3<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Vector3`, dropping the nth element\n","sig":null,"attributes":[{"value":"/ Create a `Vector3`, dropping the nth element","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":86788,"byte_end":86836,"line_start":403,"line_end":403,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":86841,"byte_end":86850,"line_start":404,"line_end":404,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":437},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":87345,"byte_end":87360,"line_start":418,"line_end":418,"column_start":11,"column_end":26},"name":"EuclideanVector","qualname":"::vector::EuclideanVector","value":"EuclideanVector: Vector + Sized","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444}],"decl_id":null,"docs":" Specifies geometric operations for vectors. This is only implemented for\n 2-dimensional and 3-dimensional vectors.\n","sig":null,"attributes":[{"value":"/ Specifies geometric operations for vectors. This is only implemented for","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":87213,"byte_end":87289,"line_start":416,"line_end":416,"column_start":1,"column_end":77}},{"value":"/ 2-dimensional and 3-dimensional vectors.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":87290,"byte_end":87334,"line_start":417,"line_end":417,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":87659,"byte_end":87675,"line_start":425,"line_end":425,"column_start":8,"column_end":24},"name":"is_perpendicular","qualname":"::vector::EuclideanVector::is_perpendicular","value":"pub fn is_perpendicular(Self, Self) -> bool","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Returns `true` if the vector is perpendicular (at right angles) to the\n other vector.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the vector is perpendicular (at right angles) to the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":87555,"byte_end":87629,"line_start":423,"line_end":423,"column_start":5,"column_end":79}},{"value":"/ other vector.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":87634,"byte_end":87651,"line_start":424,"line_end":424,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88019,"byte_end":88026,"line_start":433,"line_end":433,"column_start":8,"column_end":15},"name":"length2","qualname":"::vector::EuclideanVector::length2","value":"pub fn length2(Self) -> Self::Scalar","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Returns the squared length of the vector. This does not perform an\n expensive square root operation like in the `length` method and can\n therefore be more efficient for comparing the lengths of two vectors.\n","sig":null,"attributes":[{"value":"/ Returns the squared length of the vector. This does not perform an","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":87773,"byte_end":87843,"line_start":429,"line_end":429,"column_start":5,"column_end":75}},{"value":"/ expensive square root operation like in the `length` method and can","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":87848,"byte_end":87919,"line_start":430,"line_end":430,"column_start":5,"column_end":76}},{"value":"/ therefore be more efficient for comparing the lengths of two vectors.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":87924,"byte_end":87997,"line_start":431,"line_end":431,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88002,"byte_end":88011,"line_start":432,"line_end":432,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88134,"byte_end":88140,"line_start":439,"line_end":439,"column_start":8,"column_end":14},"name":"length","qualname":"::vector::EuclideanVector::length","value":"pub fn length(Self) -> Self::Scalar","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" The norm of the vector.\n","sig":null,"attributes":[{"value":"/ The norm of the vector.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88085,"byte_end":88112,"line_start":437,"line_end":437,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88117,"byte_end":88126,"line_start":438,"line_end":438,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88376,"byte_end":88381,"line_start":445,"line_end":445,"column_start":8,"column_end":13},"name":"angle","qualname":"::vector::EuclideanVector::angle","value":"pub fn angle(Self, Self) -> Rad<Self::Scalar>","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" The angle between the vector and `other`, in radians.\n","sig":null,"attributes":[{"value":"/ The angle between the vector and `other`, in radians.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88311,"byte_end":88368,"line_start":444,"line_end":444,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88559,"byte_end":88568,"line_start":451,"line_end":451,"column_start":8,"column_end":17},"name":"normalize","qualname":"::vector::EuclideanVector::normalize","value":"pub fn normalize(Self) -> Self","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Returns a vector with the same direction, but with a `length` (or\n `norm`) of `1`.\n","sig":null,"attributes":[{"value":"/ Returns a vector with the same direction, but with a `length` (or","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88428,"byte_end":88497,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ `norm`) of `1`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88502,"byte_end":88521,"line_start":448,"line_end":448,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88526,"byte_end":88535,"line_start":449,"line_end":449,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88540,"byte_end":88551,"line_start":450,"line_end":450,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88747,"byte_end":88759,"line_start":458,"line_end":458,"column_start":8,"column_end":20},"name":"normalize_to","qualname":"::vector::EuclideanVector::normalize_to","value":"pub fn normalize_to(Self, Self::Scalar) -> Self","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Returns a vector with the same direction and a given `length`.\n","sig":null,"attributes":[{"value":"/ Returns a vector with the same direction and a given `length`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88643,"byte_end":88709,"line_start":455,"line_end":455,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88714,"byte_end":88723,"line_start":456,"line_end":456,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88728,"byte_end":88739,"line_start":457,"line_end":457,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":89022,"byte_end":89026,"line_start":466,"line_end":466,"column_start":8,"column_end":12},"name":"lerp","qualname":"::vector::EuclideanVector::lerp","value":"pub fn lerp(Self, Self, Self::Scalar) -> Self","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Returns the result of linarly interpolating the length of the vector\n towards the length of `other` by the specified amount.\n","sig":null,"attributes":[{"value":"/ Returns the result of linarly interpolating the length of the vector","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88849,"byte_end":88921,"line_start":462,"line_end":462,"column_start":5,"column_end":77}},{"value":"/ towards the length of `other` by the specified amount.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88926,"byte_end":88984,"line_start":463,"line_end":463,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":88989,"byte_end":88998,"line_start":464,"line_end":464,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":89003,"byte_end":89014,"line_start":465,"line_end":465,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2624},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":100121,"byte_end":100124,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"Rad","qualname":"::angle::Rad","value":"Rad { s }","parent":null,"children":[{"krate":0,"index":2626}],"decl_id":null,"docs":" An angle, in radians\n","sig":null,"attributes":[{"value":"/ An angle, in radians","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":100007,"byte_end":100031,"line_start":31,"line_end":31,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2626},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":100134,"byte_end":100135,"line_start":33,"line_end":33,"column_start":25,"column_end":26},"name":"s","qualname":"::angle::Rad::s","value":"S","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2652},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":100255,"byte_end":100258,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"Deg","qualname":"::angle::Deg","value":"Deg { s }","parent":null,"children":[{"krate":0,"index":2654}],"decl_id":null,"docs":" An angle, in degrees\n","sig":null,"attributes":[{"value":"/ An angle, in degrees","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":100141,"byte_end":100165,"line_start":34,"line_end":34,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2654},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":100268,"byte_end":100269,"line_start":36,"line_end":36,"column_start":25,"column_end":26},"name":"s","qualname":"::angle::Deg::s","value":"S","parent":{"krate":0,"index":2652},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":477},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":100328,"byte_end":100331,"line_start":39,"line_end":39,"column_start":18,"column_end":21},"name":"rad","qualname":"::angle::rad","value":"pub fn rad<S: BaseFloat>(S) -> Rad<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a new angle, in radians\n","sig":null,"attributes":[{"value":"/ Create a new angle, in radians","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":100276,"byte_end":100310,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":100311,"byte_end":100320,"line_start":39,"line_end":39,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":479},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":100431,"byte_end":100434,"line_start":41,"line_end":41,"column_start":18,"column_end":21},"name":"deg","qualname":"::angle::deg","value":"pub fn deg<S: BaseFloat>(S) -> Deg<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a new angle, in degrees\n","sig":null,"attributes":[{"value":"/ Create a new angle, in degrees","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":100379,"byte_end":100413,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":100414,"byte_end":100423,"line_start":41,"line_end":41,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":487},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":100867,"byte_end":100872,"line_start":58,"line_end":58,"column_start":11,"column_end":16},"name":"Angle","qualname":"::angle::Angle","value":"Angle","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510}],"decl_id":null,"docs":" Operations on angles.\n","sig":null,"attributes":[{"value":"/ Operations on angles.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":100831,"byte_end":100856,"line_start":57,"line_end":57,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":488},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":101384,"byte_end":101392,"line_start":72,"line_end":72,"column_start":10,"column_end":18},"name":"Unitless","qualname":"::angle::Angle::Unitless","value":"type Unitless: BaseFloat;","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":101460,"byte_end":101463,"line_start":75,"line_end":75,"column_start":8,"column_end":11},"name":"new","qualname":"::angle::Angle::new","value":"pub fn new(Self::Unitless) -> Self","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":" Create an angle from a unitless value.\n","sig":null,"attributes":[{"value":"/ Create an angle from a unitless value.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":101410,"byte_end":101452,"line_start":74,"line_end":74,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":101586,"byte_end":101595,"line_start":79,"line_end":79,"column_start":8,"column_end":17},"name":"normalize","qualname":"::angle::Angle::normalize","value":"pub fn normalize(Self) -> Self","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":" Return the angle, normalized to the range `[0, full_turn)`.\n","sig":null,"attributes":[{"value":"/ Return the angle, normalized to the range `[0, full_turn)`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":101501,"byte_end":101564,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":101569,"byte_end":101578,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":101803,"byte_end":101811,"line_start":86,"line_end":86,"column_start":8,"column_end":16},"name":"opposite","qualname":"::angle::Angle::opposite","value":"pub fn opposite(Self) -> Self","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":" Return the angle rotated by half a turn\n","sig":null,"attributes":[{"value":"/ Return the angle rotated by half a turn","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":101738,"byte_end":101781,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":101786,"byte_end":101795,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":101963,"byte_end":101969,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"bisect","qualname":"::angle::Angle::bisect","value":"pub fn bisect(Self, Self) -> Self","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":" Returns the interior bisector of the two angles\n","sig":null,"attributes":[{"value":"/ Returns the interior bisector of the two angles","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":101890,"byte_end":101941,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":101946,"byte_end":101955,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102109,"byte_end":102113,"line_start":97,"line_end":97,"column_start":8,"column_end":12},"name":"zero","qualname":"::angle::Angle::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102132,"byte_end":102141,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"full_turn","qualname":"::angle::Angle::full_turn","value":"pub fn full_turn() -> Self","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102160,"byte_end":102170,"line_start":99,"line_end":99,"column_start":8,"column_end":18},"name":"turn_div_2","qualname":"::angle::Angle::turn_div_2","value":"pub fn turn_div_2() -> Self","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102189,"byte_end":102199,"line_start":100,"line_end":100,"column_start":8,"column_end":18},"name":"turn_div_3","qualname":"::angle::Angle::turn_div_3","value":"pub fn turn_div_3() -> Self","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102218,"byte_end":102228,"line_start":101,"line_end":101,"column_start":8,"column_end":18},"name":"turn_div_4","qualname":"::angle::Angle::turn_div_4","value":"pub fn turn_div_4() -> Self","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102247,"byte_end":102257,"line_start":102,"line_end":102,"column_start":8,"column_end":18},"name":"turn_div_6","qualname":"::angle::Angle::turn_div_6","value":"pub fn turn_div_6() -> Self","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102291,"byte_end":102296,"line_start":105,"line_end":105,"column_start":8,"column_end":13},"name":"equiv","qualname":"::angle::Angle::equiv","value":"pub fn equiv(&Self, &Self) -> bool","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102274,"byte_end":102283,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102388,"byte_end":102391,"line_start":109,"line_end":109,"column_start":8,"column_end":11},"name":"sin","qualname":"::angle::Angle::sin","value":"pub fn sin(Self) -> Self::Unitless","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102424,"byte_end":102427,"line_start":110,"line_end":110,"column_start":8,"column_end":11},"name":"cos","qualname":"::angle::Angle::cos","value":"pub fn cos(Self) -> Self::Unitless","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102460,"byte_end":102463,"line_start":111,"line_end":111,"column_start":8,"column_end":11},"name":"tan","qualname":"::angle::Angle::tan","value":"pub fn tan(Self) -> Self::Unitless","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102496,"byte_end":102503,"line_start":112,"line_end":112,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::angle::Angle::sin_cos","value":"pub fn sin_cos(Self) -> (Self::Unitless, Self::Unitless)","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102565,"byte_end":102568,"line_start":114,"line_end":114,"column_start":18,"column_end":21},"name":"cot","qualname":"::angle::Angle::cot","value":"pub fn cot(Self) -> Self::Unitless","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102552,"byte_end":102561,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102638,"byte_end":102641,"line_start":115,"line_end":115,"column_start":18,"column_end":21},"name":"sec","qualname":"::angle::Angle::sec","value":"pub fn sec(Self) -> Self::Unitless","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102625,"byte_end":102634,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102711,"byte_end":102714,"line_start":116,"line_end":116,"column_start":18,"column_end":21},"name":"csc","qualname":"::angle::Angle::csc","value":"pub fn csc(Self) -> Self::Unitless","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102698,"byte_end":102707,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102775,"byte_end":102779,"line_start":118,"line_end":118,"column_start":8,"column_end":12},"name":"asin","qualname":"::angle::Angle::asin","value":"pub fn asin(Self::Unitless) -> Self","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102815,"byte_end":102819,"line_start":119,"line_end":119,"column_start":8,"column_end":12},"name":"acos","qualname":"::angle::Angle::acos","value":"pub fn acos(Self::Unitless) -> Self","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102855,"byte_end":102859,"line_start":120,"line_end":120,"column_start":8,"column_end":12},"name":"atan","qualname":"::angle::Angle::atan","value":"pub fn atan(Self::Unitless) -> Self","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":102895,"byte_end":102900,"line_start":121,"line_end":121,"column_start":8,"column_end":13},"name":"atan2","qualname":"::angle::Angle::atan2","value":"pub fn atan2(Self::Unitless, Self::Unitless) -> Self","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2952},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":108648,"byte_end":108654,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"Point2","qualname":"::point::Point2","value":"Point2 { x, y }","parent":null,"children":[{"krate":0,"index":2954},{"krate":0,"index":2955}],"decl_id":null,"docs":" A point in 2-dimensional space.\n","sig":null,"attributes":[{"value":"/ A point in 2-dimensional space.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":108525,"byte_end":108560,"line_start":32,"line_end":32,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2954},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":108664,"byte_end":108665,"line_start":34,"line_end":34,"column_start":28,"column_end":29},"name":"x","qualname":"::point::Point2::x","value":"S","parent":{"krate":0,"index":2952},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2955},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":108674,"byte_end":108675,"line_start":34,"line_end":34,"column_start":38,"column_end":39},"name":"y","qualname":"::point::Point2::y","value":"S","parent":{"krate":0,"index":2952},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2988},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":108805,"byte_end":108811,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"Point3","qualname":"::point::Point3","value":"Point3 { x, y, z }","parent":null,"children":[{"krate":0,"index":2990},{"krate":0,"index":2991},{"krate":0,"index":2992}],"decl_id":null,"docs":" A point in 3-dimensional space.\n","sig":null,"attributes":[{"value":"/ A point in 3-dimensional space.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":108682,"byte_end":108717,"line_start":36,"line_end":36,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2990},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":108821,"byte_end":108822,"line_start":38,"line_end":38,"column_start":28,"column_end":29},"name":"x","qualname":"::point::Point3::x","value":"S","parent":{"krate":0,"index":2988},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2991},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":108831,"byte_end":108832,"line_start":38,"line_end":38,"column_start":38,"column_end":39},"name":"y","qualname":"::point::Point3::y","value":"S","parent":{"krate":0,"index":2988},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2992},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":108841,"byte_end":108842,"line_start":38,"line_end":38,"column_start":48,"column_end":49},"name":"z","qualname":"::point::Point3::z","value":"S","parent":{"krate":0,"index":2988},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":108904,"byte_end":108907,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Point2<S>>::new","value":"pub fn new(S, S) -> Point2<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":108883,"byte_end":108892,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":109028,"byte_end":109031,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Point3<S>>::new","value":"pub fn new(S, S, S) -> Point3<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":109007,"byte_end":109016,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":109164,"byte_end":109180,"line_start":57,"line_end":57,"column_start":12,"column_end":28},"name":"from_homogeneous","qualname":"<Point3<S>>::from_homogeneous","value":"pub fn from_homogeneous(Vector4<S>) -> Point3<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":109143,"byte_end":109152,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":109336,"byte_end":109350,"line_start":63,"line_end":63,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Point3<S>>::to_homogeneous","value":"pub fn to_homogeneous(Self) -> Vector4<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":109315,"byte_end":109324,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":536},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":109501,"byte_end":109506,"line_start":69,"line_end":69,"column_start":11,"column_end":16},"name":"Point","qualname":"::point::Point","value":"Point: Copy + Clone","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542}],"decl_id":null,"docs":" Specifies the numeric operations for point types.\n","sig":null,"attributes":[{"value":"/ Specifies the numeric operations for point types.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":109437,"byte_end":109490,"line_start":68,"line_end":68,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":537},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":110112,"byte_end":110118,"line_start":84,"line_end":84,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::point::Point::Scalar","value":"type Scalar: BaseNum;","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" The associated scalar.","sig":null,"attributes":[{"value":"/ The associated scalar.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":109931,"byte_end":109957,"line_start":80,"line_end":80,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":109962,"byte_end":109965,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Due to the equality constraints demanded by `Self::Vector`, this is effectively just an","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":109970,"byte_end":110061,"line_start":82,"line_end":82,"column_start":5,"column_end":96}},{"value":"/ alias to `Self::Vector::Scalar`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":110066,"byte_end":110102,"line_start":83,"line_end":83,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":538},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":110182,"byte_end":110188,"line_start":86,"line_end":86,"column_start":10,"column_end":16},"name":"Vector","qualname":"::point::Point::Vector","value":"type Vector: Vector<Scalar = Self::Scalar>;","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" The associated displacement vector.\n","sig":null,"attributes":[{"value":"/ The associated displacement vector.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":110133,"byte_end":110172,"line_start":85,"line_end":85,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":110267,"byte_end":110273,"line_start":89,"line_end":89,"column_start":8,"column_end":14},"name":"origin","qualname":"::point::Point::origin","value":"pub fn origin() -> Self","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Create a point at the origin.\n","sig":null,"attributes":[{"value":"/ Create a point at the origin.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":110226,"byte_end":110259,"line_start":88,"line_end":88,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":110331,"byte_end":110339,"line_start":92,"line_end":92,"column_start":8,"column_end":16},"name":"from_vec","qualname":"::point::Point::from_vec","value":"pub fn from_vec(Self::Vector) -> Self","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Create a point from a vector.\n","sig":null,"attributes":[{"value":"/ Create a point from a vector.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":110290,"byte_end":110323,"line_start":91,"line_end":91,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":110410,"byte_end":110416,"line_start":94,"line_end":94,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::point::Point::to_vec","value":"pub fn to_vec(Self) -> Self::Vector","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Convert a point to a vector.\n","sig":null,"attributes":[{"value":"/ Convert a point to a vector.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":110370,"byte_end":110402,"line_start":93,"line_end":93,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":110516,"byte_end":110519,"line_start":97,"line_end":97,"column_start":8,"column_end":11},"name":"dot","qualname":"::point::Point::dot","value":"pub fn dot(Self, Self::Vector) -> Self::Scalar","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" This is a weird one, but its useful for plane calculations.\n","sig":null,"attributes":[{"value":"/ This is a weird one, but its useful for plane calculations.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":110445,"byte_end":110508,"line_start":96,"line_end":96,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":569},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":121360,"byte_end":121368,"line_start":27,"line_end":27,"column_start":11,"column_end":19},"name":"Rotation","qualname":"::rotation::Rotation","value":"Rotation<P: Point>: PartialEq + Sized","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579}],"decl_id":null,"docs":" A trait for a generic rotation. A rotation is a transformation that\n creates a circular motion, and preserves at least one point in the space.\n","sig":null,"attributes":[{"value":"/ A trait for a generic rotation. A rotation is a transformation that","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":121200,"byte_end":121271,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ creates a circular motion, and preserves at least one point in the space.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":121272,"byte_end":121349,"line_start":26,"line_end":26,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":121637,"byte_end":121640,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"one","qualname":"::rotation::Rotation::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create the identity transform (causes no transformation).\n","sig":null,"attributes":[{"value":"/ Create the identity transform (causes no transformation).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":121568,"byte_end":121629,"line_start":32,"line_end":32,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":121727,"byte_end":121734,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"look_at","qualname":"::rotation::Rotation::look_at","value":"pub fn look_at(P::Vector, P::Vector) -> Self","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a rotation to a given direction with an 'up' vector\n","sig":null,"attributes":[{"value":"/ Create a rotation to a given direction with an 'up' vector","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":121657,"byte_end":121719,"line_start":35,"line_end":35,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":121912,"byte_end":121927,"line_start":40,"line_end":40,"column_start":8,"column_end":23},"name":"between_vectors","qualname":"::rotation::Rotation::between_vectors","value":"pub fn between_vectors(P::Vector, P::Vector) -> Self","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a shortest rotation to transform vector 'a' into 'b'.\n Both given vectors are assumed to have unit length.\n","sig":null,"attributes":[{"value":"/ Create a shortest rotation to transform vector 'a' into 'b'.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":121780,"byte_end":121844,"line_start":38,"line_end":38,"column_start":5,"column_end":69}},{"value":"/ Both given vectors are assumed to have unit length.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":121849,"byte_end":121904,"line_start":39,"line_end":39,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122018,"byte_end":122031,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"rotate_vector","qualname":"::rotation::Rotation::rotate_vector","value":"pub fn rotate_vector(&Self, P::Vector) -> P::Vector","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Rotate a vector using this rotation.\n","sig":null,"attributes":[{"value":"/ Rotate a vector using this rotation.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":121970,"byte_end":122010,"line_start":42,"line_end":42,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122195,"byte_end":122207,"line_start":48,"line_end":48,"column_start":8,"column_end":20},"name":"rotate_point","qualname":"::rotation::Rotation::rotate_point","value":"pub fn rotate_point(&Self, P) -> P","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Rotate a point using this rotation, by converting it to its\n representation as a vector.\n","sig":null,"attributes":[{"value":"/ Rotate a point using this rotation, by converting it to its","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122074,"byte_end":122137,"line_start":45,"line_end":45,"column_start":5,"column_end":68}},{"value":"/ representation as a vector.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122142,"byte_end":122173,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122178,"byte_end":122187,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122380,"byte_end":122386,"line_start":53,"line_end":53,"column_start":8,"column_end":14},"name":"concat","qualname":"::rotation::Rotation::concat","value":"pub fn concat(&Self, &Self) -> Self","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a new rotation which combines both this rotation, and another.\n","sig":null,"attributes":[{"value":"/ Create a new rotation which combines both this rotation, and another.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122299,"byte_end":122372,"line_start":52,"line_end":52,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122543,"byte_end":122549,"line_start":57,"line_end":57,"column_start":8,"column_end":14},"name":"invert","qualname":"::rotation::Rotation::invert","value":"pub fn invert(&Self) -> Self","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a new rotation which \"un-does\" this rotation. That is,\n `r.concat(r.invert())` is the identity.\n","sig":null,"attributes":[{"value":"/ Create a new rotation which \"un-does\" this rotation. That is,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122422,"byte_end":122487,"line_start":55,"line_end":55,"column_start":5,"column_end":70}},{"value":"/ `r.concat(r.invert())` is the identity.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122492,"byte_end":122535,"line_start":56,"line_end":56,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122656,"byte_end":122667,"line_start":61,"line_end":61,"column_start":8,"column_end":19},"name":"concat_self","qualname":"::rotation::Rotation::concat_self","value":"pub fn concat_self(&mut Self, &Self)","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Modify this rotation in-place by combining it with another.\n","sig":null,"attributes":[{"value":"/ Modify this rotation in-place by combining it with another.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122571,"byte_end":122634,"line_start":59,"line_end":59,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122639,"byte_end":122648,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122805,"byte_end":122816,"line_start":67,"line_end":67,"column_start":8,"column_end":19},"name":"invert_self","qualname":"::rotation::Rotation::invert_self","value":"pub fn invert_self(&mut Self)","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Invert this rotation in-place.\n","sig":null,"attributes":[{"value":"/ Invert this rotation in-place.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122749,"byte_end":122783,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122788,"byte_end":122797,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":580},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122912,"byte_end":122921,"line_start":73,"line_end":73,"column_start":11,"column_end":20},"name":"Rotation2","qualname":"::rotation::Rotation2","value":"Rotation2<S: BaseFloat>: Rotation<Point2<S>> + Into<Matrix2<S>> + Into<Basis2<S>>","parent":null,"children":[{"krate":0,"index":582}],"decl_id":null,"docs":" A two-dimensional rotation.\n","sig":null,"attributes":[{"value":"/ A two-dimensional rotation.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122870,"byte_end":122901,"line_start":72,"line_end":72,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123203,"byte_end":123213,"line_start":78,"line_end":78,"column_start":8,"column_end":18},"name":"from_angle","qualname":"::rotation::Rotation2::from_angle","value":"pub fn from_angle(Rad<S>) -> Self","parent":{"krate":0,"index":580},"children":[],"decl_id":null,"docs":" Create a rotation by a given angle. Thus is a redundant case of both\n from_axis_angle() and from_euler() for 2D space.\n","sig":null,"attributes":[{"value":"/ Create a rotation by a given angle. Thus is a redundant case of both","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123066,"byte_end":123138,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ from_axis_angle() and from_euler() for 2D space.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123143,"byte_end":123195,"line_start":77,"line_end":77,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":583},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123285,"byte_end":123294,"line_start":82,"line_end":82,"column_start":11,"column_end":20},"name":"Rotation3","qualname":"::rotation::Rotation3","value":"Rotation3<S: BaseFloat>: Rotation<Point3<S>> + Into<Matrix3<S>> + Into<Basis3<S>> + Into<Quaternion<S>>","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589}],"decl_id":null,"docs":" A three-dimensional rotation.\n","sig":null,"attributes":[{"value":"/ A three-dimensional rotation.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123241,"byte_end":123274,"line_start":81,"line_end":81,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123559,"byte_end":123574,"line_start":87,"line_end":87,"column_start":8,"column_end":23},"name":"from_axis_angle","qualname":"::rotation::Rotation3::from_axis_angle","value":"pub fn from_axis_angle(Vector3<S>, Rad<S>) -> Self","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Create a rotation using an angle around a given axis.\n","sig":null,"attributes":[{"value":"/ Create a rotation using an angle around a given axis.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123494,"byte_end":123551,"line_start":86,"line_end":86,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123908,"byte_end":123918,"line_start":96,"line_end":96,"column_start":8,"column_end":18},"name":"from_euler","qualname":"::rotation::Rotation3::from_euler","value":"pub fn from_euler(Rad<S>, Rad<S>, Rad<S>) -> Self","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Create a rotation from a set of euler angles.","sig":null,"attributes":[{"value":"/ Create a rotation from a set of euler angles.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123622,"byte_end":123671,"line_start":89,"line_end":89,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123676,"byte_end":123679,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123684,"byte_end":123700,"line_start":91,"line_end":91,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123705,"byte_end":123708,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ - `x`: the angular rotation around the `x` axis (pitch).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123713,"byte_end":123773,"line_start":93,"line_end":93,"column_start":5,"column_end":65}},{"value":"/ - `y`: the angular rotation around the `y` axis (yaw).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123778,"byte_end":123836,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/ - `z`: the angular rotation around the `z` axis (roll).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123841,"byte_end":123900,"line_start":95,"line_end":95,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124052,"byte_end":124064,"line_start":100,"line_end":100,"column_start":8,"column_end":20},"name":"from_angle_x","qualname":"::rotation::Rotation3::from_angle_x","value":"pub fn from_angle_x(Rad<S>) -> Self","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Create a rotation from an angle around the `x` axis (pitch).\n","sig":null,"attributes":[{"value":"/ Create a rotation from an angle around the `x` axis (pitch).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123966,"byte_end":124030,"line_start":98,"line_end":98,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124035,"byte_end":124044,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124246,"byte_end":124258,"line_start":106,"line_end":106,"column_start":8,"column_end":20},"name":"from_angle_y","qualname":"::rotation::Rotation3::from_angle_y","value":"pub fn from_angle_y(Rad<S>) -> Self","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Create a rotation from an angle around the `y` axis (yaw).\n","sig":null,"attributes":[{"value":"/ Create a rotation from an angle around the `y` axis (yaw).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124162,"byte_end":124224,"line_start":104,"line_end":104,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124229,"byte_end":124238,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124441,"byte_end":124453,"line_start":112,"line_end":112,"column_start":8,"column_end":20},"name":"from_angle_z","qualname":"::rotation::Rotation3::from_angle_z","value":"pub fn from_angle_z(Rad<S>) -> Self","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Create a rotation from an angle around the `z` axis (roll).\n","sig":null,"attributes":[{"value":"/ Create a rotation from an angle around the `z` axis (roll).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124356,"byte_end":124419,"line_start":110,"line_end":110,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124424,"byte_end":124433,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3412},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":126357,"byte_end":126363,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"Basis2","qualname":"::rotation::Basis2","value":"Basis2 {  }","parent":null,"children":[{"krate":0,"index":3414}],"decl_id":null,"docs":" A two-dimensional rotation matrix.","sig":null,"attributes":[{"value":"/ A two-dimensional rotation matrix.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124550,"byte_end":124588,"line_start":118,"line_end":118,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124589,"byte_end":124592,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ The matrix is guaranteed to be orthogonal, so some operations can be","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124593,"byte_end":124665,"line_start":120,"line_end":120,"column_start":1,"column_end":73}},{"value":"/ implemented more efficiently than the implementations for `math::Matrix2`. To","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124666,"byte_end":124747,"line_start":121,"line_end":121,"column_start":1,"column_end":82}},{"value":"/ enforce orthogonality at the type level the operations have been restricted","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124748,"byte_end":124827,"line_start":122,"line_end":122,"column_start":1,"column_end":80}},{"value":"/ to a subset of those implemented on `Matrix2`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124828,"byte_end":124878,"line_start":123,"line_end":123,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124879,"byte_end":124882,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124883,"byte_end":124897,"line_start":125,"line_end":125,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124898,"byte_end":124901,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ Suppose we want to rotate a vector that lies in the x-y plane by some","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124902,"byte_end":124975,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/ angle. We can accomplish this quite easily with a two-dimensional rotation","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":124976,"byte_end":125054,"line_start":128,"line_end":128,"column_start":1,"column_end":79}},{"value":"/ matrix:","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125055,"byte_end":125066,"line_start":129,"line_end":129,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125067,"byte_end":125070,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125071,"byte_end":125084,"line_start":131,"line_end":131,"column_start":1,"column_end":14}},{"value":"/ use cgmath::rad;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125085,"byte_end":125105,"line_start":132,"line_end":132,"column_start":1,"column_end":21}},{"value":"/ use cgmath::Vector2;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125106,"byte_end":125130,"line_start":133,"line_end":133,"column_start":1,"column_end":25}},{"value":"/ use cgmath::{Matrix, Matrix2};","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125131,"byte_end":125165,"line_start":134,"line_end":134,"column_start":1,"column_end":35}},{"value":"/ use cgmath::{Rotation, Rotation2, Basis2};","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125166,"byte_end":125212,"line_start":135,"line_end":135,"column_start":1,"column_end":47}},{"value":"/ use cgmath::ApproxEq;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125213,"byte_end":125238,"line_start":136,"line_end":136,"column_start":1,"column_end":26}},{"value":"/ use std::f64;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125239,"byte_end":125256,"line_start":137,"line_end":137,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125257,"byte_end":125260,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ // For simplicity, we will rotate the unit x vector to the unit y vector --","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125261,"byte_end":125340,"line_start":139,"line_end":139,"column_start":1,"column_end":80}},{"value":"/ // so the angle is 90 degrees, or π/2.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125341,"byte_end":125384,"line_start":140,"line_end":140,"column_start":1,"column_end":43}},{"value":"/ let unit_x: Vector2<f64> = Vector2::unit_x();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125385,"byte_end":125434,"line_start":141,"line_end":141,"column_start":1,"column_end":50}},{"value":"/ let rot: Basis2<f64> = Rotation2::from_angle(rad(0.5f64 * f64::consts::PI));","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125435,"byte_end":125515,"line_start":142,"line_end":142,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125516,"byte_end":125519,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ // Rotate the vector using the two-dimensional rotation matrix:","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125520,"byte_end":125587,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/ let unit_y = rot.rotate_vector(unit_x);","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125588,"byte_end":125631,"line_start":145,"line_end":145,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125632,"byte_end":125635,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ // Since sin(π/2) may not be exactly zero due to rounding errors, we can","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125636,"byte_end":125713,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/ // use cgmath's approx_eq() feature to show that it is close enough.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125714,"byte_end":125786,"line_start":148,"line_end":148,"column_start":1,"column_end":73}},{"value":"/ assert!(unit_y.approx_eq(&Vector2::unit_y()));","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125787,"byte_end":125837,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125838,"byte_end":125841,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ // This is exactly equivalent to using the raw matrix itself:","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125842,"byte_end":125907,"line_start":151,"line_end":151,"column_start":1,"column_end":66}},{"value":"/ let unit_y2: Matrix2<_> = rot.into();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125908,"byte_end":125949,"line_start":152,"line_end":152,"column_start":1,"column_end":42}},{"value":"/ let unit_y2 = unit_y2 * unit_x;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125950,"byte_end":125985,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(unit_y2, unit_y);","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":125986,"byte_end":126018,"line_start":154,"line_end":154,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":126019,"byte_end":126022,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ // Note that we can also concatenate rotations:","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":126023,"byte_end":126074,"line_start":156,"line_end":156,"column_start":1,"column_end":52}},{"value":"/ let rot_half: Basis2<f64> = Rotation2::from_angle(rad(0.25f64 * f64::consts::PI));","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":126075,"byte_end":126161,"line_start":157,"line_end":157,"column_start":1,"column_end":87}},{"value":"/ let unit_y3 = rot_half.concat(&rot_half).rotate_vector(unit_x);","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":126162,"byte_end":126229,"line_start":158,"line_end":158,"column_start":1,"column_end":68}},{"value":"/ assert!(unit_y3.approx_eq(&unit_y2));","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":126230,"byte_end":126271,"line_start":159,"line_end":159,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":126272,"byte_end":126279,"line_start":160,"line_end":160,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3437},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":128504,"byte_end":128510,"line_start":232,"line_end":232,"column_start":12,"column_end":18},"name":"Basis3","qualname":"::rotation::Basis3","value":"Basis3 {  }","parent":null,"children":[{"krate":0,"index":3439}],"decl_id":null,"docs":" A three-dimensional rotation matrix.","sig":null,"attributes":[{"value":"/ A three-dimensional rotation matrix.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":128074,"byte_end":128114,"line_start":225,"line_end":225,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":128115,"byte_end":128118,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ The matrix is guaranteed to be orthogonal, so some operations, specifically","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":128119,"byte_end":128198,"line_start":227,"line_end":227,"column_start":1,"column_end":80}},{"value":"/ inversion, can be implemented more efficiently than the implementations for","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":128199,"byte_end":128278,"line_start":228,"line_end":228,"column_start":1,"column_end":80}},{"value":"/ `math::Matrix3`. To ensure orthogonality is maintained, the operations have","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":128279,"byte_end":128358,"line_start":229,"line_end":229,"column_start":1,"column_end":80}},{"value":"/ been restricted to a subeset of those implemented on `Matrix3`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":128359,"byte_end":128426,"line_start":230,"line_end":230,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":128651,"byte_end":128666,"line_start":239,"line_end":239,"column_start":12,"column_end":27},"name":"from_quaternion","qualname":"<Basis3<S>>::from_quaternion","value":"pub fn from_quaternion(&Quaternion<S>) -> Basis3<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a new rotation matrix from a quaternion.\n","sig":null,"attributes":[{"value":"/ Create a new rotation matrix from a quaternion.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":128574,"byte_end":128625,"line_start":237,"line_end":237,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":128630,"byte_end":128639,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":657},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":132161,"byte_end":132170,"line_start":30,"line_end":30,"column_start":11,"column_end":20},"name":"Transform","qualname":"::transform::Transform","value":"Transform<P: Point>: Sized","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667}],"decl_id":null,"docs":" A trait representing an [affine\n transformation](https://en.wikipedia.org/wiki/Affine_transformation) that\n can be applied to points or vectors. An affine transformation is one which\n","sig":null,"attributes":[{"value":"/ A trait representing an [affine","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":131958,"byte_end":131993,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ transformation](https://en.wikipedia.org/wiki/Affine_transformation) that","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":131994,"byte_end":132071,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ can be applied to points or vectors. An affine transformation is one which","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":132072,"byte_end":132150,"line_start":29,"line_end":29,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":132294,"byte_end":132297,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"one","qualname":"::transform::Transform::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":657},"children":[],"decl_id":null,"docs":" Create an identity transformation. That is, a transformation which\n does nothing.\n","sig":null,"attributes":[{"value":"/ Create an identity transformation. That is, a transformation which","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":132194,"byte_end":132264,"line_start":31,"line_end":31,"column_start":5,"column_end":75}},{"value":"/ does nothing.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":132269,"byte_end":132286,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":132439,"byte_end":132446,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"look_at","qualname":"::transform::Transform::look_at","value":"pub fn look_at(P, P, P::Vector) -> Self","parent":{"krate":0,"index":657},"children":[],"decl_id":null,"docs":" Create a transformation that rotates a vector to look at `center` from\n `eye`, using `up` for orientation.\n","sig":null,"attributes":[{"value":"/ Create a transformation that rotates a vector to look at `center` from","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":132314,"byte_end":132388,"line_start":35,"line_end":35,"column_start":5,"column_end":79}},{"value":"/ `eye`, using `up` for orientation.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":132393,"byte_end":132431,"line_start":36,"line_end":36,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":132547,"byte_end":132563,"line_start":40,"line_end":40,"column_start":8,"column_end":24},"name":"transform_vector","qualname":"::transform::Transform::transform_vector","value":"pub fn transform_vector(&Self, P::Vector) -> P::Vector","parent":{"krate":0,"index":657},"children":[],"decl_id":null,"docs":" Transform a vector using this transform.\n","sig":null,"attributes":[{"value":"/ Transform a vector using this transform.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":132495,"byte_end":132539,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":132657,"byte_end":132672,"line_start":43,"line_end":43,"column_start":8,"column_end":23},"name":"transform_point","qualname":"::transform::Transform::transform_point","value":"pub fn transform_point(&Self, P) -> P","parent":{"krate":0,"index":657},"children":[],"decl_id":null,"docs":" Transform a point using this transform.\n","sig":null,"attributes":[{"value":"/ Transform a point using this transform.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":132606,"byte_end":132649,"line_start":42,"line_end":42,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":132778,"byte_end":132796,"line_start":47,"line_end":47,"column_start":8,"column_end":26},"name":"transform_as_point","qualname":"::transform::Transform::transform_as_point","value":"pub fn transform_as_point(&Self, P::Vector) -> P::Vector","parent":{"krate":0,"index":657},"children":[],"decl_id":null,"docs":" Transform a vector as a point using this transform.\n","sig":null,"attributes":[{"value":"/ Transform a vector as a point using this transform.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":132701,"byte_end":132756,"line_start":45,"line_end":45,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":132761,"byte_end":132770,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":133019,"byte_end":133025,"line_start":53,"line_end":53,"column_start":8,"column_end":14},"name":"concat","qualname":"::transform::Transform::concat","value":"pub fn concat(&Self, &Self) -> Self","parent":{"krate":0,"index":657},"children":[],"decl_id":null,"docs":" Combine this transform with another, yielding a new transformation\n which has the effects of both.\n","sig":null,"attributes":[{"value":"/ Combine this transform with another, yielding a new transformation","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":132902,"byte_end":132972,"line_start":51,"line_end":51,"column_start":5,"column_end":75}},{"value":"/ which has the effects of both.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":132977,"byte_end":133011,"line_start":52,"line_end":52,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":133116,"byte_end":133122,"line_start":56,"line_end":56,"column_start":8,"column_end":14},"name":"invert","qualname":"::transform::Transform::invert","value":"pub fn invert(&Self) -> Option<Self>","parent":{"krate":0,"index":657},"children":[],"decl_id":null,"docs":" Create a transform that \"un-does\" this one.\n","sig":null,"attributes":[{"value":"/ Create a transform that \"un-does\" this one.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":133061,"byte_end":133108,"line_start":55,"line_end":55,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":133224,"byte_end":133235,"line_start":60,"line_end":60,"column_start":8,"column_end":19},"name":"concat_self","qualname":"::transform::Transform::concat_self","value":"pub fn concat_self(&mut Self, &Self)","parent":{"krate":0,"index":657},"children":[],"decl_id":null,"docs":" Combine this transform with another, in-place.\n","sig":null,"attributes":[{"value":"/ Combine this transform with another, in-place.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":133152,"byte_end":133202,"line_start":58,"line_end":58,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":133207,"byte_end":133216,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":133431,"byte_end":133442,"line_start":67,"line_end":67,"column_start":8,"column_end":19},"name":"invert_self","qualname":"::transform::Transform::invert_self","value":"pub fn invert_self(&mut Self)","parent":{"krate":0,"index":657},"children":[],"decl_id":null,"docs":" Invert this transform in-place, failing if the transformation is not\n invertible.\n","sig":null,"attributes":[{"value":"/ Invert this transform in-place, failing if the transformation is not","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":133317,"byte_end":133389,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ invertible.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":133394,"byte_end":133409,"line_start":65,"line_end":65,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":133414,"byte_end":133423,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3462},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":133667,"byte_end":133677,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"Decomposed","qualname":"::transform::Decomposed","value":"Decomposed { scale, rot, disp }","parent":null,"children":[{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467}],"decl_id":null,"docs":" A generic transformation consisting of a rotation,\n displacement vector and scale amount.\n","sig":null,"attributes":[{"value":"/ A generic transformation consisting of a rotation,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":133504,"byte_end":133558,"line_start":72,"line_end":72,"column_start":1,"column_end":55}},{"value":"/ displacement vector and scale amount.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":133559,"byte_end":133600,"line_start":73,"line_end":73,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3465},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":133702,"byte_end":133707,"line_start":76,"line_end":76,"column_start":9,"column_end":14},"name":"scale","qualname":"::transform::Decomposed::scale","value":"<V as vector::Vector>::Scalar","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3466},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":133728,"byte_end":133731,"line_start":77,"line_end":77,"column_start":9,"column_end":12},"name":"rot","qualname":"::transform::Decomposed::rot","value":"R","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3467},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":133744,"byte_end":133748,"line_start":78,"line_end":78,"column_start":9,"column_end":13},"name":"disp","qualname":"::transform::Decomposed::disp","value":"V","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":677},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":135568,"byte_end":135578,"line_start":141,"line_end":141,"column_start":11,"column_end":21},"name":"Transform2","qualname":"::transform::Transform2","value":"Transform2<S: BaseNum>: Transform<Point2<S>> + Into<Matrix3<S>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":679},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":135645,"byte_end":135655,"line_start":142,"line_end":142,"column_start":11,"column_end":21},"name":"Transform3","qualname":"::transform::Transform3","value":"Transform3<S: BaseNum>: Transform<Point3<S>> + Into<Matrix4<S>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3490},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":136861,"byte_end":136874,"line_start":175,"line_end":175,"column_start":12,"column_end":25},"name":"AffineMatrix3","qualname":"::transform::AffineMatrix3","value":"AffineMatrix3 { mat }","parent":null,"children":[{"krate":0,"index":3492}],"decl_id":null,"docs":" A homogeneous transformation matrix.\n","sig":null,"attributes":[{"value":"/ A homogeneous transformation matrix.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":136754,"byte_end":136794,"line_start":173,"line_end":173,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":3492},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":136888,"byte_end":136891,"line_start":176,"line_end":176,"column_start":9,"column_end":12},"name":"mat","qualname":"::transform::AffineMatrix3::mat","value":"matrix::Matrix4<S>","parent":{"krate":0,"index":3490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":723},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":139033,"byte_end":139044,"line_start":27,"line_end":27,"column_start":8,"column_end":19},"name":"perspective","qualname":"::projection::perspective","value":"pub fn perspective<S: BaseFloat, A: Into<Rad<S>>>(A, S, S, S) -> Matrix4<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a perspective projection matrix.","sig":null,"attributes":[{"value":"/ Create a perspective projection matrix.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":138850,"byte_end":138893,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":138894,"byte_end":138897,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This is the equivalent to the [gluPerspective]","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":138898,"byte_end":138948,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ (http://www.opengl.org/sdk/docs/man2/xhtml/gluPerspective.xml) function.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":138949,"byte_end":139025,"line_start":26,"line_end":26,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":726},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":139461,"byte_end":139468,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"frustum","qualname":"::projection::frustum","value":"pub fn frustum<S: BaseFloat>(S, S, S, S, S, S) -> Matrix4<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a perspective matrix from a view frustrum.","sig":null,"attributes":[{"value":"/ Create a perspective matrix from a view frustrum.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":139262,"byte_end":139315,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":139316,"byte_end":139319,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This is the equivalent of the now deprecated [glFrustrum]","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":139320,"byte_end":139381,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/ (http://www.opengl.org/sdk/docs/man2/xhtml/glFrustum.xml) function.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":139382,"byte_end":139453,"line_start":39,"line_end":39,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":728},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":139907,"byte_end":139912,"line_start":55,"line_end":55,"column_start":8,"column_end":13},"name":"ortho","qualname":"::projection::ortho","value":"pub fn ortho<S: BaseFloat>(S, S, S, S, S, S) -> Matrix4<S>","parent":null,"children":[],"decl_id":null,"docs":" Create an orthographic projection matrix.","sig":null,"attributes":[{"value":"/ Create an orthographic projection matrix.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":139721,"byte_end":139766,"line_start":51,"line_end":51,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":139767,"byte_end":139770,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ This is the equivalent of the now deprecated [glOrtho]","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":139771,"byte_end":139829,"line_start":53,"line_end":53,"column_start":1,"column_end":59}},{"value":"/ (http://www.opengl.org/sdk/docs/man2/xhtml/glOrtho.xml) function.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":139830,"byte_end":139899,"line_start":54,"line_end":54,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":3509},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":140306,"byte_end":140320,"line_start":68,"line_end":68,"column_start":12,"column_end":26},"name":"PerspectiveFov","qualname":"::projection::PerspectiveFov","value":"PerspectiveFov { fovy, aspect, near, far }","parent":null,"children":[{"krate":0,"index":3511},{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514}],"decl_id":null,"docs":" A perspective projection based on a vertical field-of-view angle.\n","sig":null,"attributes":[{"value":"/ A perspective projection based on a vertical field-of-view angle.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":140159,"byte_end":140228,"line_start":66,"line_end":66,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":3511},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":140334,"byte_end":140338,"line_start":69,"line_end":69,"column_start":9,"column_end":13},"name":"fovy","qualname":"::projection::PerspectiveFov::fovy","value":"angle::Rad<S>","parent":{"krate":0,"index":3509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3512},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":140358,"byte_end":140364,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"name":"aspect","qualname":"::projection::PerspectiveFov::aspect","value":"S","parent":{"krate":0,"index":3509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3513},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":140377,"byte_end":140381,"line_start":71,"line_end":71,"column_start":9,"column_end":13},"name":"near","qualname":"::projection::PerspectiveFov::near","value":"S","parent":{"krate":0,"index":3509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3514},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":140396,"byte_end":140399,"line_start":72,"line_end":72,"column_start":9,"column_end":12},"name":"far","qualname":"::projection::PerspectiveFov::far","value":"S","parent":{"krate":0,"index":3509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":140460,"byte_end":140474,"line_start":76,"line_end":76,"column_start":12,"column_end":26},"name":"to_perspective","qualname":"<PerspectiveFov<S>>::to_perspective","value":"pub fn to_perspective(&Self) -> Perspective<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3540},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":142762,"byte_end":142773,"line_start":134,"line_end":134,"column_start":12,"column_end":23},"name":"Perspective","qualname":"::projection::Perspective","value":"Perspective { left, right, bottom, top, near, far }","parent":null,"children":[{"krate":0,"index":3542},{"krate":0,"index":3543},{"krate":0,"index":3544},{"krate":0,"index":3545},{"krate":0,"index":3546},{"krate":0,"index":3547}],"decl_id":null,"docs":" A perspective projection with arbitrary left/right/bottom/top distances\n","sig":null,"attributes":[{"value":"/ A perspective projection with arbitrary left/right/bottom/top distances","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":142609,"byte_end":142684,"line_start":132,"line_end":132,"column_start":1,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":3542},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":142787,"byte_end":142791,"line_start":135,"line_end":135,"column_start":9,"column_end":13},"name":"left","qualname":"::projection::Perspective::left","value":"S","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3543},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":142806,"byte_end":142811,"line_start":136,"line_end":136,"column_start":9,"column_end":14},"name":"right","qualname":"::projection::Perspective::right","value":"S","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3544},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":142825,"byte_end":142831,"line_start":137,"line_end":137,"column_start":9,"column_end":15},"name":"bottom","qualname":"::projection::Perspective::bottom","value":"S","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3545},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":142844,"byte_end":142847,"line_start":138,"line_end":138,"column_start":9,"column_end":12},"name":"top","qualname":"::projection::Perspective::top","value":"S","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3546},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":142863,"byte_end":142867,"line_start":139,"line_end":139,"column_start":9,"column_end":13},"name":"near","qualname":"::projection::Perspective::near","value":"S","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3547},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":142882,"byte_end":142885,"line_start":140,"line_end":140,"column_start":9,"column_end":12},"name":"far","qualname":"::projection::Perspective::far","value":"S","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3575},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":144558,"byte_end":144563,"line_start":180,"line_end":180,"column_start":12,"column_end":17},"name":"Ortho","qualname":"::projection::Ortho","value":"Ortho { left, right, bottom, top, near, far }","parent":null,"children":[{"krate":0,"index":3577},{"krate":0,"index":3578},{"krate":0,"index":3579},{"krate":0,"index":3580},{"krate":0,"index":3581},{"krate":0,"index":3582}],"decl_id":null,"docs":" An orthographic projection with arbitrary left/right/bottom/top distances\n","sig":null,"attributes":[{"value":"/ An orthographic projection with arbitrary left/right/bottom/top distances","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":144403,"byte_end":144480,"line_start":178,"line_end":178,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":3577},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":144577,"byte_end":144581,"line_start":181,"line_end":181,"column_start":9,"column_end":13},"name":"left","qualname":"::projection::Ortho::left","value":"S","parent":{"krate":0,"index":3575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3578},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":144596,"byte_end":144601,"line_start":182,"line_end":182,"column_start":9,"column_end":14},"name":"right","qualname":"::projection::Ortho::right","value":"S","parent":{"krate":0,"index":3575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3579},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":144615,"byte_end":144621,"line_start":183,"line_end":183,"column_start":9,"column_end":15},"name":"bottom","qualname":"::projection::Ortho::bottom","value":"S","parent":{"krate":0,"index":3575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3580},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":144634,"byte_end":144637,"line_start":184,"line_end":184,"column_start":9,"column_end":12},"name":"top","qualname":"::projection::Ortho::top","value":"S","parent":{"krate":0,"index":3575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3581},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":144653,"byte_end":144657,"line_start":185,"line_end":185,"column_start":9,"column_end":13},"name":"near","qualname":"::projection::Ortho::near","value":"S","parent":{"krate":0,"index":3575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3582},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":144672,"byte_end":144675,"line_start":186,"line_end":186,"column_start":9,"column_end":12},"name":"far","qualname":"::projection::Ortho::far","value":"S","parent":{"krate":0,"index":3575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":747},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/approx.rs","byte_start":146486,"byte_end":146494,"line_start":19,"line_end":19,"column_start":11,"column_end":19},"name":"ApproxEq","qualname":"::approx::ApproxEq","value":"ApproxEq: Sized","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":748},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/approx.rs","byte_start":146513,"byte_end":146520,"line_start":20,"line_end":20,"column_start":10,"column_end":17},"name":"Epsilon","qualname":"::approx::ApproxEq::Epsilon","value":"type Epsilon: NumCast + Float;","parent":{"krate":0,"index":747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/approx.rs","byte_start":146547,"byte_end":146561,"line_start":22,"line_end":22,"column_start":8,"column_end":22},"name":"approx_epsilon","qualname":"::approx::ApproxEq::approx_epsilon","value":"pub fn approx_epsilon() -> Self::Epsilon","parent":{"krate":0,"index":747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/approx.rs","byte_start":146630,"byte_end":146639,"line_start":26,"line_end":26,"column_start":8,"column_end":17},"name":"approx_eq","qualname":"::approx::ApproxEq::approx_eq","value":"pub fn approx_eq(&Self, &Self) -> bool","parent":{"krate":0,"index":747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/approx.rs","byte_start":146744,"byte_end":146757,"line_start":30,"line_end":30,"column_start":8,"column_end":21},"name":"approx_eq_eps","qualname":"::approx::ApproxEq::approx_eq_eps","value":"pub fn approx_eq_eps(&Self, &Self, &Self::Epsilon) -> bool","parent":{"krate":0,"index":747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":763},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":148876,"byte_end":148886,"line_start":24,"line_end":24,"column_start":11,"column_end":21},"name":"PartialOrd","qualname":"::num::PartialOrd","value":"PartialOrd","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765}],"decl_id":null,"docs":" A trait providing a [partial ordering](http://mathworld.wolfram.com/PartialOrder.html).\n","sig":null,"attributes":[{"value":"/ A trait providing a [partial ordering](http://mathworld.wolfram.com/PartialOrder.html).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":148774,"byte_end":148865,"line_start":23,"line_end":23,"column_start":1,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":148896,"byte_end":148907,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"partial_min","qualname":"::num::PartialOrd::partial_min","value":"pub fn partial_min(Self, Self) -> Self","parent":{"krate":0,"index":763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":148943,"byte_end":148954,"line_start":26,"line_end":26,"column_start":8,"column_end":19},"name":"partial_max","qualname":"::num::PartialOrd::partial_max","value":"pub fn partial_max(Self, Self) -> Self","parent":{"krate":0,"index":763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":768},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":149828,"byte_end":149835,"line_start":63,"line_end":63,"column_start":11,"column_end":18},"name":"BaseNum","qualname":"::num::BaseNum","value":"BaseNum: Copy + NumCast + Clone + Num + PartialOrd + cmp::PartialOrd + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Base numeric types with partial ordering\n","sig":null,"attributes":[{"value":"/ Base numeric types with partial ordering","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":149773,"byte_end":149817,"line_start":62,"line_end":62,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":771},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":150444,"byte_end":150451,"line_start":98,"line_end":98,"column_start":11,"column_end":18},"name":"BaseInt","qualname":"::num::BaseInt","value":"BaseInt: BaseNum","parent":null,"children":[],"decl_id":null,"docs":" Base integer types\n","sig":null,"attributes":[{"value":"/ Base integer types","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":150411,"byte_end":150433,"line_start":97,"line_end":97,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":782},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":150749,"byte_end":150758,"line_start":112,"line_end":112,"column_start":11,"column_end":20},"name":"BaseFloat","qualname":"::num::BaseFloat","value":"BaseFloat: BaseNum + Float + ApproxEq<Epsilon = Self>","parent":null,"children":[],"decl_id":null,"docs":" Base floating point types\n","sig":null,"attributes":[{"value":"/ Base floating point types","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":150709,"byte_end":150738,"line_start":111,"line_end":111,"column_start":1,"column_end":30}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13912,"byte_end":13919,"line_start":50,"line_end":50,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":14922,"byte_end":14929,"line_start":82,"line_end":82,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":15106,"byte_end":15113,"line_start":91,"line_end":91,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":18774,"byte_end":18781,"line_start":182,"line_end":182,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":18986,"byte_end":18993,"line_start":192,"line_end":192,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":21435,"byte_end":21442,"line_start":249,"line_end":249,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":26515,"byte_end":26522,"line_start":391,"line_end":391,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":27574,"byte_end":27581,"line_start":433,"line_end":433,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":28998,"byte_end":29005,"line_start":494,"line_end":494,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":30284,"byte_end":30291,"line_start":540,"line_end":540,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":32497,"byte_end":32504,"line_start":614,"line_end":614,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":34056,"byte_end":34063,"line_start":664,"line_end":664,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":38719,"byte_end":38726,"line_start":786,"line_end":786,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":38984,"byte_end":38991,"line_start":796,"line_end":796,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":39302,"byte_end":39309,"line_start":807,"line_end":807,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":48725,"byte_end":48732,"line_start":1039,"line_end":1039,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":49105,"byte_end":49112,"line_start":1049,"line_end":1049,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":49582,"byte_end":49589,"line_start":1060,"line_end":1060,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":50050,"byte_end":50060,"line_start":1071,"line_end":1071,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":51776,"byte_end":51783,"line_start":1114,"line_end":1114,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":52021,"byte_end":52028,"line_start":1122,"line_end":1122,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":52374,"byte_end":52381,"line_start":1131,"line_end":1131,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":52872,"byte_end":52879,"line_start":1141,"line_end":1141,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":53038,"byte_end":53045,"line_start":1148,"line_end":1148,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":53218,"byte_end":53225,"line_start":1155,"line_end":1155,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":54683,"byte_end":54693,"line_start":41,"line_end":41,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":59162,"byte_end":59172,"line_start":171,"line_end":171,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":59416,"byte_end":59426,"line_start":181,"line_end":181,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":62445,"byte_end":62452,"line_start":264,"line_end":264,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":63221,"byte_end":63228,"line_start":289,"line_end":289,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":64085,"byte_end":64095,"line_start":315,"line_end":315,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":64394,"byte_end":64400,"line_start":327,"line_end":327,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":64547,"byte_end":64557,"line_start":332,"line_end":332,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":65542,"byte_end":65552,"line_start":364,"line_end":364,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":66439,"byte_end":66449,"line_start":385,"line_end":385,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":66610,"byte_end":66620,"line_start":392,"line_end":392,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":66760,"byte_end":66770,"line_start":399,"line_end":399,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":66917,"byte_end":66927,"line_start":406,"line_end":406,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":67452,"byte_end":67462,"line_start":427,"line_end":427,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":67650,"byte_end":67660,"line_start":434,"line_end":434,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":67812,"byte_end":67822,"line_start":441,"line_end":441,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":67981,"byte_end":67991,"line_start":448,"line_end":448,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":69333,"byte_end":69343,"line_start":495,"line_end":495,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83903,"byte_end":83910,"line_start":301,"line_end":301,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":84680,"byte_end":84687,"line_start":329,"line_end":329,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":85952,"byte_end":85959,"line_start":372,"line_end":372,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":89167,"byte_end":89174,"line_start":471,"line_end":471,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":89350,"byte_end":89357,"line_start":478,"line_end":478,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":89539,"byte_end":89546,"line_start":485,"line_end":485,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":89727,"byte_end":89734,"line_start":492,"line_end":492,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":89890,"byte_end":89897,"line_start":498,"line_end":498,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":90067,"byte_end":90074,"line_start":504,"line_end":504,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":100508,"byte_end":100511,"line_start":43,"line_end":43,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":100682,"byte_end":100685,"line_start":50,"line_end":50,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":108867,"byte_end":108873,"line_start":41,"line_end":41,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":108991,"byte_end":108997,"line_start":48,"line_end":48,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":109127,"byte_end":109133,"line_start":55,"line_end":55,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":114273,"byte_end":114279,"line_start":192,"line_end":192,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":114435,"byte_end":114441,"line_start":198,"line_end":198,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":126433,"byte_end":126439,"line_start":166,"line_end":166,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":126563,"byte_end":126570,"line_start":173,"line_end":173,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":126686,"byte_end":126692,"line_start":178,"line_end":178,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":127750,"byte_end":127756,"line_start":212,"line_end":212,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":127966,"byte_end":127972,"line_start":221,"line_end":221,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":128558,"byte_end":128564,"line_start":236,"line_end":236,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":128799,"byte_end":128805,"line_start":244,"line_end":244,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":128929,"byte_end":128936,"line_start":251,"line_end":251,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":129048,"byte_end":129058,"line_start":256,"line_end":256,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":129184,"byte_end":129190,"line_start":261,"line_end":261,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":130277,"byte_end":130283,"line_start":296,"line_end":296,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":130493,"byte_end":130499,"line_start":305,"line_end":305,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":133804,"byte_end":133814,"line_start":81,"line_end":81,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":135785,"byte_end":135792,"line_start":144,"line_end":144,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":136091,"byte_end":136098,"line_start":153,"line_end":153,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":136379,"byte_end":136389,"line_start":162,"line_end":162,"column_start":55,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":136463,"byte_end":136473,"line_start":164,"line_end":164,"column_start":55,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":136557,"byte_end":136567,"line_start":166,"line_end":166,"column_start":65,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":136952,"byte_end":136965,"line_start":179,"line_end":179,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":137861,"byte_end":137868,"line_start":211,"line_end":211,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":137985,"byte_end":137998,"line_start":215,"line_end":215,"column_start":38,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":140429,"byte_end":140443,"line_start":75,"line_end":75,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":140941,"byte_end":140948,"line_start":93,"line_end":93,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":142940,"byte_end":142947,"line_start":143,"line_end":143,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":144724,"byte_end":144731,"line_start":189,"line_end":189,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":13912,"byte_end":13919,"line_start":50,"line_end":50,"column_start":20,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":14922,"byte_end":14929,"line_start":82,"line_end":82,"column_start":33,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":15106,"byte_end":15113,"line_start":91,"line_end":91,"column_start":20,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":18774,"byte_end":18781,"line_start":182,"line_end":182,"column_start":33,"column_end":40},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":18986,"byte_end":18993,"line_start":192,"line_end":192,"column_start":20,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":21435,"byte_end":21442,"line_start":249,"line_end":249,"column_start":33,"column_end":40},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":26515,"byte_end":26522,"line_start":391,"line_end":391,"column_start":31,"column_end":38},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":785},"to":{"krate":0,"index":104}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":27574,"byte_end":27581,"line_start":433,"line_end":433,"column_start":37,"column_end":44},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":785},"to":{"krate":0,"index":118}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":28998,"byte_end":29005,"line_start":494,"line_end":494,"column_start":31,"column_end":38},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":812},"to":{"krate":0,"index":104}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":30284,"byte_end":30291,"line_start":540,"line_end":540,"column_start":37,"column_end":44},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":812},"to":{"krate":0,"index":118}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":32497,"byte_end":32504,"line_start":614,"line_end":614,"column_start":31,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":841},"to":{"krate":0,"index":104}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":34056,"byte_end":34063,"line_start":664,"line_end":664,"column_start":37,"column_end":44},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":841},"to":{"krate":0,"index":118}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":38719,"byte_end":38726,"line_start":786,"line_end":786,"column_start":33,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":785},"to":{"krate":0,"index":747}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":38984,"byte_end":38991,"line_start":796,"line_end":796,"column_start":33,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":812},"to":{"krate":0,"index":747}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":39302,"byte_end":39309,"line_start":807,"line_end":807,"column_start":33,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":841},"to":{"krate":0,"index":747}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":48725,"byte_end":48732,"line_start":1039,"line_end":1039,"column_start":41,"column_end":48},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":812},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":49105,"byte_end":49112,"line_start":1049,"line_end":1049,"column_start":41,"column_end":48},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":841},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":49582,"byte_end":49589,"line_start":1060,"line_end":1060,"column_start":41,"column_end":48},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":841},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":50050,"byte_end":50060,"line_start":1071,"line_end":1071,"column_start":41,"column_end":51},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":51776,"byte_end":51783,"line_start":1114,"line_end":1114,"column_start":35,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":785},"to":{"krate":2,"index":6946}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":52021,"byte_end":52028,"line_start":1122,"line_end":1122,"column_start":35,"column_end":42},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":812},"to":{"krate":2,"index":6946}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":52374,"byte_end":52381,"line_start":1131,"line_end":1131,"column_start":35,"column_end":42},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":841},"to":{"krate":2,"index":6946}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":52872,"byte_end":52879,"line_start":1141,"line_end":1141,"column_start":36,"column_end":43},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":785},"to":{"krate":25,"index":521}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":53038,"byte_end":53045,"line_start":1148,"line_end":1148,"column_start":36,"column_end":43},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":812},"to":{"krate":25,"index":521}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/matrix.rs","byte_start":53218,"byte_end":53225,"line_start":1155,"line_end":1155,"column_start":36,"column_end":43},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":841},"to":{"krate":25,"index":521}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":54683,"byte_end":54693,"line_start":41,"line_end":41,"column_start":20,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":59162,"byte_end":59172,"line_start":171,"line_end":171,"column_start":33,"column_end":43},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1457},"to":{"krate":0,"index":747}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":59416,"byte_end":59426,"line_start":181,"line_end":181,"column_start":20,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":62445,"byte_end":62452,"line_start":264,"line_end":264,"column_start":44,"column_end":51},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":812},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":63221,"byte_end":63228,"line_start":289,"line_end":289,"column_start":44,"column_end":51},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":841},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":64085,"byte_end":64095,"line_start":315,"line_end":315,"column_start":35,"column_end":45},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":6946}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":64394,"byte_end":64400,"line_start":327,"line_end":327,"column_start":44,"column_end":50},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3437},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":64547,"byte_end":64557,"line_start":332,"line_end":332,"column_start":44,"column_end":54},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1457},"to":{"krate":0,"index":569}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":65542,"byte_end":65552,"line_start":364,"line_end":364,"column_start":37,"column_end":47},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1457},"to":{"krate":0,"index":583}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":66439,"byte_end":66449,"line_start":385,"line_end":385,"column_start":37,"column_end":47},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":1987}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":66610,"byte_end":66620,"line_start":392,"line_end":392,"column_start":38,"column_end":48},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":1981}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":66760,"byte_end":66770,"line_start":399,"line_end":399,"column_start":38,"column_end":48},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":1984}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":66917,"byte_end":66927,"line_start":406,"line_end":406,"column_start":37,"column_end":47},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":67452,"byte_end":67462,"line_start":427,"line_end":427,"column_start":43,"column_end":53},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":1987}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":67650,"byte_end":67660,"line_start":434,"line_end":434,"column_start":44,"column_end":54},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":1981}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":67812,"byte_end":67822,"line_start":441,"line_end":441,"column_start":44,"column_end":54},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":1984}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":67981,"byte_end":67991,"line_start":448,"line_end":448,"column_start":43,"column_end":53},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/quaternion.rs","byte_start":69333,"byte_end":69343,"line_start":495,"line_end":495,"column_start":36,"column_end":46},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1457},"to":{"krate":25,"index":521}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":75571,"byte_end":75575,"line_start":106,"line_end":106,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2084},"to":{"krate":0,"index":407}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":75578,"byte_end":75583,"line_start":106,"line_end":106,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1763},"to":{"krate":0,"index":407}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":83903,"byte_end":83910,"line_start":301,"line_end":301,"column_start":18,"column_end":25},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":84680,"byte_end":84687,"line_start":329,"line_end":329,"column_start":18,"column_end":25},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":85952,"byte_end":85959,"line_start":372,"line_end":372,"column_start":18,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":87362,"byte_end":87368,"line_start":418,"line_end":418,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":407},"to":{"krate":0,"index":437}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":87371,"byte_end":87376,"line_start":418,"line_end":418,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2079},"to":{"krate":0,"index":437}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":89167,"byte_end":89174,"line_start":471,"line_end":471,"column_start":40,"column_end":47},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1682},"to":{"krate":0,"index":437}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":89350,"byte_end":89357,"line_start":478,"line_end":478,"column_start":40,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1954},"to":{"krate":0,"index":437}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":89539,"byte_end":89546,"line_start":485,"line_end":485,"column_start":40,"column_end":47},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2228},"to":{"krate":0,"index":437}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":89727,"byte_end":89734,"line_start":492,"line_end":492,"column_start":33,"column_end":40},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1682},"to":{"krate":2,"index":6946}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":89890,"byte_end":89897,"line_start":498,"line_end":498,"column_start":33,"column_end":40},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1954},"to":{"krate":2,"index":6946}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/vector.rs","byte_start":90067,"byte_end":90074,"line_start":504,"line_end":504,"column_start":33,"column_end":40},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2228},"to":{"krate":2,"index":6946}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":100508,"byte_end":100511,"line_start":43,"line_end":43,"column_start":26,"column_end":29},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2652},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/angle.rs","byte_start":100682,"byte_end":100685,"line_start":50,"line_end":50,"column_start":26,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2624},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":108867,"byte_end":108873,"line_start":41,"line_end":41,"column_start":18,"column_end":24},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":108991,"byte_end":108997,"line_start":48,"line_end":48,"column_start":18,"column_end":24},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":109127,"byte_end":109133,"line_start":55,"line_end":55,"column_start":18,"column_end":24},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":109508,"byte_end":109512,"line_start":69,"line_end":69,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2084},"to":{"krate":0,"index":536}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":109515,"byte_end":109520,"line_start":69,"line_end":69,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1763},"to":{"krate":0,"index":536}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":114273,"byte_end":114279,"line_start":192,"line_end":192,"column_start":33,"column_end":39},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2952},"to":{"krate":2,"index":6946}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/point.rs","byte_start":114435,"byte_end":114441,"line_start":198,"line_end":198,"column_start":33,"column_end":39},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2988},"to":{"krate":2,"index":6946}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":121380,"byte_end":121389,"line_start":27,"line_end":27,"column_start":31,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1791},"to":{"krate":0,"index":569}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":121392,"byte_end":121397,"line_start":27,"line_end":27,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2079},"to":{"krate":0,"index":569}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122937,"byte_end":122945,"line_start":73,"line_end":73,"column_start":36,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":569},"to":{"krate":0,"index":580}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":122992,"byte_end":122996,"line_start":74,"line_end":74,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1987},"to":{"krate":0,"index":580}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123044,"byte_end":123048,"line_start":75,"line_end":75,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1987},"to":{"krate":0,"index":580}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123310,"byte_end":123318,"line_start":82,"line_end":82,"column_start":36,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":569},"to":{"krate":0,"index":583}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123365,"byte_end":123369,"line_start":83,"line_end":83,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1987},"to":{"krate":0,"index":583}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123417,"byte_end":123421,"line_start":84,"line_end":84,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1987},"to":{"krate":0,"index":583}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":123468,"byte_end":123472,"line_start":85,"line_end":85,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1987},"to":{"krate":0,"index":583}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":126433,"byte_end":126439,"line_start":166,"line_end":166,"column_start":42,"column_end":48},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3412},"to":{"krate":2,"index":1981}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":126563,"byte_end":126570,"line_start":173,"line_end":173,"column_start":40,"column_end":47},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":785},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":126686,"byte_end":126692,"line_start":178,"line_end":178,"column_start":44,"column_end":50},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3412},"to":{"krate":0,"index":569}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":127750,"byte_end":127756,"line_start":212,"line_end":212,"column_start":33,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3412},"to":{"krate":0,"index":747}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":127966,"byte_end":127972,"line_start":221,"line_end":221,"column_start":37,"column_end":43},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3412},"to":{"krate":0,"index":580}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":128558,"byte_end":128564,"line_start":236,"line_end":236,"column_start":20,"column_end":26},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":128799,"byte_end":128805,"line_start":244,"line_end":244,"column_start":31,"column_end":37},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3437},"to":{"krate":2,"index":1981}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":128929,"byte_end":128936,"line_start":251,"line_end":251,"column_start":40,"column_end":47},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":812},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":129048,"byte_end":129058,"line_start":256,"line_end":256,"column_start":40,"column_end":50},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":129184,"byte_end":129190,"line_start":261,"line_end":261,"column_start":44,"column_end":50},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3437},"to":{"krate":0,"index":569}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":130277,"byte_end":130283,"line_start":296,"line_end":296,"column_start":33,"column_end":39},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3437},"to":{"krate":0,"index":747}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/rotation.rs","byte_start":130493,"byte_end":130499,"line_start":305,"line_end":305,"column_start":37,"column_end":43},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3437},"to":{"krate":0,"index":583}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":132182,"byte_end":132187,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2079},"to":{"krate":0,"index":657}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":133804,"byte_end":133814,"line_start":81,"line_end":81,"column_start":49,"column_end":59},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3462},"to":{"krate":0,"index":657}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":135592,"byte_end":135601,"line_start":141,"line_end":141,"column_start":35,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":657},"to":{"krate":0,"index":677}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":135615,"byte_end":135619,"line_start":141,"line_end":141,"column_start":58,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":1987},"to":{"krate":0,"index":677}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":135669,"byte_end":135678,"line_start":142,"line_end":142,"column_start":35,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":657},"to":{"krate":0,"index":679}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":135692,"byte_end":135696,"line_start":142,"line_end":142,"column_start":58,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":1987},"to":{"krate":0,"index":679}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":135785,"byte_end":135792,"line_start":144,"line_end":144,"column_start":73,"column_end":80},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":812},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":136091,"byte_end":136098,"line_start":153,"line_end":153,"column_start":73,"column_end":80},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":841},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":136379,"byte_end":136389,"line_start":162,"line_end":162,"column_start":55,"column_end":65},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3462},"to":{"krate":0,"index":677}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":136463,"byte_end":136473,"line_start":164,"line_end":164,"column_start":55,"column_end":65},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3462},"to":{"krate":0,"index":679}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":136557,"byte_end":136567,"line_start":166,"line_end":166,"column_start":65,"column_end":75},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3462},"to":{"krate":2,"index":6946}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":136952,"byte_end":136965,"line_start":179,"line_end":179,"column_start":45,"column_end":58},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3490},"to":{"krate":0,"index":657}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":137861,"byte_end":137868,"line_start":211,"line_end":211,"column_start":45,"column_end":52},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":841},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/transform.rs","byte_start":137985,"byte_end":137998,"line_start":215,"line_end":215,"column_start":38,"column_end":51},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3490},"to":{"krate":0,"index":679}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":140429,"byte_end":140443,"line_start":75,"line_end":75,"column_start":20,"column_end":34},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":140941,"byte_end":140948,"line_start":93,"line_end":93,"column_start":48,"column_end":55},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":841},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":142940,"byte_end":142947,"line_start":143,"line_end":143,"column_start":45,"column_end":52},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":841},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/projection.rs","byte_start":144724,"byte_end":144731,"line_start":189,"line_end":189,"column_start":39,"column_end":46},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":841},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/approx.rs","byte_start":146496,"byte_end":146501,"line_start":19,"line_end":19,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2079},"to":{"krate":0,"index":747}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":149841,"byte_end":149845,"line_start":64,"line_end":64,"column_start":5,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":2084},"to":{"krate":0,"index":768}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":149848,"byte_end":149855,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"kind":"SuperTrait","from":{"krate":19,"index":247},"to":{"krate":0,"index":768}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":149858,"byte_end":149863,"line_start":64,"line_end":64,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1763},"to":{"krate":0,"index":768}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":149866,"byte_end":149869,"line_start":64,"line_end":64,"column_start":30,"column_end":33},"kind":"SuperTrait","from":{"krate":19,"index":293},"to":{"krate":0,"index":768}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":149876,"byte_end":149886,"line_start":65,"line_end":65,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":763},"to":{"krate":0,"index":768}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":149894,"byte_end":149904,"line_start":65,"line_end":65,"column_start":25,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1834},"to":{"krate":0,"index":768}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":149912,"byte_end":149917,"line_start":65,"line_end":65,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":6946},"to":{"krate":0,"index":768}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":150454,"byte_end":150461,"line_start":98,"line_end":98,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":768},"to":{"krate":0,"index":771}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":150761,"byte_end":150768,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":768},"to":{"krate":0,"index":782}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":150771,"byte_end":150776,"line_start":112,"line_end":112,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":19,"index":133},"to":{"krate":0,"index":782}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/cgmath-0.7.0/src/num.rs","byte_start":150779,"byte_end":150787,"line_start":112,"line_end":112,"column_start":41,"column_end":49},"kind":"SuperTrait","from":{"krate":0,"index":747},"to":{"krate":0,"index":782}}]}