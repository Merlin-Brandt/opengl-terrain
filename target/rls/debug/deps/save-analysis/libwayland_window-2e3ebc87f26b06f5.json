{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3","program":"/home/merlin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wayland_window","/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=2e3ebc87f26b06f5","-C","extra-filename=-2e3ebc87f26b06f5","--out-dir","/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps","-L","dependency=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps","--extern","byteorder=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libbyteorder-32ef94090f1843de.rmeta","--extern","tempfile=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libtempfile-25268aae2d4ce6c1.rmeta","--extern","wayland_client=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libwayland_client-c0ba44edd99ac8c4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/merlin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libwayland_window-2e3ebc87f26b06f5.rmeta"},"prelude":{"crate_id":{"name":"wayland_window","disambiguator":[4170976070096233737,2407063457701474388]},"crate_root":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src","external_crates":[{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[761217931017169021,11182540429948991214]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2858088706689600179,17176650857302713463]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15879356389475821678,5643460802079966270]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8920863043171661139,6394972819860350927]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7444524629517225000,3862632196027588969]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5618285707243958873,10527758992658711681]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15786611459077781418,3427959288485188730]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7447291644365204408,1470667821728193545]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6110035509052048891,1769159197608489149]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2517392378542245850,1007682534799069383]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10841319041269114641,5435836511512932455]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11288057705607810041,2650294536215064940]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3615958118357796166,6340715783279141278]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5192402504599619502,9026648258735454425]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[18157078792379649936,5967302931976128037]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[7273518522570529581,7645160771462661682]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14392049376104722820,4331661258852677409]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":18,"id":{"name":"byteorder","disambiguator":[10120944433041560292,12915873538870635142]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":19,"id":{"name":"tempfile","disambiguator":[15867829519585787517,6646606219832402404]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":20,"id":{"name":"rand","disambiguator":[2681138644075121271,7886607485055903368]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":21,"id":{"name":"libc","disambiguator":[12211130183356822035,9476985101973045270]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":22,"id":{"name":"wayland_client","disambiguator":[17330505618195348425,7993498850147431163]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":23,"id":{"name":"bitflags","disambiguator":[1996057141650416660,18407607413809197464]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":24,"id":{"name":"crossbeam","disambiguator":[1107982907732944905,10774757371342031438]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":25,"id":{"name":"dlib","disambiguator":[13369473785532471733,3333267479558229486]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":26,"id":{"name":"libloading","disambiguator":[14591493146916808766,15511369112728705240]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":27,"id":{"name":"lazy_static","disambiguator":[4923880990971198889,17108355654335241849]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":28,"id":{"name":"wayland_sys","disambiguator":[1976268131441073593,833277373297861959]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","num":29,"id":{"name":"lazy_static","disambiguator":[11901220129464912963,3851566130377908894]}}],"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":0,"byte_end":3539,"line_start":1,"line_end":87,"column_start":1,"column_end":79}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":71},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":3489,"byte_end":3505,"line_start":87,"line_end":87,"column_start":29,"column_end":45},"alias_span":null,"name":"DecoratedSurface","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":98},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":3507,"byte_end":3524,"line_start":87,"line_end":87,"column_start":47,"column_end":64},"alias_span":null,"name":"substract_borders","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":3526,"byte_end":3537,"line_start":87,"line_end":87,"column_start":66,"column_end":77},"alias_span":null,"name":"add_borders","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":0,"byte_end":3539,"line_start":1,"line_end":87,"column_start":1,"column_end":79},"name":"","qualname":"::","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":100},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"decl_id":null,"docs":" Wayland Window, a minimalistic decoration-drawing library for\n wayland applications.","sig":null,"attributes":[{"value":"/ Wayland Window, a minimalistic decoration-drawing library for","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":0,"byte_end":65,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/ wayland applications.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":66,"byte_end":91,"line_start":2,"line_end":2,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":92,"byte_end":95,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This crate is only usable in conjuction of the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":96,"byte_end":146,"line_start":4,"line_end":4,"column_start":1,"column_end":51}},{"value":"/ [`wayland-client`](https://crates.io/crates/wayland-client) crate.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":147,"byte_end":217,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":218,"byte_end":221,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## Creating a decorated shell surface","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":222,"byte_end":263,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":264,"byte_end":267,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Creating a decorated window is as simple as wrapping it in a","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":268,"byte_end":332,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/ `DecoratedSurface`:","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":333,"byte_end":356,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":357,"byte_end":360,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":361,"byte_end":374,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ use wayland_window::DecoratedSurface;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":375,"byte_end":416,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"/ let decorated = DecoratedSurface::new(my_surface, width, height, &compositor, &subcompositor, &shm, &shell, Some(seat));","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":417,"byte_end":541,"line_start":14,"line_end":14,"column_start":1,"column_end":125}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":542,"byte_end":549,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":550,"byte_end":553,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ As you can see, you need to pass several references to global objects as well as a `WlSeat`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":554,"byte_end":650,"line_start":17,"line_end":17,"column_start":1,"column_end":97}},{"value":"/ It is required for the library to be able to create the surfaces to draw the borders, react","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":651,"byte_end":746,"line_start":18,"line_end":18,"column_start":1,"column_end":96}},{"value":"/ to user input in the borders, for resizeing and move. It will use the events provided on the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":747,"byte_end":843,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ seat you passed as argument. (So if you are on a setup with more than one pointer,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":844,"byte_end":930,"line_start":20,"line_end":20,"column_start":1,"column_end":87}},{"value":"/ only the one associated with this seat will be able to resize the window).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":931,"byte_end":1009,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1010,"byte_end":1013,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ## Processing the events","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1014,"byte_end":1042,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1043,"byte_end":1046,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The `DecoratedSurface` object will not resize your window itself, as it cannot do it.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1047,"byte_end":1136,"line_start":25,"line_end":25,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1137,"byte_end":1140,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ When the user clicks on a border and starts a resize, the server will start to generate a","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1141,"byte_end":1234,"line_start":27,"line_end":27,"column_start":1,"column_end":94}},{"value":"/ number of `configure` events on the shell surface. You'll need to process the events generated","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1235,"byte_end":1333,"line_start":28,"line_end":28,"column_start":1,"column_end":99}},{"value":"/ by the surface to handle them, as the surface is also an event iterator :","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1334,"byte_end":1411,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1412,"byte_end":1415,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1416,"byte_end":1429,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/ for (time, x, y) in &mut decorated_surface {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1430,"byte_end":1478,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/     // handle the event","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1479,"byte_end":1506,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1507,"byte_end":1512,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1513,"byte_end":1520,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1521,"byte_end":1524,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The wayland server can (and will) generate a ton of `configure` events during a single","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1525,"byte_end":1615,"line_start":37,"line_end":37,"column_start":1,"column_end":91}},{"value":"/ `WlDisplay::dispatch()` if the user is currently resizing the window. You are only required to","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1616,"byte_end":1714,"line_start":38,"line_end":38,"column_start":1,"column_end":99}},{"value":"/ process the last one, and if you try to handle them all your aplication will be very","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1715,"byte_end":1803,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"/ laggy.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1804,"byte_end":1814,"line_start":40,"line_end":40,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1815,"byte_end":1818,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The proper way is to prcess the iterator and only store them in a container, overwriting the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1819,"byte_end":1915,"line_start":42,"line_end":42,"column_start":1,"column_end":97}},{"value":"/ the previous one each time, and manually checking if one has been received in the main loop","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":1916,"byte_end":2011,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ of your program, like this:","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2012,"byte_end":2043,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2044,"byte_end":2047,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2048,"byte_end":2061,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/ let mut newsize = None;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2062,"byte_end":2089,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/ for (_, x, y) in &mut decorated_surface {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2090,"byte_end":2135,"line_start":48,"line_end":48,"column_start":1,"column_end":46}},{"value":"/     newsize = Some((x, y))","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2136,"byte_end":2166,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2167,"byte_end":2172,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ if let Some((x, y)) = newsize {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2173,"byte_end":2208,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/     let (x, y) = substract_borders(x, y);","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2209,"byte_end":2254,"line_start":52,"line_end":52,"column_start":1,"column_end":46}},{"value":"/     window.resize(x, y);","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2255,"byte_end":2283,"line_start":53,"line_end":53,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2284,"byte_end":2289,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2290,"byte_end":2297,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2298,"byte_end":2301,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ## Resizing the surface","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2302,"byte_end":2329,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2330,"byte_end":2333,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ When resizing your main surface, you need to tell the `DecoratedSurface` that it","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2334,"byte_end":2418,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/ must update its dimensions. This is very simple:","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2419,"byte_end":2471,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2472,"byte_end":2475,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2476,"byte_end":2489,"line_start":62,"line_end":62,"column_start":1,"column_end":14}},{"value":"/ /* update the borders size */","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2490,"byte_end":2523,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/ surface.attach(Some(&new_buffer));","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2524,"byte_end":2562,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/ decorated_surface.resize(width, height);","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2563,"byte_end":2607,"line_start":65,"line_end":65,"column_start":1,"column_end":45}},{"value":"/ surface.commit();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2608,"byte_end":2629,"line_start":66,"line_end":66,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2630,"byte_end":2637,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2638,"byte_end":2641,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ If you do this as a response of a `configure` event, note the following points:","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2642,"byte_end":2725,"line_start":69,"line_end":69,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2726,"byte_end":2729,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ - You do not have to respect the exact sizes provided by the compositor, it is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2730,"byte_end":2812,"line_start":71,"line_end":71,"column_start":1,"column_end":83}},{"value":"/   just a hint. You can even ignore it if you don't want the window to be resized.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2813,"byte_end":2898,"line_start":72,"line_end":72,"column_start":1,"column_end":86}},{"value":"/ - In case you chose to ignore the resize, it can be appropiate to still resize your","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2899,"byte_end":2986,"line_start":73,"line_end":73,"column_start":1,"column_end":88}},{"value":"/   window to its current size (update the buffer to the compositor), as the compositer","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":2987,"byte_end":3076,"line_start":74,"line_end":74,"column_start":1,"column_end":90}},{"value":"/   might have resized your window without telling you.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":3077,"byte_end":3134,"line_start":75,"line_end":75,"column_start":1,"column_end":58}},{"value":"/ - The size hint provided by the compositor counts the borders size, to get the real","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":3135,"byte_end":3222,"line_start":76,"line_end":76,"column_start":1,"column_end":88}},{"value":"/   size hint for your interior surface, use the function `substract_borders(..)` provided","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":3223,"byte_end":3315,"line_start":77,"line_end":77,"column_start":1,"column_end":93}},{"value":"/   by this library.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/lib.rs","byte_start":3316,"byte_end":3338,"line_start":78,"line_end":78,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":71},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":8063,"byte_end":8079,"line_start":135,"line_end":135,"column_start":12,"column_end":28},"name":"DecoratedSurface","qualname":"::decorated_surface::DecoratedSurface","value":"DecoratedSurface {  }","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":" A wrapper for a decorated surface.","sig":null,"attributes":[{"value":"/ A wrapper for a decorated surface.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":7643,"byte_end":7681,"line_start":126,"line_end":126,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":7682,"byte_end":7685,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ This is the main object of this crate. It wraps a user provided","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":7686,"byte_end":7753,"line_start":128,"line_end":128,"column_start":1,"column_end":68}},{"value":"/ wayland surface into a `ShellSurface` and gives you acces to it","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":7754,"byte_end":7821,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ via the `.get_shell()` method.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":7822,"byte_end":7856,"line_start":130,"line_end":130,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":7857,"byte_end":7860,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ It also handles the drawing of minimalistic borders allowing the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":7861,"byte_end":7929,"line_start":132,"line_end":132,"column_start":1,"column_end":69}},{"value":"/ resizing and moving of the window. See the root documentation of","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":7930,"byte_end":7998,"line_start":133,"line_end":133,"column_start":1,"column_end":69}},{"value":"/ this crate for explanations about how to use it.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":7999,"byte_end":8051,"line_start":134,"line_end":134,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":8634,"byte_end":8640,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"resize","qualname":"<DecoratedSurface>::resize","value":"pub fn resize(&mut Self, i32, i32)","parent":null,"children":[],"decl_id":null,"docs":" Resizes the borders to given width and height.","sig":null,"attributes":[{"value":"/ Resizes the borders to given width and height.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":8419,"byte_end":8469,"line_start":150,"line_end":150,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":8474,"byte_end":8477,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ These values should be the dimentions of the internal surface of the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":8482,"byte_end":8554,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ window (the decorated window will thus be a little larger).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":8559,"byte_end":8622,"line_start":153,"line_end":153,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":11831,"byte_end":11834,"line_start":232,"line_end":232,"column_start":12,"column_end":15},"name":"new","qualname":"<DecoratedSurface>::new","value":"pub fn new(&WlSurface, i32, i32, &WlCompositor, &WlSubcompositor, &WlShm,\n           &WlShell, Option<WlSeat>) -> Result<DecoratedSurface, ()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decorated window around given surface.\n","sig":null,"attributes":[{"value":"/ Creates a new decorated window around given surface.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":11763,"byte_end":11819,"line_start":231,"line_end":231,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":14992,"byte_end":15001,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"name":"set_title","qualname":"<DecoratedSurface>::set_title","value":"pub fn set_title(&Self, String)","parent":null,"children":[],"decl_id":null,"docs":" Set a short title for the surface.","sig":null,"attributes":[{"value":"/ Set a short title for the surface.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":14781,"byte_end":14819,"line_start":318,"line_end":318,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":14824,"byte_end":14827,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ This string may be used to identify the surface in a task bar, window list, or other user","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":14832,"byte_end":14925,"line_start":320,"line_end":320,"column_start":5,"column_end":98}},{"value":"/ interface elements provided by the compositor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":14930,"byte_end":14980,"line_start":321,"line_end":321,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":15395,"byte_end":15404,"line_start":331,"line_end":331,"column_start":12,"column_end":21},"name":"set_class","qualname":"<DecoratedSurface>::set_class","value":"pub fn set_class(&Self, String)","parent":null,"children":[],"decl_id":null,"docs":" Set a class for the surface.","sig":null,"attributes":[{"value":"/ Set a class for the surface.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":15081,"byte_end":15113,"line_start":326,"line_end":326,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":15118,"byte_end":15121,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ The surface class identifies the general class of applications to which the surface","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":15126,"byte_end":15213,"line_start":328,"line_end":328,"column_start":5,"column_end":92}},{"value":"/ belongs. A common convention is to use the file name (or the full path if it is a","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":15218,"byte_end":15303,"line_start":329,"line_end":329,"column_start":5,"column_end":90}},{"value":"/ non-standard location) of the application's .desktop file as the class.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":15308,"byte_end":15383,"line_start":330,"line_end":330,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":98},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":19757,"byte_end":19774,"line_start":430,"line_end":430,"column_start":8,"column_end":25},"name":"substract_borders","qualname":"::decorated_surface::substract_borders","value":"pub fn substract_borders(i32, i32) -> (i32, i32)","parent":null,"children":[],"decl_id":null,"docs":" Substracts the border dimensions from the given dimensions.\n","sig":null,"attributes":[{"value":"/ Substracts the border dimensions from the given dimensions.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":19686,"byte_end":19749,"line_start":429,"line_end":429,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":99},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":20007,"byte_end":20018,"line_start":438,"line_end":438,"column_start":8,"column_end":19},"name":"add_borders","qualname":"::decorated_surface::add_borders","value":"pub fn add_borders(i32, i32) -> (i32, i32)","parent":null,"children":[],"decl_id":null,"docs":" Adds the border dimensions to the given dimensions.\n","sig":null,"attributes":[{"value":"/ Adds the border dimensions to the given dimensions.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":19944,"byte_end":19999,"line_start":437,"line_end":437,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":5030,"byte_end":5042,"line_start":62,"line_end":62,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":8396,"byte_end":8412,"line_start":149,"line_end":149,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":15500,"byte_end":15516,"line_start":336,"line_end":336,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/themed_pointer.rs","byte_start":20591,"byte_end":20604,"line_start":16,"line_end":16,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/themed_pointer.rs","byte_start":21671,"byte_end":21684,"line_start":47,"line_end":47,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":5030,"byte_end":5042,"line_start":62,"line_end":62,"column_start":6,"column_end":18},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":58},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":8396,"byte_end":8412,"line_start":149,"line_end":149,"column_start":6,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":71},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/decorated_surface.rs","byte_start":15500,"byte_end":15516,"line_start":336,"line_end":336,"column_start":19,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":71},"to":{"krate":2,"index":5618}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/themed_pointer.rs","byte_start":20591,"byte_end":20604,"line_start":16,"line_end":16,"column_start":6,"column_end":19},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.2.3/src/themed_pointer.rs","byte_start":21671,"byte_end":21684,"line_start":47,"line_end":47,"column_start":16,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":112},"to":{"krate":2,"index":2274}}]}