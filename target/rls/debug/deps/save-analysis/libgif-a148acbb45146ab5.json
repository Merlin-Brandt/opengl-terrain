{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0","program":"/home/merlin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","gif","/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"raii_no_panic\"","-C","metadata=a148acbb45146ab5","-C","extra-filename=-a148acbb45146ab5","--out-dir","/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps","-L","dependency=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps","--extern","color_quant=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libcolor_quant-92818e5c23c5b5a3.rmeta","--extern","lzw=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/liblzw-d0ce5b7805ecb809.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/merlin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libgif-a148acbb45146ab5.rmeta"},"prelude":{"crate_id":{"name":"gif","disambiguator":[2865681018610207691,8578833257898127563]},"crate_root":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src","external_crates":[{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[761217931017169021,11182540429948991214]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2858088706689600179,17176650857302713463]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15879356389475821678,5643460802079966270]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8920863043171661139,6394972819860350927]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7444524629517225000,3862632196027588969]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5618285707243958873,10527758992658711681]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15786611459077781418,3427959288485188730]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7447291644365204408,1470667821728193545]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6110035509052048891,1769159197608489149]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2517392378542245850,1007682534799069383]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10841319041269114641,5435836511512932455]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11288057705607810041,2650294536215064940]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3615958118357796166,6340715783279141278]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5192402504599619502,9026648258735454425]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[18157078792379649936,5967302931976128037]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[7273518522570529581,7645160771462661682]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14392049376104722820,4331661258852677409]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","num":18,"id":{"name":"lzw","disambiguator":[13352340688120367435,6501147158707143189]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","num":19,"id":{"name":"color_quant","disambiguator":[11857391333499254392,3623758089037647263]}}],"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":0,"byte_end":4853,"line_start":1,"line_end":163,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":10},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":3944,"byte_end":3956,"line_start":137,"line_end":137,"column_start":18,"column_end":30},"alias_span":null,"name":"SetParameter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":3958,"byte_end":3967,"line_start":137,"line_end":137,"column_start":32,"column_end":41},"alias_span":null,"name":"Parameter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":287},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":3987,"byte_end":3992,"line_start":138,"line_end":138,"column_start":18,"column_end":23},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":302},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":3994,"byte_end":4003,"line_start":138,"line_end":138,"column_start":25,"column_end":34},"alias_span":null,"name":"Extension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":269},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":4005,"byte_end":4019,"line_start":138,"line_end":138,"column_start":36,"column_end":50},"alias_span":null,"name":"DisposalMethod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":320},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":4021,"byte_end":4026,"line_start":138,"line_end":138,"column_start":52,"column_end":57},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":4047,"byte_end":4063,"line_start":140,"line_end":140,"column_start":18,"column_end":34},"alias_span":null,"name":"StreamingDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":361},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":4065,"byte_end":4072,"line_start":140,"line_end":140,"column_start":36,"column_end":43},"alias_span":null,"name":"Decoded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":339},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":4074,"byte_end":4087,"line_start":140,"line_end":140,"column_start":45,"column_end":58},"alias_span":null,"name":"DecodingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":489},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":4153,"byte_end":4164,"line_start":142,"line_end":142,"column_start":18,"column_end":29},"alias_span":null,"name":"ColorOutput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":501},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":4166,"byte_end":4177,"line_start":142,"line_end":142,"column_start":31,"column_end":42},"alias_span":null,"name":"MemoryLimit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":502},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":4166,"byte_end":4177,"line_start":142,"line_end":142,"column_start":31,"column_end":42},"alias_span":null,"name":"MemoryLimit","value":"","parent":{"krate":0,"index":260}},{"kind":"Use","ref_id":{"krate":0,"index":351},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":4179,"byte_end":4189,"line_start":142,"line_end":142,"column_start":44,"column_end":54},"alias_span":null,"name":"Extensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":139},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":4209,"byte_end":4215,"line_start":143,"line_end":143,"column_start":18,"column_end":24},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":121},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":4217,"byte_end":4224,"line_start":143,"line_end":143,"column_start":26,"column_end":33},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":225},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":4246,"byte_end":4253,"line_start":145,"line_end":145,"column_start":19,"column_end":26},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":194},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":4255,"byte_end":4268,"line_start":145,"line_end":145,"column_start":28,"column_end":41},"alias_span":null,"name":"ExtensionData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":184},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":4270,"byte_end":4276,"line_start":145,"line_end":145,"column_start":43,"column_end":49},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":0,"byte_end":4853,"line_start":1,"line_end":163,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":30},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":170},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":598},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268}],"decl_id":null,"docs":" # GIF en- and decoding library [![Build Status](https://travis-ci.org/PistonDevelopers/image-gif.svg?branch=master)](https://travis-ci.org/PistonDevelopers/image-gif)\n \n GIF en- and decoder written in Rust ([API Documentation](http://www.piston.rs/image/gif/index.html)). \n \n # GIF encoding and decoding library\n \n This library provides all functions necessary to de- and encode GIF files. \n \n ## High level interface\n \n The high level interface consists of the two types\n [`Encoder`](struct.Encoder.html) and [`Decoder`](struct.Decoder.html).\n They as builders for the actual en- and decoders and can be used to set various\n options beforehand.\n \n ### Decoding GIF files\n \n ```rust\n // Open the file\n use std::fs::File;\n use gif::SetParameter;\n let mut decoder = gif::Decoder::new(File::open(\"tests/samples/sample_1.gif\").unwrap());\n // Configure the decoder such that it will expand the image to RGBA.\n decoder.set(gif::ColorOutput::RGBA);\n // Read the file header\n let mut decoder = decoder.read_info().unwrap();\n while let Some(frame) = decoder.read_next_frame().unwrap() {\n     // Process every frame\n }\n ```\n \n \n \n ### Encoding GIF files","sig":null,"attributes":[{"value":"/ # GIF en- and decoding library [![Build Status](https://travis-ci.org/PistonDevelopers/image-gif.svg?branch=master)](https://travis-ci.org/PistonDevelopers/image-gif)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":0,"byte_end":170,"line_start":1,"line_end":1,"column_start":1,"column_end":171}},{"value":"/ ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":171,"byte_end":175,"line_start":2,"line_end":2,"column_start":1,"column_end":5}},{"value":"/ GIF en- and decoder written in Rust ([API Documentation](http://www.piston.rs/image/gif/index.html)). ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":176,"byte_end":282,"line_start":3,"line_end":3,"column_start":1,"column_end":107}},{"value":"/ ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":283,"byte_end":287,"line_start":4,"line_end":4,"column_start":1,"column_end":5}},{"value":"/ # GIF encoding and decoding library","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":288,"byte_end":327,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/ ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":328,"byte_end":332,"line_start":6,"line_end":6,"column_start":1,"column_end":5}},{"value":"/ This library provides all functions necessary to de- and encode GIF files. ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":333,"byte_end":412,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":413,"byte_end":417,"line_start":8,"line_end":8,"column_start":1,"column_end":5}},{"value":"/ ## High level interface","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":418,"byte_end":445,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/ ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":446,"byte_end":450,"line_start":10,"line_end":10,"column_start":1,"column_end":5}},{"value":"/ The high level interface consists of the two types","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":451,"byte_end":505,"line_start":11,"line_end":11,"column_start":1,"column_end":55}},{"value":"/ [`Encoder`](struct.Encoder.html) and [`Decoder`](struct.Decoder.html).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":506,"byte_end":580,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ They as builders for the actual en- and decoders and can be used to set various","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":581,"byte_end":664,"line_start":13,"line_end":13,"column_start":1,"column_end":84}},{"value":"/ options beforehand.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":665,"byte_end":688,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/ ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":689,"byte_end":693,"line_start":15,"line_end":15,"column_start":1,"column_end":5}},{"value":"/ ### Decoding GIF files","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":694,"byte_end":720,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":721,"byte_end":725,"line_start":17,"line_end":17,"column_start":1,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":726,"byte_end":737,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ // Open the file","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":738,"byte_end":758,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":759,"byte_end":781,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/ use gif::SetParameter;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":782,"byte_end":808,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/ let mut decoder = gif::Decoder::new(File::open(\"tests/samples/sample_1.gif\").unwrap());","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":809,"byte_end":900,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/ // Configure the decoder such that it will expand the image to RGBA.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":901,"byte_end":973,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ decoder.set(gif::ColorOutput::RGBA);","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":974,"byte_end":1014,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/ // Read the file header","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1015,"byte_end":1042,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/ let mut decoder = decoder.read_info().unwrap();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1043,"byte_end":1094,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/ while let Some(frame) = decoder.read_next_frame().unwrap() {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1095,"byte_end":1159,"line_start":27,"line_end":27,"column_start":1,"column_end":65}},{"value":"/     // Process every frame","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1160,"byte_end":1190,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1191,"byte_end":1196,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1197,"byte_end":1204,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1205,"byte_end":1209,"line_start":31,"line_end":31,"column_start":1,"column_end":5}},{"value":"/ ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1210,"byte_end":1214,"line_start":32,"line_end":32,"column_start":1,"column_end":5}},{"value":"/ ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1215,"byte_end":1219,"line_start":33,"line_end":33,"column_start":1,"column_end":5}},{"value":"/ ### Encoding GIF files","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1220,"byte_end":1246,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1247,"byte_end":1250,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The encoder can be used so save simple computer generated images:","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1251,"byte_end":1320,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/ ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1321,"byte_end":1325,"line_start":37,"line_end":37,"column_start":1,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1326,"byte_end":1337,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/ use gif::{Frame, Encoder, Repeat, SetParameter};","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1338,"byte_end":1390,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1391,"byte_end":1413,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/ use std::borrow::Cow;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1414,"byte_end":1439,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/ ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1440,"byte_end":1444,"line_start":42,"line_end":42,"column_start":1,"column_end":5}},{"value":"/ let color_map = &[0xFF, 0xFF, 0xFF, 0, 0, 0];","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1445,"byte_end":1494,"line_start":43,"line_end":43,"column_start":1,"column_end":50}},{"value":"/ let (width, height) = (6, 6);","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1495,"byte_end":1528,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/ let mut beacon_states = [[","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1529,"byte_end":1559,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"/     0, 0, 0, 0, 0, 0,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1560,"byte_end":1585,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     0, 1, 1, 0, 0, 0,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1586,"byte_end":1611,"line_start":47,"line_end":47,"column_start":1,"column_end":26}},{"value":"/     0, 1, 1, 0, 0, 0,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1612,"byte_end":1637,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/     0, 0, 0, 1, 1, 0,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1638,"byte_end":1663,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/     0, 0, 0, 1, 1, 0,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1664,"byte_end":1689,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/     0, 0, 0, 0, 0, 0,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1690,"byte_end":1715,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"/ ], [","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1716,"byte_end":1724,"line_start":52,"line_end":52,"column_start":1,"column_end":9}},{"value":"/     0, 0, 0, 0, 0, 0,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1725,"byte_end":1750,"line_start":53,"line_end":53,"column_start":1,"column_end":26}},{"value":"/     0, 1, 1, 0, 0, 0,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1751,"byte_end":1776,"line_start":54,"line_end":54,"column_start":1,"column_end":26}},{"value":"/     0, 1, 0, 0, 0, 0,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1777,"byte_end":1802,"line_start":55,"line_end":55,"column_start":1,"column_end":26}},{"value":"/     0, 0, 0, 0, 1, 0,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1803,"byte_end":1828,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/     0, 0, 0, 1, 1, 0,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1829,"byte_end":1854,"line_start":57,"line_end":57,"column_start":1,"column_end":26}},{"value":"/     0, 0, 0, 0, 0, 0,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1855,"byte_end":1880,"line_start":58,"line_end":58,"column_start":1,"column_end":26}},{"value":"/ ]];","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1881,"byte_end":1888,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ let mut image = File::create(\"target/beacon.gif\").unwrap();;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1889,"byte_end":1953,"line_start":60,"line_end":60,"column_start":1,"column_end":65}},{"value":"/ let mut encoder = Encoder::new(&mut image, width, height, color_map).unwrap();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":1954,"byte_end":2036,"line_start":61,"line_end":61,"column_start":1,"column_end":83}},{"value":"/ encoder.set(Repeat::Infinite).unwrap();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2037,"byte_end":2080,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ for state in &beacon_states {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2081,"byte_end":2114,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/     let mut frame = Frame::default();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2115,"byte_end":2156,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"/     frame.width = width;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2157,"byte_end":2185,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/     frame.height = height;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2186,"byte_end":2216,"line_start":66,"line_end":66,"column_start":1,"column_end":31}},{"value":"/     frame.buffer = Cow::Borrowed(&*state);","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2217,"byte_end":2263,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/     encoder.write_frame(&frame).unwrap();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2264,"byte_end":2309,"line_start":68,"line_end":68,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2310,"byte_end":2315,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2316,"byte_end":2323,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2324,"byte_end":2327,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`Frame::from_*`](struct.Frame.html) can be used to convert a true color image to a paletted","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2328,"byte_end":2424,"line_start":72,"line_end":72,"column_start":1,"column_end":97}},{"value":"/ image with a maximum of 256 colors:","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2425,"byte_end":2464,"line_start":73,"line_end":73,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2465,"byte_end":2468,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2469,"byte_end":2480,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2481,"byte_end":2503,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2504,"byte_end":2508,"line_start":77,"line_end":77,"column_start":1,"column_end":5}},{"value":"/ // Get pixel data from some source","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2509,"byte_end":2547,"line_start":78,"line_end":78,"column_start":1,"column_end":39}},{"value":"/ let mut pixels: Vec<u8> = vec![0; 30_000];","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2548,"byte_end":2594,"line_start":79,"line_end":79,"column_start":1,"column_end":47}},{"value":"/ // Create frame from data","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2595,"byte_end":2624,"line_start":80,"line_end":80,"column_start":1,"column_end":30}},{"value":"/ let frame = gif::Frame::from_rgb(100, 100, &mut *pixels);","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2625,"byte_end":2686,"line_start":81,"line_end":81,"column_start":1,"column_end":62}},{"value":"/ // Create encoder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2687,"byte_end":2708,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/ let mut image = File::create(\"target/indexed_color.gif\").unwrap();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2709,"byte_end":2779,"line_start":83,"line_end":83,"column_start":1,"column_end":71}},{"value":"/ let mut encoder = gif::Encoder::new(&mut image, frame.width, frame.height, &[]).unwrap();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2780,"byte_end":2873,"line_start":84,"line_end":84,"column_start":1,"column_end":94}},{"value":"/ // Write frame to file","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2874,"byte_end":2900,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/ encoder.write_frame(&frame).unwrap();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2901,"byte_end":2942,"line_start":86,"line_end":86,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2943,"byte_end":2950,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2953,"byte_end":2957,"line_start":90,"line_end":90,"column_start":1,"column_end":5}},{"value":"/ ## C API","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2958,"byte_end":2970,"line_start":91,"line_end":91,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2971,"byte_end":2974,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The C API is unstable and widely untested. It can be activated using the feature flag `c_api`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":2975,"byte_end":3073,"line_start":93,"line_end":93,"column_start":1,"column_end":99}},{"value":"deny(missing_docs)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/lib.rs","byte_start":3631,"byte_end":3653,"line_start":117,"line_end":117,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":6},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":5038,"byte_end":5047,"line_start":7,"line_end":7,"column_start":11,"column_end":20},"name":"Parameter","qualname":"::traits::Parameter","value":"Parameter<Object>","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9}],"decl_id":null,"docs":" Configuration parameter trait.","sig":null,"attributes":[{"value":"/ Configuration parameter trait.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":4900,"byte_end":4934,"line_start":4,"line_end":4,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":4935,"byte_end":4938,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Use the list of implementors to see which parameters are available for which struct.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":4939,"byte_end":5027,"line_start":6,"line_end":6,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":8},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":5178,"byte_end":5184,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Result","qualname":"::traits::Parameter::Result","value":"type Result;","parent":{"krate":0,"index":6},"children":[],"decl_id":null,"docs":" Result type of `set_param`.\n","sig":null,"attributes":[{"value":"/ Result type of `set_param`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":5062,"byte_end":5093,"line_start":8,"line_end":8,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":5241,"byte_end":5250,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"set_param","qualname":"::traits::Parameter::set_param","value":"pub fn set_param(Self, &mut Object) -> Self::Result","parent":{"krate":0,"index":6},"children":[],"decl_id":null,"docs":" Sets `self` as a parameter of `Object`.\n","sig":null,"attributes":[{"value":"/ Sets `self` as a parameter of `Object`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":5190,"byte_end":5233,"line_start":11,"line_end":11,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":10},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":5421,"byte_end":5433,"line_start":18,"line_end":18,"column_start":11,"column_end":23},"name":"SetParameter","qualname":"::traits::SetParameter","value":"SetParameter: Sized","parent":null,"children":[{"krate":0,"index":11}],"decl_id":null,"docs":" Implemented for objects that have parameters.","sig":null,"attributes":[{"value":"/ Implemented for objects that have parameters.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":5290,"byte_end":5339,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":5340,"byte_end":5343,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Provides a unified `set`-method to simplify the configuration.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":5344,"byte_end":5410,"line_start":17,"line_end":17,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":5497,"byte_end":5500,"line_start":20,"line_end":20,"column_start":8,"column_end":11},"name":"set","qualname":"::traits::SetParameter::set","value":"pub fn set<T: Parameter<Self>>(&mut Self, T) -> <T as Parameter<Self>>::Result","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Sets `value` as a parameter of `self`.\n","sig":null,"attributes":[{"value":"/ Sets `value` as a parameter of `self`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":5447,"byte_end":5489,"line_start":19,"line_end":19,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":270},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":6933,"byte_end":6936,"line_start":12,"line_end":12,"column_start":5,"column_end":8},"name":"Any","qualname":"::common::DisposalMethod::Any","value":"DisposalMethod::Any","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" StreamingDecoder is not required to take any action.\n","sig":null,"attributes":[{"value":"/ StreamingDecoder is not required to take any action.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":6872,"byte_end":6928,"line_start":11,"line_end":11,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":273},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":6970,"byte_end":6974,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Keep","qualname":"::common::DisposalMethod::Keep","value":"DisposalMethod::Keep","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Do not dispose.\n","sig":null,"attributes":[{"value":"/ Do not dispose.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":6946,"byte_end":6965,"line_start":13,"line_end":13,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":276},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7021,"byte_end":7031,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"name":"Background","qualname":"::common::DisposalMethod::Background","value":"DisposalMethod::Background","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Restore to background color.\n","sig":null,"attributes":[{"value":"/ Restore to background color.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":6984,"byte_end":7016,"line_start":15,"line_end":15,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":279},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7070,"byte_end":7078,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"name":"Previous","qualname":"::common::DisposalMethod::Previous","value":"DisposalMethod::Previous","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Restore to previous.\n","sig":null,"attributes":[{"value":"/ Restore to previous.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7041,"byte_end":7065,"line_start":17,"line_end":17,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":269},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":6851,"byte_end":6865,"line_start":10,"line_end":10,"column_start":10,"column_end":24},"name":"DisposalMethod","qualname":"::common::DisposalMethod","value":"pub enum DisposalMethod {\n\n    /// StreamingDecoder is not required to take any action.\n    Any = ,\n\n    /// Do not dispose.\n    Keep = ,\n\n    /// Restore to background color.\n    Background = ,\n\n    /// Restore to previous.\n    Previous = ,\n}","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":279}],"decl_id":null,"docs":" Disposal method\n","sig":null,"attributes":[{"value":"/ Disposal method","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":6780,"byte_end":6799,"line_start":7,"line_end":7,"column_start":1,"column_end":20}},{"value":"repr(u8)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":6830,"byte_end":6841,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7160,"byte_end":7167,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<DisposalMethod>::from_u8","value":"pub fn from_u8(u8) -> Option<DisposalMethod>","parent":null,"children":[],"decl_id":null,"docs":" Converts `u8` to `Option<Self>`\n","sig":null,"attributes":[{"value":"/ Converts `u8` to `Option<Self>`","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7113,"byte_end":7148,"line_start":22,"line_end":22,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":288},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7433,"byte_end":7438,"line_start":37,"line_end":37,"column_start":5,"column_end":10},"name":"Image","qualname":"::common::Block::Image","value":"Block::Image","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" Image block.\n","sig":null,"attributes":[{"value":"/ Image block.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7412,"byte_end":7428,"line_start":36,"line_end":36,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":291},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7476,"byte_end":7485,"line_start":39,"line_end":39,"column_start":5,"column_end":14},"name":"Extension","qualname":"::common::Block::Extension","value":"Block::Extension","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" Extension block.\n","sig":null,"attributes":[{"value":"/ Extension block.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7451,"byte_end":7471,"line_start":38,"line_end":38,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":294},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7521,"byte_end":7528,"line_start":41,"line_end":41,"column_start":5,"column_end":12},"name":"Trailer","qualname":"::common::Block::Trailer","value":"Block::Trailer","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" Image trailer.\n","sig":null,"attributes":[{"value":"/ Image trailer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7498,"byte_end":7516,"line_start":40,"line_end":40,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":287},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7400,"byte_end":7405,"line_start":35,"line_end":35,"column_start":10,"column_end":15},"name":"Block","qualname":"::common::Block","value":"pub enum Block {\n\n    /// Image block.\n    Image = ,\n\n    /// Extension block.\n    Extension = ,\n\n    /// Image trailer.\n    Trailer = ,\n}","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294}],"decl_id":null,"docs":" Known GIF block types\n","sig":null,"attributes":[{"value":"/ Known GIF block types","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7323,"byte_end":7348,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"repr(u8)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7379,"byte_end":7390,"line_start":34,"line_end":34,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7603,"byte_end":7610,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Block>::from_u8","value":"pub fn from_u8(u8) -> Option<Block>","parent":null,"children":[],"decl_id":null,"docs":" Converts `u8` to `Option<Self>`\n","sig":null,"attributes":[{"value":"/ Converts `u8` to `Option<Self>`","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7556,"byte_end":7591,"line_start":45,"line_end":45,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":303},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7914,"byte_end":7918,"line_start":62,"line_end":62,"column_start":5,"column_end":9},"name":"Text","qualname":"::common::Extension::Text","value":"Extension::Text","parent":{"krate":0,"index":302},"children":[],"decl_id":null,"docs":" Text extension.\n","sig":null,"attributes":[{"value":"/ Text extension.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7890,"byte_end":7909,"line_start":61,"line_end":61,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":306},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7958,"byte_end":7965,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"Control","qualname":"::common::Extension::Control","value":"Extension::Control","parent":{"krate":0,"index":302},"children":[],"decl_id":null,"docs":" Control extension.\n","sig":null,"attributes":[{"value":"/ Control extension.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7931,"byte_end":7953,"line_start":63,"line_end":63,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":309},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8005,"byte_end":8012,"line_start":66,"line_end":66,"column_start":5,"column_end":12},"name":"Comment","qualname":"::common::Extension::Comment","value":"Extension::Comment","parent":{"krate":0,"index":302},"children":[],"decl_id":null,"docs":" Comment extension.\n","sig":null,"attributes":[{"value":"/ Comment extension.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7978,"byte_end":8000,"line_start":65,"line_end":65,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":312},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8056,"byte_end":8067,"line_start":68,"line_end":68,"column_start":5,"column_end":16},"name":"Application","qualname":"::common::Extension::Application","value":"Extension::Application","parent":{"krate":0,"index":302},"children":[],"decl_id":null,"docs":" Application extension.\n","sig":null,"attributes":[{"value":"/ Application extension.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8025,"byte_end":8051,"line_start":67,"line_end":67,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":302},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7874,"byte_end":7883,"line_start":60,"line_end":60,"column_start":10,"column_end":19},"name":"Extension","qualname":"::common::Extension","value":"pub enum Extension {\n\n    /// Text extension.\n    Text = ,\n\n    /// Control extension.\n    Control = ,\n\n    /// Comment extension.\n    Comment = ,\n\n    /// Application extension.\n    Application = ,\n}","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":312}],"decl_id":null,"docs":" Known GIF extensions\n","sig":null,"attributes":[{"value":"/ Known GIF extensions","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7798,"byte_end":7822,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"repr(u8)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7853,"byte_end":7864,"line_start":59,"line_end":59,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8146,"byte_end":8153,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Extension>::from_u8","value":"pub fn from_u8(u8) -> Option<Extension>","parent":null,"children":[],"decl_id":null,"docs":" Converts `u8` to `Option<Self>`\n","sig":null,"attributes":[{"value":"/ Converts `u8` to `Option<Self>`","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8099,"byte_end":8134,"line_start":72,"line_end":72,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":320},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8402,"byte_end":8407,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"name":"Frame","qualname":"::common::Frame","value":"Frame { delay, dispose, transparent, needs_user_input, top, left, width, height, interlaced, palette, buffer }","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332}],"decl_id":null,"docs":" A GIF frame\n","sig":null,"attributes":[{"value":"/ A GIF frame","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8351,"byte_end":8366,"line_start":83,"line_end":83,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":322},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8462,"byte_end":8467,"line_start":87,"line_end":87,"column_start":9,"column_end":14},"name":"delay","qualname":"::common::Frame::delay","value":"u16","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Frame delay in units of 10 ms.\n","sig":null,"attributes":[{"value":"/ Frame delay in units of 10 ms.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8418,"byte_end":8453,"line_start":86,"line_end":86,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":323},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8507,"byte_end":8514,"line_start":89,"line_end":89,"column_start":9,"column_end":16},"name":"dispose","qualname":"::common::Frame::dispose","value":"common::DisposalMethod","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Disposal method.\n","sig":null,"attributes":[{"value":"/ Disposal method.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8478,"byte_end":8498,"line_start":88,"line_end":88,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":324},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8582,"byte_end":8593,"line_start":91,"line_end":91,"column_start":9,"column_end":20},"name":"transparent","qualname":"::common::Frame::transparent","value":"std::option::Option<u8>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Transparent index (if available).\n","sig":null,"attributes":[{"value":"/ Transparent index (if available).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8536,"byte_end":8573,"line_start":90,"line_end":90,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":325},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8675,"byte_end":8691,"line_start":93,"line_end":93,"column_start":9,"column_end":25},"name":"needs_user_input","qualname":"::common::Frame::needs_user_input","value":"bool","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" True if the frame needs user input do be displayed.\n","sig":null,"attributes":[{"value":"/ True if the frame needs user input do be displayed.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8611,"byte_end":8666,"line_start":92,"line_end":92,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":326},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8757,"byte_end":8760,"line_start":95,"line_end":95,"column_start":9,"column_end":12},"name":"top","qualname":"::common::Frame::top","value":"u16","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Offset from the top border of the canvas.\n","sig":null,"attributes":[{"value":"/ Offset from the top border of the canvas.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8703,"byte_end":8748,"line_start":94,"line_end":94,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":327},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8826,"byte_end":8830,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"name":"left","qualname":"::common::Frame::left","value":"u16","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Offset from the left border of the canvas.\n","sig":null,"attributes":[{"value":"/ Offset from the left border of the canvas.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8771,"byte_end":8817,"line_start":96,"line_end":96,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":328},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8873,"byte_end":8878,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"name":"width","qualname":"::common::Frame::width","value":"u16","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Width of the frame.\n","sig":null,"attributes":[{"value":"/ Width of the frame.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8841,"byte_end":8864,"line_start":98,"line_end":98,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":329},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8922,"byte_end":8928,"line_start":101,"line_end":101,"column_start":9,"column_end":15},"name":"height","qualname":"::common::Frame::height","value":"u16","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Height of the frame.\n","sig":null,"attributes":[{"value":"/ Height of the frame.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8889,"byte_end":8913,"line_start":100,"line_end":100,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":330},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8984,"byte_end":8994,"line_start":103,"line_end":103,"column_start":9,"column_end":19},"name":"interlaced","qualname":"::common::Frame::interlaced","value":"bool","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" True if the image is interlaced.\n","sig":null,"attributes":[{"value":"/ True if the image is interlaced.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8939,"byte_end":8975,"line_start":102,"line_end":102,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":331},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":9058,"byte_end":9065,"line_start":105,"line_end":105,"column_start":9,"column_end":16},"name":"palette","qualname":"::common::Frame::palette","value":"std::option::Option<std::vec::Vec<u8>>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Frame local color palette if available.\n","sig":null,"attributes":[{"value":"/ Frame local color palette if available.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":9006,"byte_end":9049,"line_start":104,"line_end":104,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":332},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":9186,"byte_end":9192,"line_start":108,"line_end":108,"column_start":9,"column_end":15},"name":"buffer","qualname":"::common::Frame::buffer","value":"std::borrow::Cow<'a, [u8]>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Buffer containing the image data.\n Only indices unless configured differently.\n","sig":null,"attributes":[{"value":"/ Buffer containing the image data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":9088,"byte_end":9125,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"/ Only indices unless configured differently.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":9130,"byte_end":9177,"line_start":107,"line_end":107,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":9781,"byte_end":9790,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"name":"from_rgba","qualname":"<Frame>::from_rgba","value":"pub fn from_rgba(u16, u16, &mut [u8]) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from pixels in RGBA format.","sig":null,"attributes":[{"value":"/ Creates a frame from pixels in RGBA format.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":9658,"byte_end":9705,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":9710,"byte_end":9713,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ *Note: This method is not optimized for speed.*","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":9718,"byte_end":9769,"line_start":133,"line_end":133,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":10802,"byte_end":10810,"line_start":163,"line_end":163,"column_start":12,"column_end":20},"name":"from_rgb","qualname":"<Frame>::from_rgb","value":"pub fn from_rgb(u16, u16, &[u8]) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from pixels in RGB format.","sig":null,"attributes":[{"value":"/ Creates a frame from pixels in RGB format.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":10680,"byte_end":10726,"line_start":160,"line_end":160,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":10731,"byte_end":10734,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ *Note: This method is not optimized for speed.*","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":10739,"byte_end":10790,"line_start":162,"line_end":162,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":340},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":28755,"byte_end":28761,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Format","qualname":"::reader::decoder::DecodingError::Format","value":"DecodingError::Format(&'static str)","parent":{"krate":0,"index":339},"children":[],"decl_id":null,"docs":" Returned if the image is found to be malformed.\n","sig":null,"attributes":[{"value":"/ Returned if the image is found to be malformed.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":28699,"byte_end":28750,"line_start":19,"line_end":19,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":343},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":28813,"byte_end":28821,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"name":"Internal","qualname":"::reader::decoder::DecodingError::Internal","value":"DecodingError::Internal(&'static str)","parent":{"krate":0,"index":339},"children":[],"decl_id":null,"docs":" Internal (logic) error.\n","sig":null,"attributes":[{"value":"/ Internal (logic) error.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":28781,"byte_end":28808,"line_start":21,"line_end":21,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":346},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":28873,"byte_end":28875,"line_start":24,"line_end":24,"column_start":5,"column_end":7},"name":"Io","qualname":"::reader::decoder::DecodingError::Io","value":"DecodingError::Io(io::Error)","parent":{"krate":0,"index":339},"children":[],"decl_id":null,"docs":" Wraps `std::io::Error`.\n","sig":null,"attributes":[{"value":"/ Wraps `std::io::Error`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":28841,"byte_end":28868,"line_start":23,"line_end":23,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":339},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":28679,"byte_end":28692,"line_start":18,"line_end":18,"column_start":10,"column_end":23},"name":"DecodingError","qualname":"::reader::decoder::DecodingError","value":"pub enum DecodingError {\n\n    /// Returned if the image is found to be malformed.\n    Format(&'static str),\n\n    /// Internal (logic) error.\n    Internal(&'static str),\n\n    /// Wraps `std::io::Error`.\n    Io(io::Error),\n}","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":346}],"decl_id":null,"docs":" Decoding error.\n","sig":null,"attributes":[{"value":"/ Decoding error.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":28650,"byte_end":28669,"line_start":17,"line_end":17,"column_start":1,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":352},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29145,"byte_end":29149,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"name":"Save","qualname":"::reader::decoder::Extensions::Save","value":"Extensions::Save","parent":{"krate":0,"index":351},"children":[],"decl_id":null,"docs":" Saves all extention data\n","sig":null,"attributes":[{"value":"/ Saves all extention data","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29112,"byte_end":29140,"line_start":36,"line_end":36,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":354},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29246,"byte_end":29250,"line_start":40,"line_end":40,"column_start":5,"column_end":9},"name":"Skip","qualname":"::reader::decoder::Extensions::Skip","value":"Extensions::Skip","parent":{"krate":0,"index":351},"children":[],"decl_id":null,"docs":" Skips the data of unknown extensions\n and extracts the data from known ones\n","sig":null,"attributes":[{"value":"/ Skips the data of unknown extensions","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29155,"byte_end":29195,"line_start":38,"line_end":38,"column_start":5,"column_end":45}},{"value":"/ and extracts the data from known ones","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29200,"byte_end":29241,"line_start":39,"line_end":39,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":351},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29095,"byte_end":29105,"line_start":35,"line_end":35,"column_start":10,"column_end":20},"name":"Extensions","qualname":"::reader::decoder::Extensions","value":"pub enum Extensions {\n\n    /// Saves all extention data\n    Save,\n\n    /// Skips the data of unknown extensions\n    /// and extracts the data from known ones\n    Skip,\n}","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":354}],"decl_id":null,"docs":" Configures how extensions should be handled\n","sig":null,"attributes":[{"value":"/ Configures how extensions should be handled","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29010,"byte_end":29057,"line_start":33,"line_end":33,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":363},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29646,"byte_end":29653,"line_start":58,"line_end":58,"column_start":5,"column_end":12},"name":"Nothing","qualname":"::reader::decoder::Decoded::Nothing","value":"Decoded::Nothing","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" Decoded nothing.\n","sig":null,"attributes":[{"value":"/ Decoded nothing.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29621,"byte_end":29641,"line_start":57,"line_end":57,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":365},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29683,"byte_end":29696,"line_start":60,"line_end":60,"column_start":5,"column_end":18},"name":"GlobalPalette","qualname":"::reader::decoder::Decoded::GlobalPalette","value":"Decoded::GlobalPalette(Vec<u8>)","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" Global palette.\n","sig":null,"attributes":[{"value":"/ Global palette.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29659,"byte_end":29678,"line_start":59,"line_end":59,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":368},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29772,"byte_end":29787,"line_start":62,"line_end":62,"column_start":5,"column_end":20},"name":"BackgroundColor","qualname":"::reader::decoder::Decoded::BackgroundColor","value":"Decoded::BackgroundColor(u8)","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" Index of the background color in the global palette.\n","sig":null,"attributes":[{"value":"/ Index of the background color in the global palette.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29711,"byte_end":29767,"line_start":61,"line_end":61,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":371},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29832,"byte_end":29839,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"Trailer","qualname":"::reader::decoder::Decoded::Trailer","value":"Decoded::Trailer","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" Decoded the image trailer.\n","sig":null,"attributes":[{"value":"/ Decoded the image trailer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29797,"byte_end":29827,"line_start":63,"line_end":63,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":373},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29875,"byte_end":29885,"line_start":66,"line_end":66,"column_start":5,"column_end":15},"name":"BlockStart","qualname":"::reader::decoder::Decoded::BlockStart","value":"Decoded::BlockStart(Block)","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" The start of a block.\n","sig":null,"attributes":[{"value":"/ The start of a block.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29845,"byte_end":29870,"line_start":65,"line_end":65,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":376},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29957,"byte_end":29973,"line_start":68,"line_end":68,"column_start":5,"column_end":21},"name":"SubBlockFinished","qualname":"::reader::decoder::Decoded::SubBlockFinished","value":"Decoded::SubBlockFinished(u8, &'a [u8])","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" Decoded a sub-block. More sub-block are available.\n","sig":null,"attributes":[{"value":"/ Decoded a sub-block. More sub-block are available.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29898,"byte_end":29952,"line_start":67,"line_end":67,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":380},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":30050,"byte_end":30063,"line_start":70,"line_end":70,"column_start":5,"column_end":18},"name":"BlockFinished","qualname":"::reader::decoder::Decoded::BlockFinished","value":"Decoded::BlockFinished(u8, &'a [u8])","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" Decoded the last (or only) sub-block of a block.\n","sig":null,"attributes":[{"value":"/ Decoded the last (or only) sub-block of a block.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29993,"byte_end":30045,"line_start":69,"line_end":69,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":384},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":30190,"byte_end":30195,"line_start":73,"line_end":73,"column_start":5,"column_end":10},"name":"Frame","qualname":"::reader::decoder::Decoded::Frame","value":"Decoded::Frame(&'a Frame)","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" Decoded all information of the next frame.\n The returned frame does **not** any image data.\n","sig":null,"attributes":[{"value":"/ Decoded all information of the next frame.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":30083,"byte_end":30129,"line_start":71,"line_end":71,"column_start":5,"column_end":51}},{"value":"/ The returned frame does **not** any image data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":30134,"byte_end":30185,"line_start":72,"line_end":72,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":387},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":30269,"byte_end":30273,"line_start":75,"line_end":75,"column_start":5,"column_end":9},"name":"Data","qualname":"::reader::decoder::Decoded::Data","value":"Decoded::Data(&'a [u8])","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" Decoded some data of the current frame.\n","sig":null,"attributes":[{"value":"/ Decoded some data of the current frame.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":30221,"byte_end":30264,"line_start":74,"line_end":74,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":390},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":30339,"byte_end":30346,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"DataEnd","qualname":"::reader::decoder::Decoded::DataEnd","value":"Decoded::DataEnd","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" No more data available the current frame.\n","sig":null,"attributes":[{"value":"/ No more data available the current frame.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":30289,"byte_end":30334,"line_start":76,"line_end":76,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":361},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29603,"byte_end":29610,"line_start":56,"line_end":56,"column_start":10,"column_end":17},"name":"Decoded","qualname":"::reader::decoder::Decoded","value":"pub enum Decoded<'a> {\n\n    /// Decoded nothing.\n    Nothing,\n\n    /// Global palette.\n    GlobalPalette(Vec<u8>),\n\n    /// Index of the background color in the global palette.\n    BackgroundColor(u8),\n\n    /// Decoded the image trailer.\n    Trailer,\n\n    /// The start of a block.\n    BlockStart(Block),\n\n    /// Decoded a sub-block. More sub-block are available.\n    SubBlockFinished(u8, &'a [u8]),\n\n    /// Decoded the last (or only) sub-block of a block.\n    BlockFinished(u8, &'a [u8]),\n\n    /// Decoded all information of the next frame.\n    /// The returned frame does **not** any image data.\n    Frame(&'a Frame),\n\n    /// Decoded some data of the current frame.\n    Data(&'a [u8]),\n\n    /// No more data available the current frame.\n    DataEnd,\n}","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":380},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390}],"decl_id":null,"docs":" Indicates whether a certain object has been decoded\n","sig":null,"attributes":[{"value":"/ Indicates whether a certain object has been decoded","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29521,"byte_end":29576,"line_start":54,"line_end":54,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":475},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":31448,"byte_end":31464,"line_start":134,"line_end":134,"column_start":12,"column_end":28},"name":"StreamingDecoder","qualname":"::reader::decoder::StreamingDecoder","value":"StreamingDecoder {  }","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":486}],"decl_id":null,"docs":" GIF decoder which supports streaming\n","sig":null,"attributes":[{"value":"/ GIF decoder which supports streaming","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":31379,"byte_end":31419,"line_start":132,"line_end":132,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":31881,"byte_end":31884,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamingDecoder>::new","value":"pub fn new() -> StreamingDecoder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new streaming decoder\n","sig":null,"attributes":[{"value":"/ Creates a new streaming decoder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":31834,"byte_end":31869,"line_start":150,"line_end":150,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":32506,"byte_end":32512,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"update","qualname":"<StreamingDecoder>::update","value":"pub fn update<'a>(&'a mut Self, &[u8])\n-> Result<(usize, Decoded), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Updates the internal state of the decoder. ","sig":null,"attributes":[{"value":"/ Updates the internal state of the decoder. ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":32333,"byte_end":32380,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":32385,"byte_end":32388,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes consumed from the input buffer ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":32393,"byte_end":32456,"line_start":168,"line_end":168,"column_start":5,"column_end":68}},{"value":"/ and the last decoding result.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":32461,"byte_end":32494,"line_start":169,"line_end":169,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":34303,"byte_end":34311,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"last_ext","qualname":"<StreamingDecoder>::last_ext","value":"pub fn last_ext(&Self) -> (u8, &[u8], bool)","parent":null,"children":[],"decl_id":null,"docs":" Returns the data of the last extension that has been decoded.\n","sig":null,"attributes":[{"value":"/ Returns the data of the last extension that has been decoded.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":34226,"byte_end":34291,"line_start":209,"line_end":209,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":34478,"byte_end":34495,"line_start":216,"line_end":216,"column_start":12,"column_end":29},"name":"current_frame_mut","qualname":"<StreamingDecoder>::current_frame_mut","value":"pub fn current_frame_mut<'a>(&'a mut Self) -> &'a mut Frame","parent":null,"children":[],"decl_id":null,"docs":" Current frame info as a mutable ref.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":34404,"byte_end":34421,"line_start":214,"line_end":214,"column_start":5,"column_end":22}},{"value":"/ Current frame info as a mutable ref.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":34426,"byte_end":34466,"line_start":215,"line_end":215,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":34662,"byte_end":34675,"line_start":222,"line_end":222,"column_start":12,"column_end":25},"name":"current_frame","qualname":"<StreamingDecoder>::current_frame","value":"pub fn current_frame<'a>(&'a Self) -> &'a Frame","parent":null,"children":[],"decl_id":null,"docs":" Current frame info as a ref.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":34596,"byte_end":34613,"line_start":220,"line_end":220,"column_start":5,"column_end":22}},{"value":"/ Current frame info as a ref.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":34618,"byte_end":34650,"line_start":221,"line_end":221,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":34798,"byte_end":34803,"line_start":227,"line_end":227,"column_start":12,"column_end":17},"name":"width","qualname":"<StreamingDecoder>::width","value":"pub fn width(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Width of the image\n","sig":null,"attributes":[{"value":"/ Width of the image","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":34764,"byte_end":34786,"line_start":226,"line_end":226,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":34885,"byte_end":34891,"line_start":232,"line_end":232,"column_start":12,"column_end":18},"name":"height","qualname":"<StreamingDecoder>::height","value":"pub fn height(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Height of the image\n","sig":null,"attributes":[{"value":"/ Height of the image","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":34850,"byte_end":34873,"line_start":231,"line_end":231,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":490},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":12677,"byte_end":12681,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"RGBA","qualname":"::reader::ColorOutput::RGBA","value":"ColorOutput::RGBA","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" The decoder expands the image data to 32bit RGBA.\n This affects:","sig":null,"attributes":[{"value":"/ The decoder expands the image data to 32bit RGBA.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":12423,"byte_end":12476,"line_start":31,"line_end":31,"column_start":5,"column_end":58}},{"value":"/ This affects:","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":12481,"byte_end":12498,"line_start":32,"line_end":32,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":12503,"byte_end":12506,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/  - The buffer buffer of the `Frame` returned by `Reader::read_next_frame`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":12511,"byte_end":12589,"line_start":34,"line_end":34,"column_start":5,"column_end":83}},{"value":"/  - `Reader::fill_buffer`, `Reader::buffer_size` and `Reader::line_length`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":12594,"byte_end":12672,"line_start":35,"line_end":35,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":493},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":12741,"byte_end":12748,"line_start":38,"line_end":38,"column_start":5,"column_end":12},"name":"Indexed","qualname":"::reader::ColorOutput::Indexed","value":"ColorOutput::Indexed","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" The decoder returns the raw indexed data.\n","sig":null,"attributes":[{"value":"/ The decoder returns the raw indexed data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":12691,"byte_end":12736,"line_start":37,"line_end":37,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":489},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":12405,"byte_end":12416,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"name":"ColorOutput","qualname":"::reader::ColorOutput","value":"pub enum ColorOutput {\n\n    /// The decoder expands the image data to 32bit RGBA.\n    /// This affects:\n    ///\n    ///  - The buffer buffer of the `Frame` returned by `Reader::read_next_frame`.\n    ///  - `Reader::fill_buffer`, `Reader::buffer_size` and `Reader::line_length`.\n    RGBA = ,\n\n    /// The decoder returns the raw indexed data.\n    Indexed = ,\n}","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":493}],"decl_id":null,"docs":" Output mode for the image data\n","sig":null,"attributes":[{"value":"/ Output mode for the image data","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":12321,"byte_end":12355,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"repr(u8)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":12384,"byte_end":12395,"line_start":29,"line_end":29,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":501},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":13046,"byte_end":13057,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"MemoryLimit","qualname":"::reader::MemoryLimit","value":"","parent":null,"children":[],"decl_id":null,"docs":" Memory limit in bytes. `MemoryLimit::Some(0)` means\n that there is no memory limit set.\n","sig":null,"attributes":[{"value":"/ Memory limit in bytes. `MemoryLimit::Some(0)` means","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":12940,"byte_end":12995,"line_start":49,"line_end":49,"column_start":1,"column_end":56}},{"value":"/ that there is no memory limit set.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":12996,"byte_end":13034,"line_start":50,"line_end":50,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":503},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":13058,"byte_end":13065,"line_start":51,"line_end":51,"column_start":24,"column_end":31},"name":"0","qualname":"::reader::MemoryLimit::0","value":"u32","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":121},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":13302,"byte_end":13309,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::reader::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[{"value":"/ GIF decoder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":13275,"byte_end":13290,"line_start":61,"line_end":61,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":13495,"byte_end":13498,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"pub fn new(R) -> Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder builder\n","sig":null,"attributes":[{"value":"/ Creates a new decoder builder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":13450,"byte_end":13483,"line_start":70,"line_end":70,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":13897,"byte_end":13906,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"read_info","qualname":"<Decoder<R>>::read_info","value":"pub fn read_info(Self) -> Result<Reader<R>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads the logical screen descriptor including the global color palette","sig":null,"attributes":[{"value":"/ Reads the logical screen descriptor including the global color palette","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":13722,"byte_end":13796,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":13801,"byte_end":13804,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Returns a `Reader`. All decoder configuration has to be done beforehand.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":13809,"byte_end":13885,"line_start":82,"line_end":82,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":139},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":15122,"byte_end":15128,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"Reader","qualname":"::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":15075,"byte_end":15094,"line_start":122,"line_end":122,"column_start":1,"column_end":20}},{"value":"/ GIF decoder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":15095,"byte_end":15110,"line_start":123,"line_end":123,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":16993,"byte_end":17008,"line_start":185,"line_end":185,"column_start":12,"column_end":27},"name":"next_frame_info","qualname":"<Reader<R>>::next_frame_info","value":"pub fn next_frame_info(&mut Self) -> Result<Option<&Frame>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next frame info\n","sig":null,"attributes":[{"value":"/ Returns the next frame info","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":16950,"byte_end":16981,"line_start":184,"line_end":184,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":18185,"byte_end":18200,"line_start":216,"line_end":216,"column_start":12,"column_end":27},"name":"read_next_frame","qualname":"<Reader<R>>::read_next_frame","value":"pub fn read_next_frame(&mut Self) -> Result<Option<&Frame>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next frame from the image.","sig":null,"attributes":[{"value":"/ Reads the next frame from the image.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":18069,"byte_end":18109,"line_start":213,"line_end":213,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":18114,"byte_end":18117,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Do not call `Self::next_frame_info` beforehand.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":18122,"byte_end":18173,"line_start":215,"line_end":215,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":19008,"byte_end":19019,"line_start":236,"line_end":236,"column_start":12,"column_end":23},"name":"fill_buffer","qualname":"<Reader<R>>::fill_buffer","value":"pub fn fill_buffer(&mut Self, &mut [u8]) -> Result<bool, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads data of the current frame into a pre-allocated buffer.","sig":null,"attributes":[{"value":"/ Reads data of the current frame into a pre-allocated buffer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":18705,"byte_end":18769,"line_start":231,"line_end":231,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":18774,"byte_end":18777,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ `Self::next_frame_info` needs to be called beforehand. The returned boolean indicates","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":18782,"byte_end":18871,"line_start":233,"line_end":233,"column_start":5,"column_end":94}},{"value":"/ whether more data is available in the current frame. Should not be called after a `false`","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":18876,"byte_end":18969,"line_start":234,"line_end":234,"column_start":5,"column_end":98}},{"value":"/ had been returned.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":18974,"byte_end":18996,"line_start":235,"line_end":235,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":21978,"byte_end":21989,"line_start":303,"line_end":303,"column_start":12,"column_end":23},"name":"buffer_size","qualname":"<Reader<R>>::buffer_size","value":"pub fn buffer_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Output buffer size\n","sig":null,"attributes":[{"value":"/ Output buffer size","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":21944,"byte_end":21966,"line_start":302,"line_end":302,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":22135,"byte_end":22146,"line_start":308,"line_end":308,"column_start":12,"column_end":23},"name":"line_length","qualname":"<Reader<R>>::line_length","value":"pub fn line_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Line length of the current frame\n","sig":null,"attributes":[{"value":"/ Line length of the current frame","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":22087,"byte_end":22123,"line_start":307,"line_end":307,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":22462,"byte_end":22469,"line_start":317,"line_end":317,"column_start":12,"column_end":19},"name":"palette","qualname":"<Reader<R>>::palette","value":"pub fn palette(&Self) -> Result<&[u8], DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the color palette relevant for the current (next) frame\n","sig":null,"attributes":[{"value":"/ Returns the color palette relevant for the current (next) frame","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":22383,"byte_end":22450,"line_start":316,"line_end":316,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":22858,"byte_end":22872,"line_start":328,"line_end":328,"column_start":12,"column_end":26},"name":"global_palette","qualname":"<Reader<R>>::global_palette","value":"pub fn global_palette(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" The global color palette\n","sig":null,"attributes":[{"value":"/ The global color palette","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":22818,"byte_end":22846,"line_start":327,"line_end":327,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":22995,"byte_end":23000,"line_start":333,"line_end":333,"column_start":12,"column_end":17},"name":"width","qualname":"<Reader<R>>::width","value":"pub fn width(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Width of the image\n","sig":null,"attributes":[{"value":"/ Width of the image","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":22961,"byte_end":22983,"line_start":332,"line_end":332,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":23100,"byte_end":23106,"line_start":338,"line_end":338,"column_start":12,"column_end":18},"name":"height","qualname":"<Reader<R>>::height","value":"pub fn height(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Height of the image\n","sig":null,"attributes":[{"value":"/ Height of the image","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":23065,"byte_end":23088,"line_start":337,"line_end":337,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":23239,"byte_end":23247,"line_start":343,"line_end":343,"column_start":12,"column_end":20},"name":"bg_color","qualname":"<Reader<R>>::bg_color","value":"pub fn bg_color(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Index of the background color in the global palette\n","sig":null,"attributes":[{"value":"/ Index of the background color in the global palette","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":23172,"byte_end":23227,"line_start":342,"line_end":342,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":185},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":47423,"byte_end":47429,"line_start":19,"line_end":19,"column_start":5,"column_end":11},"name":"Finite","qualname":"::encoder::Repeat::Finite","value":"Repeat::Finite(u16)","parent":{"krate":0,"index":184},"children":[],"decl_id":null,"docs":" Finite number of repetitions\n","sig":null,"attributes":[{"value":"/ Finite number of repetitions","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":47386,"byte_end":47418,"line_start":18,"line_end":18,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":188},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":47479,"byte_end":47487,"line_start":21,"line_end":21,"column_start":5,"column_end":13},"name":"Infinite","qualname":"::encoder::Repeat::Infinite","value":"Repeat::Infinite","parent":{"krate":0,"index":184},"children":[],"decl_id":null,"docs":" Infinite number of repetitions\n","sig":null,"attributes":[{"value":"/ Infinite number of repetitions","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":47440,"byte_end":47474,"line_start":20,"line_end":20,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":184},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":47373,"byte_end":47379,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Repeat","qualname":"::encoder::Repeat","value":"pub enum Repeat {\n\n    /// Finite number of repetitions\n    Finite(u16),\n\n    /// Infinite number of repetitions\n    Infinite,\n}","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":188}],"decl_id":null,"docs":" Number of repetitions\n","sig":null,"attributes":[{"value":"/ Number of repetitions","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":47338,"byte_end":47363,"line_start":16,"line_end":16,"column_start":1,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":195},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":47842,"byte_end":47849,"line_start":34,"line_end":34,"column_start":2,"column_end":9},"name":"Control","qualname":"::encoder::ExtensionData::Control","value":"ExtensionData::Control { flags, delay, trns }","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Control extension. Use `ExtensionData::new_control_ext` to construct.\n","sig":null,"attributes":[{"value":"/ Control extension. Use `ExtensionData::new_control_ext` to construct.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":47767,"byte_end":47840,"line_start":33,"line_end":33,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":199},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":48016,"byte_end":48027,"line_start":43,"line_end":43,"column_start":5,"column_end":16},"name":"Repetitions","qualname":"::encoder::ExtensionData::Repetitions","value":"ExtensionData::Repetitions(Repeat)","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Sets the number of repetitions\n","sig":null,"attributes":[{"value":"/ Sets the number of repetitions","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":47977,"byte_end":48011,"line_start":42,"line_end":42,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":194},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":47747,"byte_end":47760,"line_start":32,"line_end":32,"column_start":10,"column_end":23},"name":"ExtensionData","qualname":"::encoder::ExtensionData","value":"pub enum ExtensionData {\n\n    /// Control extension. Use `ExtensionData::new_control_ext` to construct.\n    Control {\n        /// Flags.\n        flags: u8,\n        /// Frame delay.\n        delay: u16,\n        /// Transparent index.\n        trns: u8,\n    },\n\n    /// Sets the number of repetitions\n    Repetitions(Repeat),\n}","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":199}],"decl_id":null,"docs":" Extension data.\n","sig":null,"attributes":[{"value":"/ Extension data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":47718,"byte_end":47737,"line_start":31,"line_end":31,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":48169,"byte_end":48184,"line_start":50,"line_end":50,"column_start":9,"column_end":24},"name":"new_control_ext","qualname":"<ExtensionData>::new_control_ext","value":"pub fn new_control_ext(u16, DisposalMethod, bool, Option<u8>) -> ExtensionData","parent":null,"children":[],"decl_id":null,"docs":" Constructor for control extension data.","sig":null,"attributes":[{"value":"/ Constructor for control extension data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":48064,"byte_end":48107,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":48112,"byte_end":48115,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ `delay` is given in units of 10 ms.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":48120,"byte_end":48160,"line_start":49,"line_end":49,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":225},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":49848,"byte_end":49855,"line_start":128,"line_end":128,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[{"value":"/ GIF encoder.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":49820,"byte_end":49836,"line_start":127,"line_end":127,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":50177,"byte_end":50180,"line_start":140,"line_end":140,"column_start":9,"column_end":12},"name":"new","qualname":"<Encoder<W>>::new","value":"pub fn new(W, u16, u16, &[u8]) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder.","sig":null,"attributes":[{"value":"/ Creates a new encoder.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":49971,"byte_end":49997,"line_start":136,"line_end":136,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":50002,"byte_end":50005,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ `global_palette` gives the global color palette in the format `[r, g, b, ...]`,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":50010,"byte_end":50093,"line_start":138,"line_end":138,"column_start":5,"column_end":88}},{"value":"/ if no global palette shall be used an empty slice may be supplied.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":50098,"byte_end":50168,"line_start":139,"line_end":139,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":50430,"byte_end":50450,"line_start":150,"line_end":150,"column_start":9,"column_end":29},"name":"write_global_palette","qualname":"<Encoder<W>>::write_global_palette","value":"pub fn write_global_palette(Self, &[u8]) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Writes the global color palette.\n","sig":null,"attributes":[{"value":"/ Writes the global color palette.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":50385,"byte_end":50421,"line_start":149,"line_end":149,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":50910,"byte_end":50921,"line_start":165,"line_end":165,"column_start":9,"column_end":20},"name":"write_frame","qualname":"<Encoder<W>>::write_frame","value":"pub fn write_frame(&mut Self, &Frame) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes a frame to the image.","sig":null,"attributes":[{"value":"/ Writes a frame to the image.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":50793,"byte_end":50825,"line_start":162,"line_end":162,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":50827,"byte_end":50830,"line_start":163,"line_end":163,"column_start":2,"column_end":5}},{"value":"/ Note: This function also writes a control extension if necessary.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":50832,"byte_end":50901,"line_start":164,"line_end":164,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":52839,"byte_end":52854,"line_start":227,"line_end":227,"column_start":9,"column_end":24},"name":"write_extension","qualname":"<Encoder<W>>::write_extension","value":"pub fn write_extension(&mut Self, ExtensionData) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes an extension to the image.","sig":null,"attributes":[{"value":"/ Writes an extension to the image.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":52718,"byte_end":52755,"line_start":224,"line_end":224,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":52760,"byte_end":52763,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ It is normally not necessary to call this method manually.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":52768,"byte_end":52830,"line_start":226,"line_end":226,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":54315,"byte_end":54334,"line_start":263,"line_end":263,"column_start":9,"column_end":28},"name":"write_raw_extension","qualname":"<Encoder<W>>::write_raw_extension","value":"pub fn write_raw_extension(&mut Self, u8, &[&[u8]]) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes a raw extension to the image.","sig":null,"attributes":[{"value":"/ Writes a raw extension to the image.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":53959,"byte_end":53999,"line_start":258,"line_end":258,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":54004,"byte_end":54007,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method can be used to write an unsupported extesion to the file. `func` is the extension ","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":54012,"byte_end":54110,"line_start":260,"line_end":260,"column_start":5,"column_end":103}},{"value":"/ identifier (e.g. `Extension::Application as u8`). `data` are the extension payload blocks. If any","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":54115,"byte_end":54216,"line_start":261,"line_end":261,"column_start":5,"column_end":106}},{"value":"/ contained slice has a lenght > 255 it is automatically divided into sub-blocks.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":54221,"byte_end":54306,"line_start":262,"line_end":262,"column_start":5,"column_end":88}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":5642,"byte_end":5643,"line_start":25,"line_end":25,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":6010,"byte_end":6011,"line_start":40,"line_end":40,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":6159,"byte_end":6160,"line_start":48,"line_end":48,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":6329,"byte_end":6330,"line_start":56,"line_end":56,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":6523,"byte_end":6524,"line_start":65,"line_end":65,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7092,"byte_end":7106,"line_start":21,"line_end":21,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7544,"byte_end":7549,"line_start":44,"line_end":44,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8083,"byte_end":8092,"line_start":71,"line_end":71,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":9232,"byte_end":9237,"line_start":111,"line_end":111,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":9632,"byte_end":9637,"line_start":129,"line_end":129,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":28916,"byte_end":28929,"line_start":27,"line_end":27,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29291,"byte_end":29301,"line_start":43,"line_end":43,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":31811,"byte_end":31827,"line_start":149,"line_end":149,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":12159,"byte_end":12160,"line_start":18,"line_end":18,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":12797,"byte_end":12808,"line_start":41,"line_end":41,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":13109,"byte_end":13120,"line_start":53,"line_end":53,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":13433,"byte_end":13440,"line_start":69,"line_end":69,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":14172,"byte_end":14183,"line_start":94,"line_end":94,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":15403,"byte_end":15409,"line_start":137,"line_end":137,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":47532,"byte_end":47538,"line_start":24,"line_end":24,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":48044,"byte_end":48057,"line_start":46,"line_end":46,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":48689,"byte_end":48700,"line_start":77,"line_end":77,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":48856,"byte_end":48867,"line_start":87,"line_end":87,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":49407,"byte_end":49418,"line_start":108,"line_end":108,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":49954,"byte_end":49961,"line_start":135,"line_end":135,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":55060,"byte_end":55067,"line_start":286,"line_end":286,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":5435,"byte_end":5440,"line_start":18,"line_end":18,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2079},"to":{"krate":0,"index":10}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":5642,"byte_end":5643,"line_start":25,"line_end":25,"column_start":26,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":14},"to":{"krate":0,"index":10}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":6010,"byte_end":6011,"line_start":40,"line_end":40,"column_start":51,"column_end":52},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":19},"to":{"krate":0,"index":15}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":6159,"byte_end":6160,"line_start":48,"line_end":48,"column_start":52,"column_end":53},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":22},"to":{"krate":0,"index":15}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":6329,"byte_end":6330,"line_start":56,"line_end":56,"column_start":52,"column_end":53},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":25},"to":{"krate":0,"index":15}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/traits.rs","byte_start":6523,"byte_end":6524,"line_start":65,"line_end":65,"column_start":52,"column_end":53},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":28},"to":{"krate":0,"index":15}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7092,"byte_end":7106,"line_start":21,"line_end":21,"column_start":6,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":7544,"byte_end":7549,"line_start":44,"line_end":44,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":8083,"byte_end":8092,"line_start":71,"line_end":71,"column_start":6,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":9232,"byte_end":9237,"line_start":111,"line_end":111,"column_start":22,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":320},"to":{"krate":2,"index":2062}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/common.rs","byte_start":9632,"byte_end":9637,"line_start":129,"line_end":129,"column_start":6,"column_end":11},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":28916,"byte_end":28929,"line_start":27,"line_end":27,"column_start":26,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":339},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":29291,"byte_end":29301,"line_start":43,"line_end":43,"column_start":38,"column_end":48},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":351},"to":{"krate":0,"index":6}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/decoder.rs","byte_start":31811,"byte_end":31827,"line_start":149,"line_end":149,"column_start":6,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":12159,"byte_end":12160,"line_start":18,"line_end":18,"column_start":38,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":109},"to":{"krate":0,"index":6}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":12797,"byte_end":12808,"line_start":41,"line_end":41,"column_start":41,"column_end":52},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":489},"to":{"krate":0,"index":6}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":13109,"byte_end":13120,"line_start":53,"line_end":53,"column_start":41,"column_end":52},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":501},"to":{"krate":0,"index":6}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":13433,"byte_end":13440,"line_start":69,"line_end":69,"column_start":15,"column_end":22},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":14172,"byte_end":14183,"line_start":94,"line_end":94,"column_start":15,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/reader/mod.rs","byte_start":15403,"byte_end":15409,"line_start":137,"line_end":137,"column_start":9,"column_end":15},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":47532,"byte_end":47538,"line_start":24,"line_end":24,"column_start":42,"column_end":48},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":184},"to":{"krate":0,"index":6}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":48044,"byte_end":48057,"line_start":46,"line_end":46,"column_start":6,"column_end":19},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":48689,"byte_end":48700,"line_start":77,"line_end":77,"column_start":25,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":48856,"byte_end":48867,"line_start":87,"line_end":87,"column_start":35,"column_end":46},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":204},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":49407,"byte_end":49418,"line_start":108,"line_end":108,"column_start":34,"column_end":45},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":204},"to":{"krate":2,"index":2298}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":49954,"byte_end":49961,"line_start":135,"line_end":135,"column_start":16,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.7.0/src/encoder.rs","byte_start":55060,"byte_end":55067,"line_start":286,"line_end":286,"column_start":25,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":225},"to":{"krate":2,"index":2298}}]}