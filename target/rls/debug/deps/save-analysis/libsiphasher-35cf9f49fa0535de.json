{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2","program":"/home/merlin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","siphasher","/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=35cf9f49fa0535de","-C","extra-filename=-35cf9f49fa0535de","--out-dir","/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps","-L","dependency=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/merlin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libsiphasher-35cf9f49fa0535de.rmeta"},"prelude":{"crate_id":{"name":"siphasher","disambiguator":[14807039005414626440,3693488939454433785]},"crate_root":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src","external_crates":[{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2858088706689600179,17176650857302713463]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[15879356389475821678,5643460802079966270]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8920863043171661139,6394972819860350927]}}],"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/lib.rs","byte_start":0,"byte_end":242,"line_start":1,"line_end":15,"column_start":1,"column_end":14}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/lib.rs","byte_start":0,"byte_end":242,"line_start":1,"line_end":15,"column_start":1,"column_end":14},"name":"","qualname":"::","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":58}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/lib.rs","byte_start":118,"byte_end":124,"line_start":3,"line_end":3,"column_start":24,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sip","qualname":"::sip","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":287},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":130},{"krate":0,"index":137},{"krate":0,"index":135},{"krate":0,"index":134},{"krate":0,"index":132},{"krate":0,"index":139},{"krate":0,"index":146},{"krate":0,"index":144},{"krate":0,"index":143},{"krate":0,"index":141},{"krate":0,"index":148},{"krate":0,"index":156},{"krate":0,"index":154},{"krate":0,"index":153},{"krate":0,"index":151},{"krate":0,"index":158},{"krate":0,"index":172},{"krate":0,"index":169},{"krate":0,"index":167},{"krate":0,"index":175},{"krate":0,"index":183},{"krate":0,"index":181},{"krate":0,"index":180},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":18},{"krate":0,"index":22},{"krate":0,"index":26},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":185},{"krate":0,"index":192},{"krate":0,"index":190},{"krate":0,"index":189},{"krate":0,"index":187},{"krate":0,"index":52},{"krate":0,"index":194},{"krate":0,"index":201},{"krate":0,"index":199},{"krate":0,"index":198},{"krate":0,"index":196},{"krate":0,"index":55}],"decl_id":null,"docs":" An implementation of SipHash.\n","sig":null,"attributes":[{"value":"/ An implementation of SipHash.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":716,"byte_end":749,"line_start":11,"line_end":11,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":130},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":990,"byte_end":1001,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"name":"SipHasher13","qualname":"::sip::SipHasher13","value":"SipHasher13 {  }","parent":null,"children":[{"krate":0,"index":131}],"decl_id":null,"docs":" An implementation of SipHash 1-3.","sig":null,"attributes":[{"value":"/ An implementation of SipHash 1-3.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":861,"byte_end":898,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":899,"byte_end":902,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ See: https://131002.net/siphash/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":903,"byte_end":939,"line_start":22,"line_end":22,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":139},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":1169,"byte_end":1180,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"SipHasher24","qualname":"::sip::SipHasher24","value":"SipHasher24 {  }","parent":null,"children":[{"krate":0,"index":140}],"decl_id":null,"docs":" An implementation of SipHash 2-4.","sig":null,"attributes":[{"value":"/ An implementation of SipHash 2-4.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":1040,"byte_end":1077,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":1078,"byte_end":1081,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ See: https://131002.net/siphash/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":1082,"byte_end":1118,"line_start":30,"line_end":30,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":148},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":1865,"byte_end":1874,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"SipHasher","qualname":"::sip::SipHasher","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of SipHash 2-4.","sig":null,"attributes":[{"value":"/ An implementation of SipHash 2-4.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":1219,"byte_end":1256,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":1257,"byte_end":1260,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ See: https://131002.net/siphash/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":1261,"byte_end":1297,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":1298,"byte_end":1301,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ SipHash is a general-purpose hashing function: it runs at a good","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":1302,"byte_end":1370,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/ speed (competitive with Spooky and City) and permits strong _keyed_","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":1371,"byte_end":1442,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ hashing. This lets you key your hashtables from a strong RNG, such as","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":1443,"byte_end":1516,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ [`rand::os::OsRng`](https://doc.rust-lang.org/rand/rand/os/struct.OsRng.html).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":1517,"byte_end":1599,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":1600,"byte_end":1603,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Although the SipHash algorithm is considered to be generally strong,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":1604,"byte_end":1676,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is not intended for cryptographic purposes. As such, all","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":1677,"byte_end":1740,"line_start":46,"line_end":46,"column_start":1,"column_end":64}},{"value":"/ cryptographic uses of this implementation are _strongly discouraged_.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":1741,"byte_end":1814,"line_start":47,"line_end":47,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":4550,"byte_end":4553,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"new","qualname":"<SipHasher>::new","value":"pub fn new() -> SipHasher","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SipHasher` with the two initial keys set to 0.\n","sig":null,"attributes":[{"value":"/ Creates a new `SipHasher` with the two initial keys set to 0.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":4459,"byte_end":4524,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":4529,"byte_end":4538,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":4709,"byte_end":4722,"line_start":139,"line_end":139,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<SipHasher>::new_with_keys","value":"pub fn new_with_keys(u64, u64) -> SipHasher","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SipHasher` that is keyed off the provided keys.\n","sig":null,"attributes":[{"value":"/ Creates a `SipHasher` that is keyed off the provided keys.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":4621,"byte_end":4683,"line_start":137,"line_end":137,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":4688,"byte_end":4697,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":4877,"byte_end":4881,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"keys","qualname":"<SipHasher>::keys","value":"pub fn keys(&Self) -> (u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" Get the keys used by this hasher\n","sig":null,"attributes":[{"value":"/ Get the keys used by this hasher","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":4829,"byte_end":4865,"line_start":143,"line_end":143,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":5075,"byte_end":5078,"line_start":152,"line_end":152,"column_start":12,"column_end":15},"name":"new","qualname":"<SipHasher13>::new","value":"pub fn new() -> SipHasher13","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SipHasher13` with the two initial keys set to 0.\n","sig":null,"attributes":[{"value":"/ Creates a new `SipHasher13` with the two initial keys set to 0.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":4982,"byte_end":5049,"line_start":150,"line_end":150,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":5054,"byte_end":5063,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":5240,"byte_end":5253,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<SipHasher13>::new_with_keys","value":"pub fn new_with_keys(u64, u64) -> SipHasher13","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SipHasher13` that is keyed off the provided keys.\n","sig":null,"attributes":[{"value":"/ Creates a `SipHasher13` that is keyed off the provided keys.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":5150,"byte_end":5214,"line_start":156,"line_end":156,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":5219,"byte_end":5228,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":5418,"byte_end":5422,"line_start":163,"line_end":163,"column_start":12,"column_end":16},"name":"keys","qualname":"<SipHasher13>::keys","value":"pub fn keys(&Self) -> (u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" Get the keys used by this hasher\n","sig":null,"attributes":[{"value":"/ Get the keys used by this hasher","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":5370,"byte_end":5406,"line_start":162,"line_end":162,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":5612,"byte_end":5615,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<SipHasher24>::new","value":"pub fn new() -> SipHasher24","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SipHasher24` with the two initial keys set to 0.\n","sig":null,"attributes":[{"value":"/ Creates a new `SipHasher24` with the two initial keys set to 0.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":5519,"byte_end":5586,"line_start":169,"line_end":169,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":5591,"byte_end":5600,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":5777,"byte_end":5790,"line_start":177,"line_end":177,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<SipHasher24>::new_with_keys","value":"pub fn new_with_keys(u64, u64) -> SipHasher24","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SipHasher24` that is keyed off the provided keys.\n","sig":null,"attributes":[{"value":"/ Creates a `SipHasher24` that is keyed off the provided keys.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":5687,"byte_end":5751,"line_start":175,"line_end":175,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":5756,"byte_end":5765,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":5955,"byte_end":5959,"line_start":182,"line_end":182,"column_start":12,"column_end":16},"name":"keys","qualname":"<SipHasher24>::keys","value":"pub fn keys(&Self) -> (u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" Get the keys used by this hasher\n","sig":null,"attributes":[{"value":"/ Get the keys used by this hasher","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":5907,"byte_end":5943,"line_start":181,"line_end":181,"column_start":5,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":58},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sip128","qualname":"::sip128","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":299},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":203},{"krate":0,"index":211},{"krate":0,"index":209},{"krate":0,"index":208},{"krate":0,"index":206},{"krate":0,"index":213},{"krate":0,"index":220},{"krate":0,"index":218},{"krate":0,"index":217},{"krate":0,"index":215},{"krate":0,"index":222},{"krate":0,"index":229},{"krate":0,"index":227},{"krate":0,"index":226},{"krate":0,"index":224},{"krate":0,"index":231},{"krate":0,"index":239},{"krate":0,"index":237},{"krate":0,"index":236},{"krate":0,"index":234},{"krate":0,"index":241},{"krate":0,"index":252},{"krate":0,"index":250},{"krate":0,"index":255},{"krate":0,"index":263},{"krate":0,"index":261},{"krate":0,"index":260},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":265},{"krate":0,"index":272},{"krate":0,"index":270},{"krate":0,"index":269},{"krate":0,"index":267},{"krate":0,"index":120},{"krate":0,"index":274},{"krate":0,"index":281},{"krate":0,"index":279},{"krate":0,"index":278},{"krate":0,"index":276},{"krate":0,"index":123},{"krate":0,"index":126}],"decl_id":null,"docs":" An implementation of SipHash with a 128-bit output.\n","sig":null,"attributes":[{"value":"/ An implementation of SipHash with a 128-bit output.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":12015,"byte_end":12070,"line_start":11,"line_end":11,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":203},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":12265,"byte_end":12272,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"Hash128","qualname":"::sip128::Hash128","value":"Hash128 { h1, h2 }","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205}],"decl_id":null,"docs":" A 128-bit (2x64) hash output\n","sig":null,"attributes":[{"value":"/ A 128-bit (2x64) hash output","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":12182,"byte_end":12214,"line_start":20,"line_end":20,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":204},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":12283,"byte_end":12285,"line_start":23,"line_end":23,"column_start":9,"column_end":11},"name":"h1","qualname":"::sip128::Hash128::h1","value":"u64","parent":{"krate":0,"index":203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":205},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":12300,"byte_end":12302,"line_start":24,"line_end":24,"column_start":9,"column_end":11},"name":"h2","qualname":"::sip128::Hash128::h2","value":"u64","parent":{"krate":0,"index":203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":213},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":12403,"byte_end":12414,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"SipHasher13","qualname":"::sip128::SipHasher13","value":"SipHasher13 {  }","parent":null,"children":[{"krate":0,"index":214}],"decl_id":null,"docs":" An implementation of SipHash128 1-3.\n","sig":null,"attributes":[{"value":"/ An implementation of SipHash128 1-3.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":12312,"byte_end":12352,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":222},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":12544,"byte_end":12555,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"SipHasher24","qualname":"::sip128::SipHasher24","value":"SipHasher24 {  }","parent":null,"children":[{"krate":0,"index":223}],"decl_id":null,"docs":" An implementation of SipHash128 2-4.\n","sig":null,"attributes":[{"value":"/ An implementation of SipHash128 2-4.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":12453,"byte_end":12493,"line_start":33,"line_end":33,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":231},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":13202,"byte_end":13211,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"name":"SipHasher","qualname":"::sip128::SipHasher","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of SipHash128 2-4.","sig":null,"attributes":[{"value":"/ An implementation of SipHash128 2-4.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":12594,"byte_end":12634,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":12635,"byte_end":12638,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ SipHash is a general-purpose hashing function: it runs at a good","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":12639,"byte_end":12707,"line_start":41,"line_end":41,"column_start":1,"column_end":69}},{"value":"/ speed (competitive with Spooky and City) and permits strong _keyed_","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":12708,"byte_end":12779,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/ hashing. This lets you key your hashtables from a strong RNG, such as","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":12780,"byte_end":12853,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ [`rand::os::OsRng`](https://doc.rust-lang.org/rand/rand/os/struct.OsRng.html).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":12854,"byte_end":12936,"line_start":44,"line_end":44,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":12937,"byte_end":12940,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Although the SipHash algorithm is considered to be generally strong,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":12941,"byte_end":13013,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/ it is not intended for cryptographic purposes. As such, all","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":13014,"byte_end":13077,"line_start":47,"line_end":47,"column_start":1,"column_end":64}},{"value":"/ cryptographic uses of this implementation are _strongly discouraged_.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":13078,"byte_end":13151,"line_start":48,"line_end":48,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":68},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":15778,"byte_end":15787,"line_start":131,"line_end":131,"column_start":11,"column_end":20},"name":"Hasher128","qualname":"::sip128::Hasher128","value":"Hasher128","parent":null,"children":[{"krate":0,"index":69}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":15827,"byte_end":15836,"line_start":133,"line_end":133,"column_start":8,"column_end":17},"name":"finish128","qualname":"::sip128::Hasher128::finish128","value":"pub fn finish128(&Self) -> Hash128","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Return a 128-bit hash\n","sig":null,"attributes":[{"value":"/ Return a 128-bit hash","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":15794,"byte_end":15819,"line_start":132,"line_end":132,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":15971,"byte_end":15974,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"new","qualname":"<SipHasher>::new","value":"pub fn new() -> SipHasher","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SipHasher` with the two initial keys set to 0.\n","sig":null,"attributes":[{"value":"/ Creates a new `SipHasher` with the two initial keys set to 0.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":15880,"byte_end":15945,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":15950,"byte_end":15959,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":16130,"byte_end":16143,"line_start":145,"line_end":145,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<SipHasher>::new_with_keys","value":"pub fn new_with_keys(u64, u64) -> SipHasher","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SipHasher` that is keyed off the provided keys.\n","sig":null,"attributes":[{"value":"/ Creates a `SipHasher` that is keyed off the provided keys.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":16042,"byte_end":16104,"line_start":143,"line_end":143,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":16109,"byte_end":16118,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":16298,"byte_end":16302,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"keys","qualname":"<SipHasher>::keys","value":"pub fn keys(&Self) -> (u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" Get the keys used by this hasher\n","sig":null,"attributes":[{"value":"/ Get the keys used by this hasher","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":16250,"byte_end":16286,"line_start":149,"line_end":149,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":16644,"byte_end":16647,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"new","qualname":"<SipHasher13>::new","value":"pub fn new() -> SipHasher13","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SipHasher13` with the two initial keys set to 0.\n","sig":null,"attributes":[{"value":"/ Creates a new `SipHasher13` with the two initial keys set to 0.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":16551,"byte_end":16618,"line_start":164,"line_end":164,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":16623,"byte_end":16632,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":16809,"byte_end":16822,"line_start":172,"line_end":172,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<SipHasher13>::new_with_keys","value":"pub fn new_with_keys(u64, u64) -> SipHasher13","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SipHasher13` that is keyed off the provided keys.\n","sig":null,"attributes":[{"value":"/ Creates a `SipHasher13` that is keyed off the provided keys.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":16719,"byte_end":16783,"line_start":170,"line_end":170,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":16788,"byte_end":16797,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":16987,"byte_end":16991,"line_start":177,"line_end":177,"column_start":12,"column_end":16},"name":"keys","qualname":"<SipHasher13>::keys","value":"pub fn keys(&Self) -> (u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" Get the keys used by this hasher\n","sig":null,"attributes":[{"value":"/ Get the keys used by this hasher","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":16939,"byte_end":16975,"line_start":176,"line_end":176,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":17336,"byte_end":17339,"line_start":193,"line_end":193,"column_start":12,"column_end":15},"name":"new","qualname":"<SipHasher24>::new","value":"pub fn new() -> SipHasher24","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SipHasher24` with the two initial keys set to 0.\n","sig":null,"attributes":[{"value":"/ Creates a new `SipHasher24` with the two initial keys set to 0.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":17243,"byte_end":17310,"line_start":191,"line_end":191,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":17315,"byte_end":17324,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":17501,"byte_end":17514,"line_start":199,"line_end":199,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<SipHasher24>::new_with_keys","value":"pub fn new_with_keys(u64, u64) -> SipHasher24","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SipHasher24` that is keyed off the provided keys.\n","sig":null,"attributes":[{"value":"/ Creates a `SipHasher24` that is keyed off the provided keys.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":17411,"byte_end":17475,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":17480,"byte_end":17489,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":17679,"byte_end":17683,"line_start":204,"line_end":204,"column_start":12,"column_end":16},"name":"keys","qualname":"<SipHasher24>::keys","value":"pub fn keys(&Self) -> (u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" Get the keys used by this hasher\n","sig":null,"attributes":[{"value":"/ Get the keys used by this hasher","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":17631,"byte_end":17667,"line_start":203,"line_end":203,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":24101,"byte_end":24109,"line_start":468,"line_end":468,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Hash128>::as_bytes","value":"pub fn as_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 16-bytes vector\n","sig":null,"attributes":[{"value":"/ Convert into a 16-bytes vector","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":24055,"byte_end":24089,"line_start":467,"line_end":467,"column_start":5,"column_end":39}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":4443,"byte_end":4452,"line_start":130,"line_end":130,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":4964,"byte_end":4975,"line_start":149,"line_end":149,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":5501,"byte_end":5512,"line_start":168,"line_end":168,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":6046,"byte_end":6052,"line_start":187,"line_end":187,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":8103,"byte_end":8112,"line_start":250,"line_end":250,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":8299,"byte_end":8310,"line_start":262,"line_end":262,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":8507,"byte_end":8518,"line_start":274,"line_end":274,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":8723,"byte_end":8729,"line_start":286,"line_end":286,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":10616,"byte_end":10622,"line_start":359,"line_end":359,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":10946,"byte_end":10957,"line_start":376,"line_end":376,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":11255,"byte_end":11266,"line_start":393,"line_end":393,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":15864,"byte_end":15873,"line_start":136,"line_end":136,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":16399,"byte_end":16408,"line_start":155,"line_end":155,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":16533,"byte_end":16544,"line_start":163,"line_end":163,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":17084,"byte_end":17095,"line_start":182,"line_end":182,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":17225,"byte_end":17236,"line_start":190,"line_end":190,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":17776,"byte_end":17787,"line_start":209,"line_end":209,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":17925,"byte_end":17931,"line_start":217,"line_end":217,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":19976,"byte_end":19982,"line_start":280,"line_end":280,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":20537,"byte_end":20546,"line_start":303,"line_end":303,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":20733,"byte_end":20744,"line_start":315,"line_end":315,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":20941,"byte_end":20952,"line_start":327,"line_end":327,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":21157,"byte_end":21163,"line_start":339,"line_end":339,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":22778,"byte_end":22784,"line_start":401,"line_end":401,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":23109,"byte_end":23115,"line_start":416,"line_end":416,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":23439,"byte_end":23450,"line_start":433,"line_end":433,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":23748,"byte_end":23759,"line_start":450,"line_end":450,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":24041,"byte_end":24048,"line_start":466,"line_end":466,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/lib.rs","byte_start":169,"byte_end":172,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/lib.rs","byte_start":182,"byte_end":188,"line_start":9,"line_end":9,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":58}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":4443,"byte_end":4452,"line_start":130,"line_end":130,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":4964,"byte_end":4975,"line_start":149,"line_end":149,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":5501,"byte_end":5512,"line_start":168,"line_end":168,"column_start":6,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":6046,"byte_end":6052,"line_start":187,"line_end":187,"column_start":14,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":8103,"byte_end":8112,"line_start":250,"line_end":250,"column_start":23,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":148},"to":{"krate":1,"index":7142}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":8299,"byte_end":8310,"line_start":262,"line_end":262,"column_start":23,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":130},"to":{"krate":1,"index":7142}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":8507,"byte_end":8518,"line_start":274,"line_end":274,"column_start":23,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":139},"to":{"krate":1,"index":7142}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":8723,"byte_end":8729,"line_start":286,"line_end":286,"column_start":31,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":158},"to":{"krate":1,"index":7142}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":10616,"byte_end":10622,"line_start":359,"line_end":359,"column_start":26,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":158},"to":{"krate":1,"index":2062}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":10946,"byte_end":10957,"line_start":376,"line_end":376,"column_start":14,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":185},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip.rs","byte_start":11255,"byte_end":11266,"line_start":393,"line_end":393,"column_start":14,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":194},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":15864,"byte_end":15873,"line_start":136,"line_end":136,"column_start":6,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":16399,"byte_end":16408,"line_start":155,"line_end":155,"column_start":20,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":231},"to":{"krate":0,"index":68}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":16533,"byte_end":16544,"line_start":163,"line_end":163,"column_start":6,"column_end":17},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":17084,"byte_end":17095,"line_start":182,"line_end":182,"column_start":20,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":213},"to":{"krate":0,"index":68}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":17225,"byte_end":17236,"line_start":190,"line_end":190,"column_start":6,"column_end":17},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":17776,"byte_end":17787,"line_start":209,"line_end":209,"column_start":20,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":222},"to":{"krate":0,"index":68}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":17925,"byte_end":17931,"line_start":217,"line_end":217,"column_start":14,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":19976,"byte_end":19982,"line_start":280,"line_end":280,"column_start":14,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":20537,"byte_end":20546,"line_start":303,"line_end":303,"column_start":23,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":231},"to":{"krate":1,"index":7142}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":20733,"byte_end":20744,"line_start":315,"line_end":315,"column_start":23,"column_end":34},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":213},"to":{"krate":1,"index":7142}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":20941,"byte_end":20952,"line_start":327,"line_end":327,"column_start":23,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":222},"to":{"krate":1,"index":7142}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":21157,"byte_end":21163,"line_start":339,"line_end":339,"column_start":31,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":241},"to":{"krate":1,"index":7142}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":22778,"byte_end":22784,"line_start":401,"line_end":401,"column_start":24,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":241},"to":{"krate":1,"index":1763}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":23109,"byte_end":23115,"line_start":416,"line_end":416,"column_start":26,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":241},"to":{"krate":1,"index":2062}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":23439,"byte_end":23450,"line_start":433,"line_end":433,"column_start":14,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":265},"to":{"krate":0,"index":117}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":23748,"byte_end":23759,"line_start":450,"line_end":450,"column_start":14,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":274},"to":{"krate":0,"index":117}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.2/src/sip128.rs","byte_start":24041,"byte_end":24048,"line_start":466,"line_end":466,"column_start":6,"column_end":13},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":203},"to":{"krate":4294967295,"index":4294967295}}]}