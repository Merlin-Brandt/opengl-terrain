{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8","program":"/home/merlin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","backtrace","/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"backtrace-sys\"","--cfg","feature=\"dbghelp\"","--cfg","feature=\"dbghelp-sys\"","--cfg","feature=\"default\"","--cfg","feature=\"dladdr\"","--cfg","feature=\"kernel32-sys\"","--cfg","feature=\"libbacktrace\"","--cfg","feature=\"libunwind\"","--cfg","feature=\"winapi\"","-C","metadata=431e7234c7861d0d","-C","extra-filename=-431e7234c7861d0d","--out-dir","/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps","-L","dependency=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps","--extern","backtrace_sys=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libbacktrace_sys-8fabeb4b007d36ee.rmeta","--extern","cfg_if=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libcfg_if-bebdc83d5bf48d2f.rmeta","--extern","dbghelp=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libdbghelp-11557cc643d853b6.rmeta","--extern","debug_builders=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libdebug_builders-1c652fd9654601e2.rmeta","--extern","kernel32=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libkernel32-8f8d1e3afea61a13.rmeta","--extern","libc=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/liblibc-e39463c6afe14535.rmeta","--extern","winapi=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libwinapi-6d12d0a46ef88b03.rmeta","--cap-lints","allow","-L","native=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/build/backtrace-sys-98b5f7f02857665a/out/.libs","--error-format=json","--sysroot","/home/merlin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libbacktrace-431e7234c7861d0d.rmeta"},"prelude":{"crate_id":{"name":"backtrace","disambiguator":[17837910979826181954,14780313452655596032]},"crate_root":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src","external_crates":[{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[761217931017169021,11182540429948991214]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2858088706689600179,17176650857302713463]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15879356389475821678,5643460802079966270]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8920863043171661139,6394972819860350927]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7444524629517225000,3862632196027588969]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5618285707243958873,10527758992658711681]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15786611459077781418,3427959288485188730]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7447291644365204408,1470667821728193545]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6110035509052048891,1769159197608489149]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2517392378542245850,1007682534799069383]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10841319041269114641,5435836511512932455]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11288057705607810041,2650294536215064940]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3615958118357796166,6340715783279141278]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5192402504599619502,9026648258735454425]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[18157078792379649936,5967302931976128037]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[7273518522570529581,7645160771462661682]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14392049376104722820,4331661258852677409]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":18,"id":{"name":"libc","disambiguator":[12211130183356822035,9476985101973045270]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":19,"id":{"name":"debug_builders","disambiguator":[11604184316828576005,18340190693474000213]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":20,"id":{"name":"kernel32","disambiguator":[11555428931057491567,8752618833943212861]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":21,"id":{"name":"winapi","disambiguator":[6565408924426765304,7995359786496595711]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":22,"id":{"name":"dbghelp","disambiguator":[9452660583040863362,10385952504852915179]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","num":23,"id":{"name":"cfg_if","disambiguator":[1572669606615002982,13937849121960402449]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/libbacktrace.rs","num":24,"id":{"name":"backtrace_sys","disambiguator":[5982924488360087894,4123064403908029243]}}],"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":0,"byte_end":4465,"line_start":1,"line_end":159,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":19},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":2625,"byte_end":2630,"line_start":81,"line_end":81,"column_start":21,"column_end":26},"alias_span":null,"name":"trace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":2632,"byte_end":2637,"line_start":81,"line_end":81,"column_start":28,"column_end":33},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":2676,"byte_end":2682,"line_start":84,"line_end":84,"column_start":21,"column_end":27},"alias_span":null,"name":"Symbol","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":34},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":2684,"byte_end":2691,"line_start":84,"line_end":84,"column_start":29,"column_end":36},"alias_span":null,"name":"resolve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":42},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":2728,"byte_end":2736,"line_start":87,"line_end":87,"column_start":19,"column_end":27},"alias_span":null,"name":"demangle","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":0,"byte_end":4465,"line_start":1,"line_end":159,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48}],"decl_id":null,"docs":" A library for acquiring a backtrace at runtime","sig":null,"attributes":[{"value":"/ A library for acquiring a backtrace at runtime","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":0,"byte_end":50,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":51,"byte_end":54,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library is meant to supplement the `RUST_BACKTRACE=1` support of the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":55,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ standard library by allowing an acquisition of a backtrace at runtime","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":133,"byte_end":206,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ programmatically. The backtraces generated by this library do not need to be","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":207,"byte_end":287,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ parsed, for example, and expose the functionality of multiple backend","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":288,"byte_end":361,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/ implementations.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":362,"byte_end":382,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":383,"byte_end":386,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":387,"byte_end":407,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":408,"byte_end":411,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This library makes use of a number of strategies for actually acquiring a","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":412,"byte_end":489,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ backtrace. For example unix uses libgcc's libunwind bindings by default to","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":490,"byte_end":568,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ acquir a backtrace, but dladdr is used on OSX to acquire symbol names while","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":569,"byte_end":648,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ linux uses gcc's libbacktrace.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":649,"byte_end":683,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":684,"byte_end":687,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When using the default feature set of this library the \"most reasonable\" set","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":688,"byte_end":768,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ of defaults is chosen for the current platform, but the features activated","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":769,"byte_end":847,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ can also be controlled at a finer granularity.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":848,"byte_end":898,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":899,"byte_end":902,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Platform Support","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":903,"byte_end":925,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":926,"byte_end":929,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Currently this library is verified to work on Linux, OSX, and Windows, but","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":930,"byte_end":1008,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ it may work on other platforms as well. Note that the quality of the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1009,"byte_end":1081,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ backtrace may vary across platforms.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1082,"byte_end":1122,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1123,"byte_end":1126,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # API Principles","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1127,"byte_end":1147,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1148,"byte_end":1151,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This library attempts to be as flexible as possible to accomodate different","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1152,"byte_end":1231,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ backend implementations of acquiring a backtrace. Consequently the currently","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1232,"byte_end":1312,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ exported functions are closure-based as opposed to the likely expected","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1313,"byte_end":1387,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ iterator-based versions. This is done due to limitations of the underlying","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1388,"byte_end":1466,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ APIs used from the system.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1467,"byte_end":1497,"line_start":32,"line_end":32,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1498,"byte_end":1501,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1502,"byte_end":1513,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1514,"byte_end":1517,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ First, add this to your Cargo.toml","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1518,"byte_end":1556,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1557,"byte_end":1560,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1561,"byte_end":1572,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1573,"byte_end":1591,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/ backtrace = \"0.1\"","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1592,"byte_end":1613,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1614,"byte_end":1621,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1622,"byte_end":1625,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Next:","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1626,"byte_end":1635,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1636,"byte_end":1639,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1640,"byte_end":1647,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ extern crate backtrace;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1648,"byte_end":1675,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1676,"byte_end":1679,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1680,"byte_end":1695,"line_start":48,"line_end":48,"column_start":1,"column_end":16}},{"value":"/     backtrace::trace(&mut |frame| {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1696,"byte_end":1735,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/         let ip = frame.ip();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1736,"byte_end":1768,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/         let symbol_address = frame.symbol_address();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1769,"byte_end":1825,"line_start":51,"line_end":51,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1826,"byte_end":1829,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/         // Resolve this instruction pointer to a symbol name","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1830,"byte_end":1894,"line_start":53,"line_end":53,"column_start":1,"column_end":65}},{"value":"/         backtrace::resolve(ip, &mut |symbol| {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1895,"byte_end":1945,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/             if let Some(name) = symbol.name() {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1946,"byte_end":1997,"line_start":55,"line_end":55,"column_start":1,"column_end":52}},{"value":"/                 // ...","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":1998,"byte_end":2024,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":2025,"byte_end":2042,"line_start":57,"line_end":57,"column_start":1,"column_end":18}},{"value":"/             if let Some(filename) = symbol.filename() {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":2043,"byte_end":2102,"line_start":58,"line_end":58,"column_start":1,"column_end":60}},{"value":"/                 // ...","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":2103,"byte_end":2129,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":2130,"byte_end":2147,"line_start":60,"line_end":60,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":2148,"byte_end":2163,"line_start":61,"line_end":61,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":2164,"byte_end":2167,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/         true // keep going to the next frame","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":2168,"byte_end":2216,"line_start":63,"line_end":63,"column_start":1,"column_end":49}},{"value":"/     });","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":2217,"byte_end":2228,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":2229,"byte_end":2234,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":2235,"byte_end":2242,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"deny(missing_docs)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":2308,"byte_end":2330,"line_start":69,"line_end":69,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":16},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":4831,"byte_end":4836,"line_start":12,"line_end":12,"column_start":11,"column_end":16},"name":"Frame","qualname":"::backtrace::Frame","value":"Frame","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18}],"decl_id":null,"docs":" A trait representing one frame of a backtrace, yielded to the `trace`\n function of this crate.","sig":null,"attributes":[{"value":"/ A trait representing one frame of a backtrace, yielded to the `trace`","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":4542,"byte_end":4615,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/ function of this crate.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":4616,"byte_end":4643,"line_start":7,"line_end":7,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":4644,"byte_end":4647,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The tracing function's closure will be yielded frames, and the frame is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":4648,"byte_end":4723,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ virtually dispatched as the underlying implementation is not always known","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":4724,"byte_end":4801,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ until runtime.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":4802,"byte_end":4820,"line_start":11,"line_end":11,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5212,"byte_end":5214,"line_start":21,"line_end":21,"column_start":8,"column_end":10},"name":"ip","qualname":"::backtrace::Frame::ip","value":"pub fn ip(&Self) -> *mut c_void","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Returns the current instruction pointer of this frame.","sig":null,"attributes":[{"value":"/ Returns the current instruction pointer of this frame.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":4843,"byte_end":4901,"line_start":13,"line_end":13,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":4906,"byte_end":4909,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ This is normally the next instruction to execute in the frame, but not","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":4914,"byte_end":4988,"line_start":15,"line_end":15,"column_start":5,"column_end":79}},{"value":"/ all implementations list this with 100% accuracy (but it's generally","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":4993,"byte_end":5065,"line_start":16,"line_end":16,"column_start":5,"column_end":77}},{"value":"/ pretty close).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5070,"byte_end":5088,"line_start":17,"line_end":17,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5093,"byte_end":5096,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ It is recommended to pass this value to `backtrace::resolve` to turn it","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5101,"byte_end":5176,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ into a symbol name.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5181,"byte_end":5204,"line_start":20,"line_end":20,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5670,"byte_end":5684,"line_start":31,"line_end":31,"column_start":8,"column_end":22},"name":"symbol_address","qualname":"::backtrace::Frame::symbol_address","value":"pub fn symbol_address(&Self) -> *mut c_void","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Returns the starting symbol address of the frame of this function.","sig":null,"attributes":[{"value":"/ Returns the starting symbol address of the frame of this function.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5243,"byte_end":5313,"line_start":23,"line_end":23,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5318,"byte_end":5321,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ This will attempt to rewind the instruction pointer returned by `ip` to","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5326,"byte_end":5401,"line_start":25,"line_end":25,"column_start":5,"column_end":80}},{"value":"/ the start of the function, returning that value. In some cases, however,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5406,"byte_end":5482,"line_start":26,"line_end":26,"column_start":5,"column_end":81}},{"value":"/ backends will just return `ip` from this function.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5487,"byte_end":5541,"line_start":27,"line_end":27,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5546,"byte_end":5549,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ The returned value can sometimes be used if `backtrace::resolve` failed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5554,"byte_end":5629,"line_start":29,"line_end":29,"column_start":5,"column_end":80}},{"value":"/ on the `ip` given above.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5634,"byte_end":5662,"line_start":30,"line_end":30,"column_start":5,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":19},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6908,"byte_end":6913,"line_start":66,"line_end":66,"column_start":8,"column_end":13},"name":"trace","qualname":"::backtrace::trace","value":"pub fn trace(&mut FnMut(&Frame) -> bool)","parent":null,"children":[],"decl_id":null,"docs":" Inspects the current call-stack, passing all active frames into the closure\n provided to calculate a stack trace.","sig":null,"attributes":[{"value":"/ Inspects the current call-stack, passing all active frames into the closure","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5711,"byte_end":5790,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ provided to calculate a stack trace.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5791,"byte_end":5831,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5832,"byte_end":5835,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This function is the workhorse of this library in calculating the stack","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5836,"byte_end":5911,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/ traces for a program. The given closure `cb` is yielded instances of a","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5912,"byte_end":5986,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ `Frame` which represent information about that call frame on the stack. The","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":5987,"byte_end":6066,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ closure is yielded frames in a top-down fashion (most recently called","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6067,"byte_end":6140,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ functions first).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6141,"byte_end":6162,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6163,"byte_end":6166,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The closure's return value is an indication of whether the backtrace should","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6167,"byte_end":6246,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ continue. A return value of `false` will terminate the backtrace and return","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6247,"byte_end":6326,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ immediately.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6327,"byte_end":6343,"line_start":45,"line_end":45,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6344,"byte_end":6347,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Once a `Frame` is acquired you will likely want to call `backtrace::resolve`","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6348,"byte_end":6428,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/ to convert the `ip` (instruction pointer) or symbol address to a `Symbol`","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6429,"byte_end":6506,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ through which the name and/or filename/line number can be learned.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6507,"byte_end":6577,"line_start":49,"line_end":49,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6578,"byte_end":6581,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6582,"byte_end":6595,"line_start":51,"line_end":51,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6596,"byte_end":6599,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6600,"byte_end":6607,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ extern crate backtrace;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6608,"byte_end":6635,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6636,"byte_end":6639,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6640,"byte_end":6655,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/     backtrace::trace(&mut |frame| {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6656,"byte_end":6695,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/         // ...","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6696,"byte_end":6714,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6715,"byte_end":6718,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/         true // continue the backtrace","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6719,"byte_end":6761,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6762,"byte_end":6773,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6774,"byte_end":6779,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6780,"byte_end":6787,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/mod.rs","byte_start":6788,"byte_end":6804,"line_start":64,"line_end":64,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":29},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":8292,"byte_end":8298,"line_start":15,"line_end":15,"column_start":11,"column_end":17},"name":"Symbol","qualname":"::symbolize::Symbol","value":"Symbol","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":" A trait representing the resolution of a symbol in a file.","sig":null,"attributes":[{"value":"/ A trait representing the resolution of a symbol in a file.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":7783,"byte_end":7845,"line_start":6,"line_end":6,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":7846,"byte_end":7849,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is yielded as a trait object to the closure given to the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":7850,"byte_end":7921,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/ `backtrace::resolve` function, and it is virtually dispatched as it's","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":7922,"byte_end":7995,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ unknown which implementation is behind it.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":7996,"byte_end":8042,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":8043,"byte_end":8046,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A symbol can give contextual information about a funciton, for example the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":8047,"byte_end":8125,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ name, filename, line number, precise address, etc. Not all information is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":8126,"byte_end":8203,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ always available in a symbol, however, so all methods return an `Option`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":8204,"byte_end":8281,"line_start":14,"line_end":14,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":8407,"byte_end":8411,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"name","qualname":"::symbolize::Symbol::name","value":"pub fn name(&Self) -> Option<&[u8]>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Returns the name of this function as a byte array (may not always be\n valid UTF-8).\n","sig":null,"attributes":[{"value":"/ Returns the name of this function as a byte array (may not always be","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":8305,"byte_end":8377,"line_start":16,"line_end":16,"column_start":5,"column_end":77}},{"value":"/ valid UTF-8).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":8382,"byte_end":8399,"line_start":17,"line_end":17,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":8508,"byte_end":8512,"line_start":21,"line_end":21,"column_start":8,"column_end":12},"name":"addr","qualname":"::symbolize::Symbol::addr","value":"pub fn addr(&Self) -> Option<*mut c_void>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Returns the starting address of this function.\n","sig":null,"attributes":[{"value":"/ Returns the starting address of this function.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":8450,"byte_end":8500,"line_start":20,"line_end":20,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":8886,"byte_end":8894,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"filename","qualname":"::symbolize::Symbol::filename","value":"pub fn filename(&Self) -> Option<&[u8]>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Returns the file name where this function was defined.","sig":null,"attributes":[{"value":"/ Returns the file name where this function was defined.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":8557,"byte_end":8615,"line_start":23,"line_end":23,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":8620,"byte_end":8623,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ This is currently only available when libbacktrace is being used (e.g.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":8628,"byte_end":8702,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ unix platforms other than OSX) and when a binary is compiled with","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":8707,"byte_end":8776,"line_start":26,"line_end":26,"column_start":5,"column_end":74}},{"value":"/ debuginfo. If neither of these conditions is met then this will likely","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":8781,"byte_end":8855,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ return `None`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":8860,"byte_end":8878,"line_start":28,"line_end":28,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9154,"byte_end":9160,"line_start":35,"line_end":35,"column_start":8,"column_end":14},"name":"lineno","qualname":"::symbolize::Symbol::lineno","value":"pub fn lineno(&Self) -> Option<u32>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Returns the line number for where this symbol is currently executing.","sig":null,"attributes":[{"value":"/ Returns the line number for where this symbol is currently executing.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":8933,"byte_end":9006,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9011,"byte_end":9014,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This return value is typically `Some` if `filename` returns `Some`, and","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9019,"byte_end":9094,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ is consequently subject to similar caveats.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9099,"byte_end":9146,"line_start":34,"line_end":34,"column_start":5,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":10114,"byte_end":10121,"line_start":68,"line_end":68,"column_start":8,"column_end":15},"name":"resolve","qualname":"::symbolize::resolve","value":"pub fn resolve(*mut c_void, &mut FnMut(&Symbol) -> ())","parent":null,"children":[],"decl_id":null,"docs":" Resolve an address to a symbol, passing the symbol to the specified\n closure.","sig":null,"attributes":[{"value":"/ Resolve an address to a symbol, passing the symbol to the specified","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9195,"byte_end":9266,"line_start":38,"line_end":38,"column_start":1,"column_end":72}},{"value":"/ closure.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9267,"byte_end":9279,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9280,"byte_end":9283,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This function will look up the given address in areas such as the local","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9284,"byte_end":9359,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"/ symbol table, dynamic symbol table, or DWARF debug info (depending on the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9360,"byte_end":9437,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ activated implementation) to find symbols to yield.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9438,"byte_end":9493,"line_start":43,"line_end":43,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9494,"byte_end":9497,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The closure may not be called if resolution could not be performed, and it","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9498,"byte_end":9576,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ also may be called more than once in the case of inlined functions.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9577,"byte_end":9648,"line_start":46,"line_end":46,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9649,"byte_end":9652,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Symbols yielded represent the execution at the specified `addr`, returning","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9653,"byte_end":9731,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ file/line pairs for that addres (if available).","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9732,"byte_end":9783,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9784,"byte_end":9787,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9788,"byte_end":9801,"line_start":51,"line_end":51,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9802,"byte_end":9805,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9806,"byte_end":9813,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ extern crate backtrace;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9814,"byte_end":9841,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9842,"byte_end":9845,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9846,"byte_end":9861,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/     backtrace::trace(&mut |frame| {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9862,"byte_end":9901,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/         let ip = frame.ip();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9902,"byte_end":9934,"line_start":58,"line_end":58,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9935,"byte_end":9938,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/         backtrace::resolve(ip, &mut |symbol| {","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9939,"byte_end":9989,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/             // ...","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":9990,"byte_end":10012,"line_start":61,"line_end":61,"column_start":1,"column_end":23}},{"value":"/         });","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":10013,"byte_end":10028,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":10029,"byte_end":10032,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/         false // only look at the top frame","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":10033,"byte_end":10080,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/     });","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":10081,"byte_end":10092,"line_start":65,"line_end":65,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":10093,"byte_end":10098,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/mod.rs","byte_start":10099,"byte_end":10106,"line_start":67,"line_end":67,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":42},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":13561,"byte_end":13569,"line_start":53,"line_end":53,"column_start":8,"column_end":16},"name":"demangle","qualname":"::demangle::demangle","value":"pub fn demangle(&mut Write, &str) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" De-mangles a Rust symbol into a more readable version","sig":null,"attributes":[{"value":"/ De-mangles a Rust symbol into a more readable version","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":11841,"byte_end":11898,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":11899,"byte_end":11902,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All rust symbols by default are mangled as they contain characters that","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":11903,"byte_end":11978,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ cannot be represented in all object files. The mangling mechanism is similar","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":11979,"byte_end":12059,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ to C++'s, but Rust has a few specifics to handle items like lifetimes in","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12060,"byte_end":12136,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ symbols.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12137,"byte_end":12149,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12150,"byte_end":12153,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This function will take a **mangled** symbol (typically acquired from a","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12154,"byte_end":12229,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ `Symbol` which is in turn resolved from a `Frame`) and then writes the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12230,"byte_end":12304,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ de-mangled version into the given `writer`. If the symbol does not look like","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12305,"byte_end":12385,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ a mangled symbol, it is still written to `writer`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12386,"byte_end":12440,"line_start":23,"line_end":23,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12441,"byte_end":12444,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12445,"byte_end":12458,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12459,"byte_end":12462,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12463,"byte_end":12470,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ extern crate backtrace;","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12471,"byte_end":12498,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12499,"byte_end":12502,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let mangled = \"_ZN4testE\";","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12503,"byte_end":12533,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/ let mut demangled = String::new();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12534,"byte_end":12572,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/ backtrace::demangle(&mut demangled, mangled).unwrap();","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12573,"byte_end":12631,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12632,"byte_end":12635,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(demangled, \"test\");","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12636,"byte_end":12670,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/demangle.rs","byte_start":12671,"byte_end":12678,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/libunwind.rs","byte_start":10325720,"byte_end":10325731,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/libbacktrace.rs","byte_start":10333303,"byte_end":10333316,"line_start":41,"line_end":41,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/libbacktrace.rs","byte_start":10334165,"byte_end":10334177,"line_start":73,"line_end":73,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":2843,"byte_end":2847,"line_start":96,"line_end":96,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":3343,"byte_end":3352,"line_start":116,"line_end":116,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/backtrace/libunwind.rs","byte_start":10325720,"byte_end":10325731,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":71},"to":{"krate":0,"index":16}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/libbacktrace.rs","byte_start":10333303,"byte_end":10333316,"line_start":41,"line_end":41,"column_start":21,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":140},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/symbolize/libbacktrace.rs","byte_start":10334165,"byte_end":10334177,"line_start":73,"line_end":73,"column_start":21,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":147},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":2843,"byte_end":2847,"line_start":96,"line_end":96,"column_start":15,"column_end":19},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":44},"to":{"krate":2,"index":2298}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.1.8/src/lib.rs","byte_start":3343,"byte_end":3352,"line_start":116,"line_end":116,"column_start":19,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":56},"to":{"krate":2,"index":2298}}]}