{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19","program":"/home/merlin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","flate2","/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"miniz-sys\"","-C","metadata=93a8122d2b6a147c","-C","extra-filename=-93a8122d2b6a147c","--out-dir","/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps","-L","dependency=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps","--extern","libc=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/liblibc-e39463c6afe14535.rmeta","--extern","miniz_sys=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libminiz_sys-04d4a38f06fff813.rmeta","--cap-lints","allow","-L","native=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/build/miniz-sys-7d6826dd97f6dd50/out","--error-format=json","--sysroot","/home/merlin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libflate2-93a8122d2b6a147c.rmeta"},"prelude":{"crate_id":{"name":"flate2","disambiguator":[5934212303376939947,7114951448075655869]},"crate_root":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src","external_crates":[{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[761217931017169021,11182540429948991214]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2858088706689600179,17176650857302713463]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15879356389475821678,5643460802079966270]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8920863043171661139,6394972819860350927]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7444524629517225000,3862632196027588969]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5618285707243958873,10527758992658711681]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15786611459077781418,3427959288485188730]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7447291644365204408,1470667821728193545]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6110035509052048891,1769159197608489149]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2517392378542245850,1007682534799069383]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10841319041269114641,5435836511512932455]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11288057705607810041,2650294536215064940]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3615958118357796166,6340715783279141278]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5192402504599619502,9026648258735454425]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[18157078792379649936,5967302931976128037]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[7273518522570529581,7645160771462661682]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14392049376104722820,4331661258852677409]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","num":18,"id":{"name":"libc","disambiguator":[12211130183356822035,9476985101973045270]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/ffi.rs","num":19,"id":{"name":"miniz_sys","disambiguator":[424789791439439413,506917666875451379]}}],"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":0,"byte_end":8355,"line_start":1,"line_end":242,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":272},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2272,"byte_end":2279,"line_start":66,"line_end":66,"column_start":13,"column_end":20},"alias_span":null,"name":"GzBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":293},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2306,"byte_end":2312,"line_start":67,"line_end":67,"column_start":13,"column_end":19},"alias_span":null,"name":"GzHeader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":502},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2340,"byte_end":2348,"line_start":68,"line_end":68,"column_start":15,"column_end":23},"alias_span":null,"name":"Compress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":504},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2350,"byte_end":2360,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"alias_span":null,"name":"Decompress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":745},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2362,"byte_end":2371,"line_start":68,"line_end":68,"column_start":37,"column_end":46},"alias_span":null,"name":"DataError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":539},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2373,"byte_end":2379,"line_start":68,"line_end":68,"column_start":48,"column_end":54},"alias_span":null,"name":"Status","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":520},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2381,"byte_end":2386,"line_start":68,"line_end":68,"column_start":56,"column_end":61},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":48},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2403,"byte_end":2406,"line_start":69,"line_end":69,"column_start":15,"column_end":18},"alias_span":null,"name":"Crc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2408,"byte_end":2417,"line_start":69,"line_end":69,"column_start":20,"column_end":29},"alias_span":null,"name":"CrcReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":89},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2637,"byte_end":2650,"line_start":83,"line_end":83,"column_start":22,"column_end":35},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":703}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2691,"byte_end":2704,"line_start":84,"line_end":84,"column_start":22,"column_end":35},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":703}},{"kind":"Use","ref_id":{"krate":0,"index":586},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2742,"byte_end":2755,"line_start":85,"line_end":85,"column_start":19,"column_end":32},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":703}},{"kind":"Use","ref_id":{"krate":0,"index":593},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2790,"byte_end":2803,"line_start":86,"line_end":86,"column_start":19,"column_end":32},"alias_span":null,"name":"ZlibDecoder","value":"","parent":{"krate":0,"index":703}},{"kind":"Use","ref_id":{"krate":0,"index":263},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2836,"byte_end":2849,"line_start":87,"line_end":87,"column_start":17,"column_end":30},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":703}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2880,"byte_end":2893,"line_start":88,"line_end":88,"column_start":17,"column_end":30},"alias_span":null,"name":"GzDecoder","value":"","parent":{"krate":0,"index":703}},{"kind":"Use","ref_id":{"krate":0,"index":280},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2924,"byte_end":2942,"line_start":89,"line_end":89,"column_start":17,"column_end":35},"alias_span":null,"name":"MultiGzDecoder","value":"","parent":{"krate":0,"index":703}},{"kind":"Use","ref_id":{"krate":0,"index":86},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":3100,"byte_end":3113,"line_start":95,"line_end":95,"column_start":22,"column_end":35},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":711}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":3154,"byte_end":3167,"line_start":96,"line_end":96,"column_start":22,"column_end":35},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":711}},{"kind":"Use","ref_id":{"krate":0,"index":583},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":3205,"byte_end":3218,"line_start":97,"line_end":97,"column_start":19,"column_end":32},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":711}},{"kind":"Use","ref_id":{"krate":0,"index":600},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":3253,"byte_end":3266,"line_start":98,"line_end":98,"column_start":19,"column_end":32},"alias_span":null,"name":"ZlibDecoder","value":"","parent":{"krate":0,"index":711}},{"kind":"Use","ref_id":{"krate":0,"index":257},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":3299,"byte_end":3312,"line_start":99,"line_end":99,"column_start":17,"column_end":30},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":711}},{"kind":"Use","ref_id":{"krate":0,"index":92},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":3469,"byte_end":3485,"line_start":105,"line_end":105,"column_start":22,"column_end":38},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":717}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":3526,"byte_end":3542,"line_start":106,"line_end":106,"column_start":22,"column_end":38},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":717}},{"kind":"Use","ref_id":{"krate":0,"index":589},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":3580,"byte_end":3596,"line_start":107,"line_end":107,"column_start":19,"column_end":35},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":717}},{"kind":"Use","ref_id":{"krate":0,"index":596},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":3631,"byte_end":3647,"line_start":108,"line_end":108,"column_start":19,"column_end":35},"alias_span":null,"name":"ZlibDecoder","value":"","parent":{"krate":0,"index":717}},{"kind":"Use","ref_id":{"krate":0,"index":266},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":3680,"byte_end":3696,"line_start":109,"line_end":109,"column_start":17,"column_end":33},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":717}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":3727,"byte_end":3743,"line_start":110,"line_end":110,"column_start":17,"column_end":33},"alias_span":null,"name":"GzDecoder","value":"","parent":{"krate":0,"index":717}},{"kind":"Use","ref_id":{"krate":0,"index":288},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":3774,"byte_end":3795,"line_start":111,"line_end":111,"column_start":17,"column_end":38},"alias_span":null,"name":"MultiGzDecoder","value":"","parent":{"krate":0,"index":717}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":0,"byte_end":8355,"line_start":1,"line_end":242,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":43},{"krate":0,"index":77},{"krate":0,"index":207},{"krate":0,"index":237},{"krate":0,"index":437},{"krate":0,"index":491},{"krate":0,"index":574},{"krate":0,"index":703},{"krate":0,"index":711},{"krate":0,"index":717},{"krate":0,"index":725},{"krate":0,"index":750},{"krate":0,"index":765},{"krate":0,"index":763},{"krate":0,"index":728},{"krate":0,"index":735},{"krate":0,"index":741},{"krate":0,"index":743}],"decl_id":null,"docs":" A DEFLATE-based stream compression/decompression library","sig":null,"attributes":[{"value":"/ A DEFLATE-based stream compression/decompression library","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":0,"byte_end":60,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":61,"byte_end":64,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library is meant to supplement/replace the standard distributon's","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":65,"byte_end":139,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ libflate library by providing a streaming encoder/decoder rather than purely","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":140,"byte_end":220,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ an in-memory encoder/decoder.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":221,"byte_end":254,"line_start":5,"line_end":5,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":255,"byte_end":258,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Like with libflate, flate2 is based on [`miniz.c`][1]","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":259,"byte_end":316,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":317,"byte_end":320,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [1]: https://code.google.com/p/miniz/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":321,"byte_end":362,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":363,"byte_end":366,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":367,"byte_end":385,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":386,"byte_end":389,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This crate consists mainly of two modules, `read` and `write`. Each","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":390,"byte_end":461,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ module contains a number of types used to encode and decode various streams","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":462,"byte_end":541,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of data. All types in the `write` module work on instances of `Write`,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":542,"byte_end":616,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ whereas all types in the `read` module work on instances of `Read`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":617,"byte_end":688,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":689,"byte_end":692,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Other various types are provided at the top-level of the crate for","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":693,"byte_end":763,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/ management and dealing with encoders/decoders.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":764,"byte_end":814,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":815,"byte_end":818,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Helper traits","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":819,"byte_end":838,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":839,"byte_end":842,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ There are two helper traits provided: `FlateReader` and `FlateWriter`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":843,"byte_end":917,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ These provide convenience methods for creating a decoder/encoder out of an","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":918,"byte_end":996,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ already existing stream to chain construction.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":997,"byte_end":1047,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1048,"byte_end":1051,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Async I/O","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1052,"byte_end":1067,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1068,"byte_end":1071,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This crate optionally can support async I/O streams with the Tokio stack via","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1072,"byte_end":1152,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ the `tokio` feature of this crate:","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1153,"byte_end":1191,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1192,"byte_end":1195,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1196,"byte_end":1207,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ flate2 = { version = \"0.2\", features = [\"tokio\"] }","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1208,"byte_end":1262,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1263,"byte_end":1270,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1271,"byte_end":1274,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ All methods are internally capable of working with streams that may return","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1275,"byte_end":1353,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ `ErrorKind::WouldBlock` when they're not ready to perform the particular","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1354,"byte_end":1430,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ operation.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1431,"byte_end":1445,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1446,"byte_end":1449,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that care needs to be taken when using these objects, however. The","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1450,"byte_end":1525,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ Tokio runtime, in particular, requires that data is fully flushed before","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1526,"byte_end":1602,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ dropping streams. For compatibility with blocking streams all streams are","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1603,"byte_end":1680,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ flushed/written when they are dropped, and this is not always a suitable","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1681,"byte_end":1757,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ time to perform I/O. If I/O streams are flushed before drop, however, then","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1758,"byte_end":1836,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ these operations will be a noop.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1837,"byte_end":1873,"line_start":45,"line_end":45,"column_start":1,"column_end":37}},{"value":"deny(missing_docs)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1929,"byte_end":1951,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"allow(trivial_numeric_casts)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":1952,"byte_end":1984,"line_start":49,"line_end":49,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":48},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":10883,"byte_end":10886,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"Crc","qualname":"::crc::Crc","value":"Crc {  }","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50}],"decl_id":null,"docs":" The CRC calculated by a CrcReader.\n","sig":null,"attributes":[{"value":"/ The CRC calculated by a CrcReader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":10833,"byte_end":10871,"line_start":9,"line_end":9,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":51},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":11005,"byte_end":11014,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"CrcReader","qualname":"::crc::CrcReader","value":"CrcReader {  }","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"decl_id":null,"docs":" A wrapper around a `std::io::Read` that calculates the CRC.\n","sig":null,"attributes":[{"value":"/ A wrapper around a `std::io::Read` that calculates the CRC.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":10930,"byte_end":10993,"line_start":15,"line_end":15,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":11099,"byte_end":11102,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<Crc>::new","value":"pub fn new() -> Crc","parent":null,"children":[],"decl_id":null,"docs":" Create a new CRC.\n","sig":null,"attributes":[{"value":"/ Create a new CRC.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":11066,"byte_end":11087,"line_start":22,"line_end":22,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":11175,"byte_end":11178,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"sum","qualname":"<Crc>::sum","value":"pub fn sum(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" bla\n","sig":null,"attributes":[{"value":"/ bla","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":11156,"byte_end":11163,"line_start":27,"line_end":27,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":11377,"byte_end":11383,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"amount","qualname":"<Crc>::amount","value":"pub fn amount(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes that have been used to calculate the CRC.\n This value is only accurate if the amount is lower than 2^32.\n","sig":null,"attributes":[{"value":"/ The number of bytes that have been used to calculate the CRC.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":11230,"byte_end":11295,"line_start":32,"line_end":32,"column_start":5,"column_end":70}},{"value":"/ This value is only accurate if the amount is lower than 2^32.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":11300,"byte_end":11365,"line_start":33,"line_end":33,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":11484,"byte_end":11490,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"update","qualname":"<Crc>::update","value":"pub fn update(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Update the CRC with the bytes in `data`.\n","sig":null,"attributes":[{"value":"/ Update the CRC with the bytes in `data`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":11428,"byte_end":11472,"line_start":38,"line_end":38,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":11737,"byte_end":11742,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"reset","qualname":"<Crc>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the CRC.\n","sig":null,"attributes":[{"value":"/ Reset the CRC.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":11707,"byte_end":11725,"line_start":46,"line_end":46,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":11890,"byte_end":11897,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"combine","qualname":"<Crc>::combine","value":"pub fn combine(&mut Self, &Crc)","parent":null,"children":[],"decl_id":null,"docs":" Combine the CRC with the CRC for the subsequent block of bytes.\n","sig":null,"attributes":[{"value":"/ Combine the CRC with the CRC for the subsequent block of bytes.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":11811,"byte_end":11878,"line_start":52,"line_end":52,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":12300,"byte_end":12303,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<CrcReader<R>>::new","value":"pub fn new(R) -> CrcReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new CrcReader.\n","sig":null,"attributes":[{"value":"/ Create a new CrcReader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":12261,"byte_end":12288,"line_start":64,"line_end":64,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":12467,"byte_end":12470,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"crc","qualname":"<CrcReader<R>>::crc","value":"pub fn crc(&Self) -> &Crc","parent":null,"children":[],"decl_id":null,"docs":" Get the Crc for this CrcReader.\n","sig":null,"attributes":[{"value":"/ Get the Crc for this CrcReader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":12420,"byte_end":12455,"line_start":72,"line_end":72,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":12582,"byte_end":12592,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CrcReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get the reader that is wrapped by this CrcReader.\n","sig":null,"attributes":[{"value":"/ Get the reader that is wrapped by this CrcReader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":12517,"byte_end":12570,"line_start":77,"line_end":77,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":12714,"byte_end":12721,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<CrcReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Get the reader that is wrapped by this CrcReader by reference.\n","sig":null,"attributes":[{"value":"/ Get the reader that is wrapped by this CrcReader by reference.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":12636,"byte_end":12702,"line_start":82,"line_end":82,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":12856,"byte_end":12863,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<CrcReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the reader that is wrapped by this CrcReader.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the reader that is wrapped by this CrcReader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":12768,"byte_end":12844,"line_start":87,"line_end":87,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":12970,"byte_end":12975,"line_start":93,"line_end":93,"column_start":12,"column_end":17},"name":"reset","qualname":"<CrcReader<R>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the Crc in this CrcReader.\n","sig":null,"attributes":[{"value":"/ Reset the Crc in this CrcReader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":12922,"byte_end":12958,"line_start":92,"line_end":92,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":86},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14032,"byte_end":14045,"line_start":20,"line_end":20,"column_start":12,"column_end":25},"name":"EncoderWriter","qualname":"::deflate::EncoderWriter","value":"EncoderWriter {  }","parent":null,"children":[{"krate":0,"index":88}],"decl_id":null,"docs":" A DEFLATE encoder, or compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder, or compressor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":13833,"byte_end":13870,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":13871,"byte_end":13874,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This structure implements a `Write` interface and takes a stream of","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":13875,"byte_end":13946,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ uncompressed data, writing the compressed data to the wrapped writer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":13947,"byte_end":14020,"line_start":19,"line_end":19,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":89},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14300,"byte_end":14313,"line_start":28,"line_end":28,"column_start":12,"column_end":25},"name":"EncoderReader","qualname":"::deflate::EncoderReader","value":"EncoderReader {  }","parent":null,"children":[{"krate":0,"index":91}],"decl_id":null,"docs":" A DEFLATE encoder, or compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder, or compressor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14098,"byte_end":14135,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14136,"byte_end":14139,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This structure implements a `Read` interface and will read uncompressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14140,"byte_end":14215,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ data from an underlying stream and emit a stream of compressed data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14216,"byte_end":14288,"line_start":27,"line_end":27,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14576,"byte_end":14592,"line_start":36,"line_end":36,"column_start":12,"column_end":28},"name":"EncoderReaderBuf","qualname":"::deflate::EncoderReaderBuf","value":"EncoderReaderBuf {  }","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"decl_id":null,"docs":" A DEFLATE encoder, or compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder, or compressor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14371,"byte_end":14408,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14409,"byte_end":14412,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This structure implements a `BufRead` interface and will read uncompressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14413,"byte_end":14491,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ data from an underlying stream and emit a stream of compressed data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14492,"byte_end":14564,"line_start":35,"line_end":35,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":96},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14846,"byte_end":14859,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"DecoderReader","qualname":"::deflate::DecoderReader","value":"DecoderReader {  }","parent":null,"children":[{"krate":0,"index":98}],"decl_id":null,"docs":" A DEFLATE decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder, or decompressor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14642,"byte_end":14681,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14682,"byte_end":14685,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This structure implements a `Read` interface and takes a stream of","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14686,"byte_end":14756,"line_start":43,"line_end":43,"column_start":1,"column_end":71}},{"value":"/ compressed data as input, providing the decompressed data when read from.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14757,"byte_end":14834,"line_start":44,"line_end":44,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":99},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":15124,"byte_end":15140,"line_start":53,"line_end":53,"column_start":12,"column_end":28},"name":"DecoderReaderBuf","qualname":"::deflate::DecoderReaderBuf","value":"DecoderReaderBuf {  }","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"decl_id":null,"docs":" A DEFLATE decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder, or decompressor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14917,"byte_end":14956,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14957,"byte_end":14960,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This structure implements a `BufRead` interface and takes a stream of","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":14961,"byte_end":15034,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ compressed data as input, providing the decompressed data when read from.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":15035,"byte_end":15112,"line_start":52,"line_end":52,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":15373,"byte_end":15386,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"DecoderWriter","qualname":"::deflate::DecoderWriter","value":"DecoderWriter {  }","parent":null,"children":[{"krate":0,"index":105}],"decl_id":null,"docs":" A DEFLATE decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder, or decompressor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":15192,"byte_end":15231,"line_start":58,"line_end":58,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":15232,"byte_end":15235,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This structure implements a `Write` and will emit a stream of decompressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":15236,"byte_end":15314,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ data when fed a stream of compressed data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":15315,"byte_end":15361,"line_start":61,"line_end":61,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":15717,"byte_end":15720,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<EncoderWriter<W>>::new","value":"pub fn new(W, ::Compression) -> EncoderWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will write compressed data to the stream\n given at the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will write compressed data to the stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":15479,"byte_end":15551,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ given at the given compression level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":15556,"byte_end":15597,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":15602,"byte_end":15605,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ When this encoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":15610,"byte_end":15685,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":15690,"byte_end":15705,"line_start":71,"line_end":71,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":15947,"byte_end":15954,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<EncoderWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":15885,"byte_end":15935,"line_start":78,"line_end":78,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":16231,"byte_end":16238,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<EncoderWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":16010,"byte_end":16068,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":16073,"byte_end":16076,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":16081,"byte_end":16157,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":16162,"byte_end":16219,"line_start":86,"line_end":86,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":16943,"byte_end":16948,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"reset","qualname":"<EncoderWriter<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the output","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":16302,"byte_end":16372,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":16377,"byte_end":16400,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":16405,"byte_end":16408,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This function will finish encoding the current stream into the current","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":16413,"byte_end":16487,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ output stream before swapping out the two output streams. If the stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":16492,"byte_end":16567,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ cannot be finished an error is returned.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":16572,"byte_end":16616,"line_start":96,"line_end":96,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":16621,"byte_end":16624,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ After the current stream has been finished, this will reset the internal","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":16629,"byte_end":16705,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/ state of this encoder and replace the output stream with the one","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":16710,"byte_end":16778,"line_start":99,"line_end":99,"column_start":5,"column_end":73}},{"value":"/ provided, returning the previous output stream. Future data written to","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":16783,"byte_end":16857,"line_start":100,"line_end":100,"column_start":5,"column_end":79}},{"value":"/ this encoder will be the compressed into the stream `w` provided.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":16862,"byte_end":16931,"line_start":101,"line_end":101,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17540,"byte_end":17550,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<EncoderWriter<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17098,"byte_end":17173,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17178,"byte_end":17181,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17186,"byte_end":17259,"line_start":110,"line_end":110,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17264,"byte_end":17340,"line_start":111,"line_end":111,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17345,"byte_end":17388,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17393,"byte_end":17396,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17401,"byte_end":17413,"line_start":114,"line_end":114,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17418,"byte_end":17421,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17426,"byte_end":17500,"line_start":116,"line_end":116,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17505,"byte_end":17528,"line_start":117,"line_end":117,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":18212,"byte_end":18218,"line_start":132,"line_end":132,"column_start":12,"column_end":18},"name":"finish","qualname":"<EncoderWriter<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17621,"byte_end":17675,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17680,"byte_end":17683,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream, close off the compressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17688,"byte_end":17760,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ stream and, if successful, return the contained writer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17765,"byte_end":17824,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17829,"byte_end":17832,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17837,"byte_end":17913,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17918,"byte_end":17993,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":17998,"byte_end":18068,"line_start":129,"line_end":129,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":18073,"byte_end":18146,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":18151,"byte_end":18200,"line_start":131,"line_end":131,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":18735,"byte_end":18747,"line_start":144,"line_end":144,"column_start":12,"column_end":24},"name":"flush_finish","qualname":"<EncoderWriter<W>>::flush_finish","value":"pub fn flush_finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":18330,"byte_end":18384,"line_start":137,"line_end":137,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":18389,"byte_end":18392,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":18397,"byte_end":18473,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":18478,"byte_end":18512,"line_start":140,"line_end":140,"column_start":5,"column_end":39}},{"value":"/ The compressed stream will not closed but only flushed. This","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":18517,"byte_end":18581,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/ means that obtained byte array can by extended by another deflated","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":18586,"byte_end":18656,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ stream. To close the stream add the two bytes 0x3 and 0x0.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":18661,"byte_end":18723,"line_start":143,"line_end":143,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":19078,"byte_end":19086,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"total_in","qualname":"<EncoderWriter<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been written to this compresor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been written to this compresor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":18858,"byte_end":18931,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":18936,"byte_end":18939,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes written to this object may be accounted for,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":18944,"byte_end":19016,"line_start":151,"line_end":151,"column_start":5,"column_end":77}},{"value":"/ there may still be some active buffering.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":19021,"byte_end":19066,"line_start":152,"line_end":152,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":19329,"byte_end":19338,"line_start":161,"line_end":161,"column_start":12,"column_end":21},"name":"total_out","qualname":"<EncoderWriter<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":19149,"byte_end":19214,"line_start":157,"line_end":157,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":19219,"byte_end":19222,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been written yet, some may still be","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":19227,"byte_end":19299,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/ buffered.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":19304,"byte_end":19317,"line_start":160,"line_end":160,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":20263,"byte_end":20266,"line_start":197,"line_end":197,"column_start":12,"column_end":15},"name":"new","qualname":"<EncoderReader<R>>::new","value":"pub fn new(R, ::Compression) -> EncoderReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":20130,"byte_end":20204,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":20209,"byte_end":20251,"line_start":196,"line_end":196,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":20959,"byte_end":20964,"line_start":213,"line_end":213,"column_start":12,"column_end":17},"name":"reset","qualname":"<EncoderReader<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":20430,"byte_end":20499,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":20504,"byte_end":20527,"line_start":204,"line_end":204,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":20532,"byte_end":20535,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":20540,"byte_end":20615,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":20620,"byte_end":20692,"line_start":207,"line_end":207,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":20697,"byte_end":20766,"line_start":208,"line_end":208,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":20771,"byte_end":20797,"line_start":209,"line_end":209,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":20802,"byte_end":20805,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":20810,"byte_end":20882,"line_start":211,"line_end":211,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":20887,"byte_end":20947,"line_start":212,"line_end":212,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":21126,"byte_end":21133,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<EncoderReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":21065,"byte_end":21114,"line_start":218,"line_end":218,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":21399,"byte_end":21406,"line_start":227,"line_end":227,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<EncoderReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":21199,"byte_end":21256,"line_start":223,"line_end":223,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":21261,"byte_end":21264,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":21269,"byte_end":21341,"line_start":225,"line_end":225,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":21346,"byte_end":21387,"line_start":226,"line_end":226,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":21747,"byte_end":21757,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<EncoderReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":21480,"byte_end":21539,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":21544,"byte_end":21547,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":21552,"byte_end":21627,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":21632,"byte_end":21705,"line_start":234,"line_end":234,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":21710,"byte_end":21735,"line_start":235,"line_end":235,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":22056,"byte_end":22064,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"total_in","qualname":"<EncoderReader<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":21827,"byte_end":21900,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":21905,"byte_end":21908,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":21913,"byte_end":21989,"line_start":242,"line_end":242,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":21994,"byte_end":22044,"line_start":243,"line_end":243,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":22304,"byte_end":22313,"line_start":252,"line_end":252,"column_start":12,"column_end":21},"name":"total_out","qualname":"<EncoderReader<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":22127,"byte_end":22192,"line_start":248,"line_end":248,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":22197,"byte_end":22200,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":22205,"byte_end":22274,"line_start":250,"line_end":250,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":22279,"byte_end":22292,"line_start":251,"line_end":251,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":23196,"byte_end":23199,"line_start":287,"line_end":287,"column_start":12,"column_end":15},"name":"new","qualname":"<EncoderReaderBuf<R>>::new","value":"pub fn new(R, ::Compression) -> EncoderReaderBuf<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":23063,"byte_end":23137,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":23142,"byte_end":23184,"line_start":286,"line_end":286,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":23747,"byte_end":23752,"line_start":301,"line_end":301,"column_start":12,"column_end":17},"name":"reset","qualname":"<EncoderReaderBuf<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":23368,"byte_end":23437,"line_start":294,"line_end":294,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":23442,"byte_end":23465,"line_start":295,"line_end":295,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":23470,"byte_end":23473,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":23478,"byte_end":23553,"line_start":297,"line_end":297,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":23558,"byte_end":23630,"line_start":298,"line_end":298,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":23635,"byte_end":23704,"line_start":299,"line_end":299,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":23709,"byte_end":23735,"line_start":300,"line_end":300,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":23915,"byte_end":23922,"line_start":307,"line_end":307,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<EncoderReaderBuf<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":23854,"byte_end":23903,"line_start":306,"line_end":306,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":24167,"byte_end":24174,"line_start":315,"line_end":315,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<EncoderReaderBuf<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":23967,"byte_end":24024,"line_start":311,"line_end":311,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":24029,"byte_end":24032,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":24037,"byte_end":24109,"line_start":313,"line_end":313,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":24114,"byte_end":24155,"line_start":314,"line_end":314,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":24302,"byte_end":24312,"line_start":320,"line_end":320,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<EncoderReaderBuf<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":24231,"byte_end":24290,"line_start":319,"line_end":319,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":24583,"byte_end":24591,"line_start":328,"line_end":328,"column_start":12,"column_end":20},"name":"total_in","qualname":"<EncoderReaderBuf<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":24354,"byte_end":24427,"line_start":324,"line_end":324,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":24432,"byte_end":24435,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":24440,"byte_end":24516,"line_start":326,"line_end":326,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":24521,"byte_end":24571,"line_start":327,"line_end":327,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":24825,"byte_end":24834,"line_start":336,"line_end":336,"column_start":12,"column_end":21},"name":"total_out","qualname":"<EncoderReaderBuf<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":24648,"byte_end":24713,"line_start":332,"line_end":332,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":24718,"byte_end":24721,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":24726,"byte_end":24795,"line_start":334,"line_end":334,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":24800,"byte_end":24813,"line_start":335,"line_end":335,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":25723,"byte_end":25726,"line_start":371,"line_end":371,"column_start":12,"column_end":15},"name":"new","qualname":"<DecoderReader<R>>::new","value":"pub fn new(R) -> DecoderReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":25623,"byte_end":25695,"line_start":369,"line_end":369,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":25700,"byte_end":25711,"line_start":370,"line_end":370,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":26042,"byte_end":26054,"line_start":379,"line_end":379,"column_start":12,"column_end":24},"name":"new_with_buf","qualname":"<DecoderReader<R>>::new_with_buf","value":"pub fn new_with_buf(R, Vec<u8>) -> DecoderReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Same as `new`, but the intermediate buffer for data is specified.","sig":null,"attributes":[{"value":"/ Same as `new`, but the intermediate buffer for data is specified.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":25825,"byte_end":25894,"line_start":375,"line_end":375,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":25899,"byte_end":25902,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Note that the capacity of the intermediate buffer is never increased,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":25907,"byte_end":25980,"line_start":377,"line_end":377,"column_start":5,"column_end":78}},{"value":"/ and it is recommended for it to be large.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":25985,"byte_end":26030,"line_start":378,"line_end":378,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":26734,"byte_end":26739,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"reset","qualname":"<DecoderReader<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":26212,"byte_end":26281,"line_start":385,"line_end":385,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":26286,"byte_end":26309,"line_start":386,"line_end":386,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":26314,"byte_end":26317,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":26322,"byte_end":26392,"line_start":388,"line_end":388,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":26397,"byte_end":26465,"line_start":389,"line_end":389,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":26470,"byte_end":26541,"line_start":390,"line_end":390,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":26546,"byte_end":26572,"line_start":391,"line_end":391,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":26577,"byte_end":26580,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":26585,"byte_end":26657,"line_start":393,"line_end":393,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":26662,"byte_end":26722,"line_start":394,"line_end":394,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":26918,"byte_end":26925,"line_start":401,"line_end":401,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DecoderReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":26857,"byte_end":26906,"line_start":400,"line_end":400,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":27191,"byte_end":27198,"line_start":409,"line_end":409,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DecoderReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":26991,"byte_end":27048,"line_start":405,"line_end":405,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":27053,"byte_end":27056,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":27061,"byte_end":27133,"line_start":407,"line_end":407,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":27138,"byte_end":27179,"line_start":408,"line_end":408,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":27539,"byte_end":27549,"line_start":418,"line_end":418,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DecoderReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":27272,"byte_end":27331,"line_start":413,"line_end":413,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":27336,"byte_end":27339,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":27344,"byte_end":27419,"line_start":415,"line_end":415,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":27424,"byte_end":27497,"line_start":416,"line_end":416,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":27502,"byte_end":27527,"line_start":417,"line_end":417,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":27846,"byte_end":27854,"line_start":426,"line_end":426,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DecoderReader<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":27619,"byte_end":27686,"line_start":422,"line_end":422,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":27691,"byte_end":27694,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":27699,"byte_end":27767,"line_start":424,"line_end":424,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":27772,"byte_end":27834,"line_start":425,"line_end":425,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":27991,"byte_end":28000,"line_start":431,"line_end":431,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DecoderReader<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":27912,"byte_end":27979,"line_start":430,"line_end":430,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":28847,"byte_end":28850,"line_start":466,"line_end":466,"column_start":12,"column_end":15},"name":"new","qualname":"<DecoderReaderBuf<R>>::new","value":"pub fn new(R) -> DecoderReaderBuf<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":28747,"byte_end":28819,"line_start":464,"line_end":464,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":28824,"byte_end":28835,"line_start":465,"line_end":465,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":29364,"byte_end":29369,"line_start":480,"line_end":480,"column_start":12,"column_end":17},"name":"reset","qualname":"<DecoderReaderBuf<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":28992,"byte_end":29061,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":29066,"byte_end":29089,"line_start":474,"line_end":474,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":29094,"byte_end":29097,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":29102,"byte_end":29172,"line_start":476,"line_end":476,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":29177,"byte_end":29245,"line_start":477,"line_end":477,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":29250,"byte_end":29321,"line_start":478,"line_end":478,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":29326,"byte_end":29352,"line_start":479,"line_end":479,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":29666,"byte_end":29676,"line_start":489,"line_end":489,"column_start":12,"column_end":22},"name":"reset_data","qualname":"<DecoderReaderBuf<R>>::reset_data","value":"pub fn reset_data(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder's data","sig":null,"attributes":[{"value":"/ Resets the state of this decoder's data","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":29488,"byte_end":29531,"line_start":485,"line_end":485,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":29536,"byte_end":29539,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder. It will continue","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":29544,"byte_end":29616,"line_start":487,"line_end":487,"column_start":5,"column_end":77}},{"value":"/ reading from the same stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":29621,"byte_end":29654,"line_start":488,"line_end":488,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":29806,"byte_end":29813,"line_start":494,"line_end":494,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DecoderReaderBuf<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":29745,"byte_end":29794,"line_start":493,"line_end":493,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":30058,"byte_end":30065,"line_start":502,"line_end":502,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DecoderReaderBuf<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":29858,"byte_end":29915,"line_start":498,"line_end":498,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":29920,"byte_end":29923,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":29928,"byte_end":30000,"line_start":500,"line_end":500,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":30005,"byte_end":30046,"line_start":501,"line_end":501,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":30193,"byte_end":30203,"line_start":507,"line_end":507,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DecoderReaderBuf<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":30122,"byte_end":30181,"line_start":506,"line_end":506,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":30472,"byte_end":30480,"line_start":515,"line_end":515,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DecoderReaderBuf<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":30245,"byte_end":30312,"line_start":511,"line_end":511,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":30317,"byte_end":30320,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":30325,"byte_end":30393,"line_start":513,"line_end":513,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":30398,"byte_end":30460,"line_start":514,"line_end":514,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":30616,"byte_end":30625,"line_start":520,"line_end":520,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DecoderReaderBuf<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":30537,"byte_end":30604,"line_start":519,"line_end":519,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":31612,"byte_end":31615,"line_start":557,"line_end":557,"column_start":12,"column_end":15},"name":"new","qualname":"<DecoderWriter<W>>::new","value":"pub fn new(W) -> DecoderWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will write uncompressed data to the stream.","sig":null,"attributes":[{"value":"/ Creates a new decoder which will write uncompressed data to the stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":31417,"byte_end":31492,"line_start":553,"line_end":553,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":31497,"byte_end":31500,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ When this encoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":31505,"byte_end":31580,"line_start":555,"line_end":555,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":31585,"byte_end":31600,"line_start":556,"line_end":556,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":31815,"byte_end":31822,"line_start":564,"line_end":564,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DecoderWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":31753,"byte_end":31803,"line_start":563,"line_end":563,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":32099,"byte_end":32106,"line_start":572,"line_end":572,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DecoderWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":31878,"byte_end":31936,"line_start":568,"line_end":568,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":31941,"byte_end":31944,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":31949,"byte_end":32025,"line_start":570,"line_end":570,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":32030,"byte_end":32087,"line_start":571,"line_end":571,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":32768,"byte_end":32773,"line_start":587,"line_end":587,"column_start":12,"column_end":17},"name":"reset","qualname":"<DecoderWriter<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the output","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":32170,"byte_end":32240,"line_start":576,"line_end":576,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":32245,"byte_end":32268,"line_start":577,"line_end":577,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":32273,"byte_end":32276,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ This function will finish encoding the current stream into the current","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":32281,"byte_end":32355,"line_start":579,"line_end":579,"column_start":5,"column_end":79}},{"value":"/ output stream before swapping out the two output streams. If the stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":32360,"byte_end":32435,"line_start":580,"line_end":580,"column_start":5,"column_end":80}},{"value":"/ cannot be finished an error is returned.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":32440,"byte_end":32484,"line_start":581,"line_end":581,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":32489,"byte_end":32492,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ This will then reset the internal state of this decoder and replace the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":32497,"byte_end":32572,"line_start":583,"line_end":583,"column_start":5,"column_end":80}},{"value":"/ output stream with the one provided, returning the previous output","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":32577,"byte_end":32647,"line_start":584,"line_end":584,"column_start":5,"column_end":75}},{"value":"/ stream. Future data written to this decoder will be decompressed into","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":32652,"byte_end":32725,"line_start":585,"line_end":585,"column_start":5,"column_end":78}},{"value":"/ the output stream `w`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":32730,"byte_end":32756,"line_start":586,"line_end":586,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33382,"byte_end":33392,"line_start":603,"line_end":603,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<DecoderWriter<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":32940,"byte_end":33015,"line_start":593,"line_end":593,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33020,"byte_end":33023,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33028,"byte_end":33101,"line_start":595,"line_end":595,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33106,"byte_end":33182,"line_start":596,"line_end":596,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33187,"byte_end":33230,"line_start":597,"line_end":597,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33235,"byte_end":33238,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33243,"byte_end":33255,"line_start":599,"line_end":599,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33260,"byte_end":33263,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33268,"byte_end":33342,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33347,"byte_end":33370,"line_start":602,"line_end":602,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":34033,"byte_end":34039,"line_start":617,"line_end":617,"column_start":12,"column_end":18},"name":"finish","qualname":"<DecoderWriter<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33463,"byte_end":33517,"line_start":607,"line_end":607,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33522,"byte_end":33525,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33530,"byte_end":33606,"line_start":609,"line_end":609,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33611,"byte_end":33645,"line_start":610,"line_end":610,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33650,"byte_end":33653,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33658,"byte_end":33734,"line_start":612,"line_end":612,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33739,"byte_end":33814,"line_start":613,"line_end":613,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33819,"byte_end":33889,"line_start":614,"line_end":614,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33894,"byte_end":33967,"line_start":615,"line_end":615,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":33972,"byte_end":34021,"line_start":616,"line_end":616,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":34406,"byte_end":34414,"line_start":627,"line_end":627,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DecoderWriter<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed for\n decompression.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed for","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":34151,"byte_end":34221,"line_start":622,"line_end":622,"column_start":5,"column_end":75}},{"value":"/ decompression.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":34226,"byte_end":34244,"line_start":623,"line_end":623,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":34249,"byte_end":34252,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than the number of bytes","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":34257,"byte_end":34323,"line_start":625,"line_end":625,"column_start":5,"column_end":71}},{"value":"/ successfully written to this stream due to internal buffering.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":34328,"byte_end":34394,"line_start":626,"line_end":626,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":34584,"byte_end":34593,"line_start":633,"line_end":633,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DecoderWriter<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has written to its\n output stream.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has written to its","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":34477,"byte_end":34549,"line_start":631,"line_end":631,"column_start":5,"column_end":77}},{"value":"/ output stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":34554,"byte_end":34572,"line_start":632,"line_end":632,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":257},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":48717,"byte_end":48730,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"EncoderWriter","qualname":"::gz::EncoderWriter","value":"EncoderWriter {  }","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" A gzip streaming encoder","sig":null,"attributes":[{"value":"/ A gzip streaming encoder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":48561,"byte_end":48589,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":48590,"byte_end":48593,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a `Write` interface that will emit compressed data","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":48594,"byte_end":48671,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ to the underlying writer `W`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":48672,"byte_end":48705,"line_start":31,"line_end":31,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":263},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":49063,"byte_end":49076,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"EncoderReader","qualname":"::gz::EncoderReader","value":"EncoderReader {  }","parent":null,"children":[{"krate":0,"index":265}],"decl_id":null,"docs":" A gzip streaming encoder","sig":null,"attributes":[{"value":"/ A gzip streaming encoder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":48848,"byte_end":48876,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":48877,"byte_end":48880,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a `Read` interface that will read uncompressed data","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":48881,"byte_end":48959,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ from the underlying reader and expose the compressed version as a `Read`","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":48960,"byte_end":49036,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ interface.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":49037,"byte_end":49051,"line_start":43,"line_end":43,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":266},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":49349,"byte_end":49365,"line_start":53,"line_end":53,"column_start":12,"column_end":28},"name":"EncoderReaderBuf","qualname":"::gz::EncoderReaderBuf","value":"EncoderReaderBuf {  }","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271}],"decl_id":null,"docs":" A gzip streaming encoder","sig":null,"attributes":[{"value":"/ A gzip streaming encoder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":49134,"byte_end":49162,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":49163,"byte_end":49166,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a `Read` interface that will read uncompressed data","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":49167,"byte_end":49245,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ from the underlying reader and expose the compressed version as a `Read`","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":49246,"byte_end":49322,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ interface.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":49323,"byte_end":49337,"line_start":52,"line_end":52,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":272},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":49635,"byte_end":49642,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"Builder","qualname":"::gz::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276}],"decl_id":null,"docs":" A builder structure to create a new gzip Encoder.","sig":null,"attributes":[{"value":"/ A builder structure to create a new gzip Encoder.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":49487,"byte_end":49540,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":49541,"byte_end":49544,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This structure controls header configuration options such as the filename.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":49545,"byte_end":49623,"line_start":62,"line_end":62,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":277},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":49936,"byte_end":49949,"line_start":74,"line_end":74,"column_start":12,"column_end":25},"name":"DecoderReader","qualname":"::gz::DecoderReader","value":"DecoderReader {  }","parent":null,"children":[{"krate":0,"index":279}],"decl_id":null,"docs":" A gzip streaming decoder","sig":null,"attributes":[{"value":"/ A gzip streaming decoder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":49753,"byte_end":49781,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":49782,"byte_end":49785,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a `Read` interface that will consume compressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":49786,"byte_end":49860,"line_start":72,"line_end":72,"column_start":1,"column_end":75}},{"value":"/ data from the underlying reader and emit uncompressed data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":49861,"byte_end":49924,"line_start":73,"line_end":73,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":280},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":50694,"byte_end":50712,"line_start":89,"line_end":89,"column_start":12,"column_end":30},"name":"MultiDecoderReader","qualname":"::gz::MultiDecoderReader","value":"MultiDecoderReader {  }","parent":null,"children":[{"krate":0,"index":282}],"decl_id":null,"docs":" A gzip streaming decoder that decodes all members of a multistream","sig":null,"attributes":[{"value":"/ A gzip streaming decoder that decodes all members of a multistream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":50007,"byte_end":50077,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":50078,"byte_end":50081,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ A gzip member consists of a header, compressed data and a trailer. The [gzip","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":50082,"byte_end":50162,"line_start":80,"line_end":80,"column_start":1,"column_end":81}},{"value":"/ specification](https://tools.ietf.org/html/rfc1952), however, allows multiple","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":50163,"byte_end":50244,"line_start":81,"line_end":81,"column_start":1,"column_end":82}},{"value":"/ gzip members to be joined in a single stream.  `MultiDecoderReader` will","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":50245,"byte_end":50321,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/ decode all consecutive members while `DecoderReader` will only decompress the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":50322,"byte_end":50403,"line_start":83,"line_end":83,"column_start":1,"column_end":82}},{"value":"/ first gzip member. The multistream format is commonly used in bioinformatics,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":50404,"byte_end":50485,"line_start":84,"line_end":84,"column_start":1,"column_end":82}},{"value":"/ for example when using the BGZF compressed data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":50486,"byte_end":50538,"line_start":85,"line_end":85,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":50539,"byte_end":50542,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a `Read` interface that will consume all gzip members","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":50543,"byte_end":50623,"line_start":87,"line_end":87,"column_start":1,"column_end":81}},{"value":"/ from the underlying reader and emit uncompressed data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":50624,"byte_end":50682,"line_start":88,"line_end":88,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":283},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":50958,"byte_end":50974,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"DecoderReaderBuf","qualname":"::gz::DecoderReaderBuf","value":"DecoderReaderBuf {  }","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287}],"decl_id":null,"docs":" A gzip streaming decoder","sig":null,"attributes":[{"value":"/ A gzip streaming decoder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":50775,"byte_end":50803,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":50804,"byte_end":50807,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a `Read` interface that will consume compressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":50808,"byte_end":50882,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ data from the underlying reader and emit uncompressed data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":50883,"byte_end":50946,"line_start":96,"line_end":96,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":288},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":51776,"byte_end":51797,"line_start":114,"line_end":114,"column_start":12,"column_end":33},"name":"MultiDecoderReaderBuf","qualname":"::gz::MultiDecoderReaderBuf","value":"MultiDecoderReaderBuf {  }","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292}],"decl_id":null,"docs":" A gzip streaming decoder that decodes all members of a multistream","sig":null,"attributes":[{"value":"/ A gzip streaming decoder that decodes all members of a multistream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":51084,"byte_end":51154,"line_start":103,"line_end":103,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":51155,"byte_end":51158,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ A gzip member consists of a header, compressed data and a trailer. The [gzip","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":51159,"byte_end":51239,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/ specification](https://tools.ietf.org/html/rfc1952), however, allows multiple","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":51240,"byte_end":51321,"line_start":106,"line_end":106,"column_start":1,"column_end":82}},{"value":"/ gzip members to be joined in a single stream. `MultiDecoderReaderBuf` will","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":51322,"byte_end":51400,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ decode all consecutive members while `DecoderReaderBuf` will only decompress","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":51401,"byte_end":51481,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ the first gzip member. The multistream format is commonly used in","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":51482,"byte_end":51551,"line_start":109,"line_end":109,"column_start":1,"column_end":70}},{"value":"/ bioinformatics, for example when using the BGZF compressed data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":51552,"byte_end":51620,"line_start":110,"line_end":110,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":51621,"byte_end":51624,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a `Read` interface that will consume all gzip members","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":51625,"byte_end":51705,"line_start":112,"line_end":112,"column_start":1,"column_end":81}},{"value":"/ from the underlying reader and emit uncompressed data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":51706,"byte_end":51764,"line_start":113,"line_end":113,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":293},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":52068,"byte_end":52074,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"Header","qualname":"::gz::Header","value":"Header {  }","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297}],"decl_id":null,"docs":" A structure representing the header of a gzip stream.","sig":null,"attributes":[{"value":"/ A structure representing the header of a gzip stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":51907,"byte_end":51964,"line_start":120,"line_end":120,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":51965,"byte_end":51968,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ The header can contain metadata about the file that was compressed, if","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":51969,"byte_end":52043,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ present.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":52044,"byte_end":52056,"line_start":123,"line_end":123,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":52273,"byte_end":52276,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Create a new blank builder with no header by default.\n","sig":null,"attributes":[{"value":"/ Create a new blank builder with no header by default.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":52204,"byte_end":52261,"line_start":132,"line_end":132,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":52496,"byte_end":52501,"line_start":143,"line_end":143,"column_start":12,"column_end":17},"name":"mtime","qualname":"<Builder>::mtime","value":"pub fn mtime(Self, u32) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `mtime` field in the gzip header.\n","sig":null,"attributes":[{"value":"/ Configure the `mtime` field in the gzip header.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":52433,"byte_end":52484,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":52652,"byte_end":52657,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"extra","qualname":"<Builder>::extra","value":"pub fn extra(Self, Vec<u8>) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `extra` field in the gzip header.\n","sig":null,"attributes":[{"value":"/ Configure the `extra` field in the gzip header.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":52589,"byte_end":52640,"line_start":148,"line_end":148,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":52821,"byte_end":52829,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"filename","qualname":"<Builder>::filename","value":"pub fn filename(Self, &[u8]) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `filename` field in the gzip header.\n","sig":null,"attributes":[{"value":"/ Configure the `filename` field in the gzip header.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":52755,"byte_end":52809,"line_start":154,"line_end":154,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":53022,"byte_end":53029,"line_start":161,"line_end":161,"column_start":12,"column_end":19},"name":"comment","qualname":"<Builder>::comment","value":"pub fn comment(Self, &[u8]) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `comment` field in the gzip header.\n","sig":null,"attributes":[{"value":"/ Configure the `comment` field in the gzip header.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":52957,"byte_end":53010,"line_start":160,"line_end":160,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":53369,"byte_end":53374,"line_start":170,"line_end":170,"column_start":12,"column_end":17},"name":"write","qualname":"<Builder>::write","value":"pub fn write<W: Write>(Self, W, Compression) -> EncoderWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Consume this builder, creating a writer encoder in the process.","sig":null,"attributes":[{"value":"/ Consume this builder, creating a writer encoder in the process.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":53154,"byte_end":53221,"line_start":166,"line_end":166,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":53226,"byte_end":53229,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The data written to the returned encoder will be compressed and then","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":53234,"byte_end":53306,"line_start":168,"line_end":168,"column_start":5,"column_end":77}},{"value":"/ written out to the supplied parameter `w`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":53311,"byte_end":53357,"line_start":169,"line_end":169,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":53865,"byte_end":53869,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"read","qualname":"<Builder>::read","value":"pub fn read<R: Read>(Self, R, Compression) -> EncoderReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Consume this builder, creating a reader encoder in the process.","sig":null,"attributes":[{"value":"/ Consume this builder, creating a reader encoder in the process.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":53655,"byte_end":53722,"line_start":179,"line_end":179,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":53727,"byte_end":53730,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Data read from the returned encoder will be the compressed version of","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":53735,"byte_end":53808,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/ the data read from the given reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":53813,"byte_end":53853,"line_start":182,"line_end":182,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":54244,"byte_end":54252,"line_start":193,"line_end":193,"column_start":12,"column_end":20},"name":"buf_read","qualname":"<Builder>::buf_read","value":"pub fn buf_read<R>(Self, R, Compression) -> EncoderReaderBuf<R> where\nR: BufRead","parent":null,"children":[],"decl_id":null,"docs":" Consume this builder, creating a reader encoder in the process.","sig":null,"attributes":[{"value":"/ Consume this builder, creating a reader encoder in the process.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":54034,"byte_end":54101,"line_start":189,"line_end":189,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":54106,"byte_end":54109,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Data read from the returned encoder will be the compressed version of","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":54114,"byte_end":54187,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/ the data read from the given reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":54192,"byte_end":54232,"line_start":192,"line_end":192,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56404,"byte_end":56407,"line_start":263,"line_end":263,"column_start":12,"column_end":15},"name":"new","qualname":"<EncoderWriter<W>>::new","value":"pub fn new(W, Compression) -> EncoderWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will use the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will use the given compression level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56065,"byte_end":56134,"line_start":256,"line_end":256,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56139,"byte_end":56142,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The encoder is not configured specially for the emitted header. For","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56147,"byte_end":56218,"line_start":258,"line_end":258,"column_start":5,"column_end":76}},{"value":"/ header configuration, see the `Builder` type.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56223,"byte_end":56272,"line_start":259,"line_end":259,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56277,"byte_end":56280,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ The data written to the returned encoder will be compressed and then","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56285,"byte_end":56357,"line_start":261,"line_end":261,"column_start":5,"column_end":77}},{"value":"/ written to the stream `w`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56362,"byte_end":56392,"line_start":262,"line_end":262,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56568,"byte_end":56575,"line_start":268,"line_end":268,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<EncoderWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56506,"byte_end":56556,"line_start":267,"line_end":267,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56832,"byte_end":56839,"line_start":276,"line_end":276,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<EncoderWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56631,"byte_end":56689,"line_start":272,"line_end":272,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56694,"byte_end":56697,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the writer may result in surprising results if","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56702,"byte_end":56774,"line_start":274,"line_end":274,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56779,"byte_end":56820,"line_start":275,"line_end":275,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":57345,"byte_end":57355,"line_start":290,"line_end":290,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<EncoderWriter<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56903,"byte_end":56978,"line_start":280,"line_end":280,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56983,"byte_end":56986,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56991,"byte_end":57064,"line_start":282,"line_end":282,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":57069,"byte_end":57145,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":57150,"byte_end":57193,"line_start":284,"line_end":284,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":57198,"byte_end":57201,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":57206,"byte_end":57218,"line_start":286,"line_end":286,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":57223,"byte_end":57226,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":57231,"byte_end":57305,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":57310,"byte_end":57333,"line_start":289,"line_end":289,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":58592,"byte_end":58598,"line_start":319,"line_end":319,"column_start":12,"column_end":18},"name":"finish","qualname":"<EncoderWriter<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Finish encoding this stream, returning the underlying writer once the\n encoding is done.","sig":null,"attributes":[{"value":"/ Finish encoding this stream, returning the underlying writer once the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":58105,"byte_end":58178,"line_start":311,"line_end":311,"column_start":5,"column_end":78}},{"value":"/ encoding is done.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":58183,"byte_end":58204,"line_start":312,"line_end":312,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":58209,"byte_end":58212,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":58217,"byte_end":58293,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":58298,"byte_end":58373,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":58378,"byte_end":58448,"line_start":316,"line_end":316,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":58453,"byte_end":58526,"line_start":317,"line_end":317,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":58531,"byte_end":58580,"line_start":318,"line_end":318,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":60343,"byte_end":60346,"line_start":382,"line_end":382,"column_start":12,"column_end":15},"name":"new","qualname":"<EncoderReader<R>>::new","value":"pub fn new(R, Compression) -> EncoderReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will use the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will use the given compression level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":60004,"byte_end":60073,"line_start":375,"line_end":375,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":60078,"byte_end":60081,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ The encoder is not configured specially for the emitted header. For","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":60086,"byte_end":60157,"line_start":377,"line_end":377,"column_start":5,"column_end":76}},{"value":"/ header configuration, see the `Builder` type.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":60162,"byte_end":60211,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":60216,"byte_end":60219,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ The data read from the stream `r` will be compressed and available","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":60224,"byte_end":60294,"line_start":380,"line_end":380,"column_start":5,"column_end":75}},{"value":"/ through the returned reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":60299,"byte_end":60331,"line_start":381,"line_end":381,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":60506,"byte_end":60513,"line_start":387,"line_end":387,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<EncoderReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":60444,"byte_end":60494,"line_start":386,"line_end":386,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":60780,"byte_end":60787,"line_start":395,"line_end":395,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<EncoderReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":60579,"byte_end":60637,"line_start":391,"line_end":391,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":60642,"byte_end":60645,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the reader may result in surprising results if","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":60650,"byte_end":60722,"line_start":393,"line_end":393,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":60727,"byte_end":60768,"line_start":394,"line_end":394,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":60930,"byte_end":60940,"line_start":400,"line_end":400,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<EncoderReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying stream, consuming this encoder\n","sig":null,"attributes":[{"value":"/ Returns the underlying stream, consuming this encoder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":60861,"byte_end":60918,"line_start":399,"line_end":399,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":62034,"byte_end":62037,"line_start":438,"line_end":438,"column_start":12,"column_end":15},"name":"new","qualname":"<EncoderReaderBuf<R>>::new","value":"pub fn new(R, Compression) -> EncoderReaderBuf<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will use the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will use the given compression level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":61695,"byte_end":61764,"line_start":431,"line_end":431,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":61769,"byte_end":61772,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ The encoder is not configured specially for the emitted header. For","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":61777,"byte_end":61848,"line_start":433,"line_end":433,"column_start":5,"column_end":76}},{"value":"/ header configuration, see the `Builder` type.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":61853,"byte_end":61902,"line_start":434,"line_end":434,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":61907,"byte_end":61910,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ The data read from the stream `r` will be compressed and available","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":61915,"byte_end":61985,"line_start":436,"line_end":436,"column_start":5,"column_end":75}},{"value":"/ through the returned reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":61990,"byte_end":62022,"line_start":437,"line_end":437,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":62204,"byte_end":62211,"line_start":443,"line_end":443,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<EncoderReaderBuf<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":62142,"byte_end":62192,"line_start":442,"line_end":442,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":62478,"byte_end":62485,"line_start":451,"line_end":451,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<EncoderReaderBuf<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":62277,"byte_end":62335,"line_start":447,"line_end":447,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":62340,"byte_end":62343,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the reader may result in surprising results if","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":62348,"byte_end":62420,"line_start":449,"line_end":449,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":62425,"byte_end":62466,"line_start":450,"line_end":450,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":62628,"byte_end":62638,"line_start":456,"line_end":456,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<EncoderReaderBuf<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying stream, consuming this encoder\n","sig":null,"attributes":[{"value":"/ Returns the underlying stream, consuming this encoder","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":62559,"byte_end":62616,"line_start":455,"line_end":455,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":64511,"byte_end":64514,"line_start":517,"line_end":517,"column_start":12,"column_end":15},"name":"new","qualname":"<DecoderReader<R>>::new","value":"pub fn new(R) -> io::Result<DecoderReader<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n gzip header.","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":64303,"byte_end":64375,"line_start":512,"line_end":512,"column_start":5,"column_end":77}},{"value":"/ gzip header.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":64380,"byte_end":64396,"line_start":513,"line_end":513,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":64401,"byte_end":64404,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ If an error is encountered when parsing the gzip header, an error is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":64409,"byte_end":64481,"line_start":515,"line_end":515,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":64486,"byte_end":64499,"line_start":516,"line_end":516,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":64738,"byte_end":64744,"line_start":524,"line_end":524,"column_start":12,"column_end":18},"name":"header","qualname":"<DecoderReader<R>>::header","value":"pub fn header(&Self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the header associated with this stream.\n","sig":null,"attributes":[{"value":"/ Returns the header associated with this stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":64675,"byte_end":64726,"line_start":523,"line_end":523,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":64866,"byte_end":64873,"line_start":529,"line_end":529,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DecoderReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":64804,"byte_end":64854,"line_start":528,"line_end":528,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":65140,"byte_end":65147,"line_start":537,"line_end":537,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DecoderReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":64939,"byte_end":64997,"line_start":533,"line_end":533,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":65002,"byte_end":65005,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":65010,"byte_end":65082,"line_start":535,"line_end":535,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":65087,"byte_end":65128,"line_start":536,"line_end":536,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":65292,"byte_end":65302,"line_start":542,"line_end":542,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DecoderReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":65221,"byte_end":65280,"line_start":541,"line_end":541,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":66081,"byte_end":66084,"line_start":570,"line_end":570,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiDecoderReader<R>>::new","value":"pub fn new(R) -> io::Result<MultiDecoderReader<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n (first) gzip header. If the gzip stream contains multiple members all will\n be decoded.","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":65791,"byte_end":65863,"line_start":564,"line_end":564,"column_start":5,"column_end":77}},{"value":"/ (first) gzip header. If the gzip stream contains multiple members all will","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":65868,"byte_end":65946,"line_start":565,"line_end":565,"column_start":5,"column_end":83}},{"value":"/ be decoded.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":65951,"byte_end":65966,"line_start":566,"line_end":566,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":65971,"byte_end":65974,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If an error is encountered when parsing the gzip header, an error is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":65979,"byte_end":66051,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":66056,"byte_end":66069,"line_start":569,"line_end":569,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":66331,"byte_end":66337,"line_start":577,"line_end":577,"column_start":12,"column_end":18},"name":"header","qualname":"<MultiDecoderReader<R>>::header","value":"pub fn header(&Self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the current header associated with this stream.\n","sig":null,"attributes":[{"value":"/ Returns the current header associated with this stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":66260,"byte_end":66319,"line_start":576,"line_end":576,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":66459,"byte_end":66466,"line_start":582,"line_end":582,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MultiDecoderReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":66397,"byte_end":66447,"line_start":581,"line_end":581,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":66733,"byte_end":66740,"line_start":590,"line_end":590,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MultiDecoderReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":66532,"byte_end":66590,"line_start":586,"line_end":586,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":66595,"byte_end":66598,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":66603,"byte_end":66675,"line_start":588,"line_end":588,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":66680,"byte_end":66721,"line_start":589,"line_end":589,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":66885,"byte_end":66895,"line_start":595,"line_end":595,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MultiDecoderReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":66814,"byte_end":66873,"line_start":594,"line_end":594,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":67603,"byte_end":67606,"line_start":622,"line_end":622,"column_start":12,"column_end":15},"name":"new","qualname":"<DecoderReaderBuf<R>>::new","value":"pub fn new(R) -> io::Result<DecoderReaderBuf<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n gzip header.","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":67395,"byte_end":67467,"line_start":617,"line_end":617,"column_start":5,"column_end":77}},{"value":"/ gzip header.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":67472,"byte_end":67488,"line_start":618,"line_end":618,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":67493,"byte_end":67496,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ If an error is encountered when parsing the gzip header, an error is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":67501,"byte_end":67573,"line_start":620,"line_end":620,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":67578,"byte_end":67591,"line_start":621,"line_end":621,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":67984,"byte_end":67990,"line_start":635,"line_end":635,"column_start":12,"column_end":18},"name":"header","qualname":"<DecoderReaderBuf<R>>::header","value":"pub fn header(&Self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the header associated with this stream.\n","sig":null,"attributes":[{"value":"/ Returns the header associated with this stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":67921,"byte_end":67972,"line_start":634,"line_end":634,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":68105,"byte_end":68112,"line_start":640,"line_end":640,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DecoderReaderBuf<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":68043,"byte_end":68093,"line_start":639,"line_end":639,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":68379,"byte_end":68386,"line_start":648,"line_end":648,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DecoderReaderBuf<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":68178,"byte_end":68236,"line_start":644,"line_end":644,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":68241,"byte_end":68244,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":68249,"byte_end":68321,"line_start":646,"line_end":646,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":68326,"byte_end":68367,"line_start":647,"line_end":647,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":68531,"byte_end":68541,"line_start":653,"line_end":653,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DecoderReaderBuf<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":68460,"byte_end":68519,"line_start":652,"line_end":652,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":70456,"byte_end":70459,"line_start":719,"line_end":719,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiDecoderReaderBuf<R>>::new","value":"pub fn new(R) -> io::Result<MultiDecoderReaderBuf<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n (first) gzip header. If the gzip stream contains multiple members all will\n be decoded.","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":70166,"byte_end":70238,"line_start":713,"line_end":713,"column_start":5,"column_end":77}},{"value":"/ (first) gzip header. If the gzip stream contains multiple members all will","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":70243,"byte_end":70321,"line_start":714,"line_end":714,"column_start":5,"column_end":83}},{"value":"/ be decoded.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":70326,"byte_end":70341,"line_start":715,"line_end":715,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":70346,"byte_end":70349,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ If an error is encountered when parsing the gzip header, an error is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":70354,"byte_end":70426,"line_start":717,"line_end":717,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":70431,"byte_end":70444,"line_start":718,"line_end":718,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":70855,"byte_end":70861,"line_start":732,"line_end":732,"column_start":12,"column_end":18},"name":"header","qualname":"<MultiDecoderReaderBuf<R>>::header","value":"pub fn header(&Self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the current header associated with this stream.\n","sig":null,"attributes":[{"value":"/ Returns the current header associated with this stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":70784,"byte_end":70843,"line_start":731,"line_end":731,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":70976,"byte_end":70983,"line_start":737,"line_end":737,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MultiDecoderReaderBuf<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":70914,"byte_end":70964,"line_start":736,"line_end":736,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":71250,"byte_end":71257,"line_start":745,"line_end":745,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MultiDecoderReaderBuf<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":71049,"byte_end":71107,"line_start":741,"line_end":741,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":71112,"byte_end":71115,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":71120,"byte_end":71192,"line_start":743,"line_end":743,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":71197,"byte_end":71238,"line_start":744,"line_end":744,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":71402,"byte_end":71412,"line_start":750,"line_end":750,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MultiDecoderReaderBuf<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":71331,"byte_end":71390,"line_start":749,"line_end":749,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":73759,"byte_end":73767,"line_start":830,"line_end":830,"column_start":12,"column_end":20},"name":"filename","qualname":"<Header>::filename","value":"pub fn filename(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `filename` field of this gzip stream's header, if present.\n","sig":null,"attributes":[{"value":"/ Returns the `filename` field of this gzip stream's header, if present.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":73673,"byte_end":73747,"line_start":829,"line_end":829,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":73935,"byte_end":73940,"line_start":835,"line_end":835,"column_start":12,"column_end":17},"name":"extra","qualname":"<Header>::extra","value":"pub fn extra(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `extra` field of this gzip stream's header, if present.\n","sig":null,"attributes":[{"value":"/ Returns the `extra` field of this gzip stream's header, if present.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":73852,"byte_end":73923,"line_start":834,"line_end":834,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":74107,"byte_end":74114,"line_start":840,"line_end":840,"column_start":12,"column_end":19},"name":"comment","qualname":"<Header>::comment","value":"pub fn comment(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `comment` field of this gzip stream's header, if present.\n","sig":null,"attributes":[{"value":"/ Returns the `comment` field of this gzip stream's header, if present.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":74022,"byte_end":74095,"line_start":839,"line_end":839,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":74281,"byte_end":74286,"line_start":845,"line_end":845,"column_start":12,"column_end":17},"name":"mtime","qualname":"<Header>::mtime","value":"pub fn mtime(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the `mtime` field of this gzip stream's header, if present.\n","sig":null,"attributes":[{"value":"/ Returns the `mtime` field of this gzip stream's header, if present.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":74198,"byte_end":74269,"line_start":844,"line_end":844,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":502},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87183,"byte_end":87191,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"Compress","qualname":"::mem::Compress","value":"Compress {  }","parent":null,"children":[{"krate":0,"index":503}],"decl_id":null,"docs":" Raw in-memory compression stream for blocks of data.","sig":null,"attributes":[{"value":"/ Raw in-memory compression stream for blocks of data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":86731,"byte_end":86787,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":86788,"byte_end":86791,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type is the building block for the I/O streams in the rest of this","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":86792,"byte_end":86867,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ crate. It requires more management than the `Read`/`Write` API but is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":86868,"byte_end":86941,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/ maximally flexible in terms of accepting input from any source and being","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":86942,"byte_end":87018,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ able to produce output to any memory location.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87019,"byte_end":87069,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87070,"byte_end":87073,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ It is recommended to use the I/O stream adaptors over this type as they're","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87074,"byte_end":87152,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ easier to use.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87153,"byte_end":87171,"line_start":20,"line_end":20,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":504},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87683,"byte_end":87693,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"Decompress","qualname":"::mem::Decompress","value":"Decompress {  }","parent":null,"children":[{"krate":0,"index":505}],"decl_id":null,"docs":" Raw in-memory decompression stream for blocks of data.","sig":null,"attributes":[{"value":"/ Raw in-memory decompression stream for blocks of data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87229,"byte_end":87287,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87288,"byte_end":87291,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This type is the building block for the I/O streams in the rest of this","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87292,"byte_end":87367,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ crate. It requires more management than the `Read`/`Write` API but is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87368,"byte_end":87441,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ maximally flexible in terms of accepting input from any source and being","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87442,"byte_end":87518,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ able to produce output to any memory location.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87519,"byte_end":87569,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87570,"byte_end":87573,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ It is recommended to use the I/O stream adaptors over this type as they're","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87574,"byte_end":87652,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ easier to use.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87653,"byte_end":87671,"line_start":33,"line_end":33,"column_start":1,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":521},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":88471,"byte_end":88475,"line_start":61,"line_end":61,"column_start":5,"column_end":9},"name":"None","qualname":"::mem::Flush::None","value":"Flush::None","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" A typical parameter for passing to compression/decompression functions,\n this indicates that the underlying stream to decide how much data to\n accumulate before producing output in order to maximize compression.\n","sig":null,"attributes":[{"value":"/ A typical parameter for passing to compression/decompression functions,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":88237,"byte_end":88312,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ this indicates that the underlying stream to decide how much data to","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":88317,"byte_end":88389,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ accumulate before producing output in order to maximize compression.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":88394,"byte_end":88466,"line_start":60,"line_end":60,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":524},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":88926,"byte_end":88930,"line_start":70,"line_end":70,"column_start":5,"column_end":9},"name":"Sync","qualname":"::mem::Flush::Sync","value":"Flush::Sync","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" All pending output is flushed to the output buffer and the output is\n aligned on a byte boundary so that the decompressor can get all input\n data available so far.","sig":null,"attributes":[{"value":"/ All pending output is flushed to the output buffer and the output is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":88510,"byte_end":88582,"line_start":63,"line_end":63,"column_start":5,"column_end":77}},{"value":"/ aligned on a byte boundary so that the decompressor can get all input","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":88587,"byte_end":88660,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ data available so far.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":88665,"byte_end":88691,"line_start":65,"line_end":65,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":88696,"byte_end":88699,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Flushing may degrade compression for some compression algorithms and so","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":88704,"byte_end":88779,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ it should only be used when necessary. This will complete the current","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":88784,"byte_end":88857,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ deflate block and follow it with an empty stored block.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":88862,"byte_end":88921,"line_start":69,"line_end":69,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":527},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":89463,"byte_end":89470,"line_start":80,"line_end":80,"column_start":5,"column_end":12},"name":"Partial","qualname":"::mem::Flush::Partial","value":"Flush::Partial","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" All pending output is flushed to the output buffer, but the output is\n not aligned to a byte boundary.","sig":null,"attributes":[{"value":"/ All pending output is flushed to the output buffer, but the output is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":88967,"byte_end":89040,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ not aligned to a byte boundary.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":89045,"byte_end":89080,"line_start":73,"line_end":73,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":89085,"byte_end":89088,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ All of the input data so far will be available to the decompressor (as","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":89093,"byte_end":89167,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ with `Flush::Sync`. This completes the current deflate block and follows","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":89172,"byte_end":89248,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ it with an empty fixed codes block that is 10 bites long, and it assures","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":89253,"byte_end":89329,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ that enough bytes are output in order for the decompessor to finish the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":89334,"byte_end":89409,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ block before the empty fixed code block.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":89414,"byte_end":89458,"line_start":79,"line_end":79,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":530},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90127,"byte_end":90132,"line_start":92,"line_end":92,"column_start":5,"column_end":10},"name":"Block","qualname":"::mem::Flush::Block","value":"Flush::Block","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" A deflate block is completed and emitted, as for `Flush::Sync`, but the\n output is not aligned on a byte boundary and up to seven vits of the\n current block are held to be written as the next byte after the next\n deflate block is completed.","sig":null,"attributes":[{"value":"/ A deflate block is completed and emitted, as for `Flush::Sync`, but the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":89510,"byte_end":89585,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ output is not aligned on a byte boundary and up to seven vits of the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":89590,"byte_end":89662,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ current block are held to be written as the next byte after the next","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":89667,"byte_end":89739,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ deflate block is completed.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":89744,"byte_end":89775,"line_start":85,"line_end":85,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":89780,"byte_end":89783,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ In this case the decompressor may not be provided enough bits at this","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":89788,"byte_end":89861,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ point in order to complete decompression of the data provided so far to","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":89866,"byte_end":89941,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ the compressor, it may need to wait for the next block to be emitted.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":89946,"byte_end":90019,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ This is for advanced applications that need to control the emission of","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90024,"byte_end":90098,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ deflate blocks.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90103,"byte_end":90122,"line_start":91,"line_end":91,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":533},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90468,"byte_end":90472,"line_start":99,"line_end":99,"column_start":5,"column_end":9},"name":"Full","qualname":"::mem::Flush::Full","value":"Flush::Full","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" All output is flushed as with `Flush::Sync` and the compression state is\n reset so decompression can restart from this point if previous\n compressed data has been damaged or if random access is desired.","sig":null,"attributes":[{"value":"/ All output is flushed as with `Flush::Sync` and the compression state is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90164,"byte_end":90240,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ reset so decompression can restart from this point if previous","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90245,"byte_end":90311,"line_start":95,"line_end":95,"column_start":5,"column_end":71}},{"value":"/ compressed data has been damaged or if random access is desired.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90316,"byte_end":90384,"line_start":96,"line_end":96,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90389,"byte_end":90392,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Using this option too often can seriously degrade compression.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90397,"byte_end":90463,"line_start":98,"line_end":98,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":536},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90700,"byte_end":90706,"line_start":105,"line_end":105,"column_start":5,"column_end":11},"name":"Finish","qualname":"::mem::Flush::Finish","value":"Flush::Finish","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" Pending input is processed and pending output is flushed.","sig":null,"attributes":[{"value":"/ Pending input is processed and pending output is flushed.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90509,"byte_end":90570,"line_start":101,"line_end":101,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90575,"byte_end":90578,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ The return value may indicate that the stream is not yet done and more","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90583,"byte_end":90657,"line_start":103,"line_end":103,"column_start":5,"column_end":79}},{"value":"/ data has yet to be processed.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90662,"byte_end":90695,"line_start":104,"line_end":104,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":520},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":88225,"byte_end":88230,"line_start":57,"line_end":57,"column_start":10,"column_end":15},"name":"Flush","qualname":"::mem::Flush","value":"pub enum Flush {\n\n    /// A typical parameter for passing to compression/decompression functions,\n    /// this indicates that the underlying stream to decide how much data to\n    /// accumulate before producing output in order to maximize compression.\n    None = ,\n\n    /// All pending output is flushed to the output buffer and the output is\n    /// aligned on a byte boundary so that the decompressor can get all input\n    /// data available so far.\n    ///\n    /// Flushing may degrade compression for some compression algorithms and so\n    /// it should only be used when necessary. This will complete the current\n    /// deflate block and follow it with an empty stored block.\n    Sync = ,\n\n    /// All pending output is flushed to the output buffer, but the output is\n    /// not aligned to a byte boundary.\n    ///\n    /// All of the input data so far will be available to the decompressor (as\n    /// with `Flush::Sync`. This completes the current deflate block and follows\n    /// it with an empty fixed codes block that is 10 bites long, and it assures\n    /// that enough bytes are output in order for the decompessor to finish the\n    /// block before the empty fixed code block.\n    Partial = ,\n\n    /// A deflate block is completed and emitted, as for `Flush::Sync`, but the\n    /// output is not aligned on a byte boundary and up to seven vits of the\n    /// current block are held to be written as the next byte after the next\n    /// deflate block is completed.\n    ///\n    /// In this case the decompressor may not be provided enough bits at this\n    /// point in order to complete decompression of the data provided so far to\n    /// the compressor, it may need to wait for the next block to be emitted.\n    /// This is for advanced applications that need to control the emission of\n    /// deflate blocks.\n    Block = ,\n\n    /// All output is flushed as with `Flush::Sync` and the compression state is\n    /// reset so decompression can restart from this point if previous\n    /// compressed data has been damaged or if random access is desired.\n    ///\n    /// Using this option too often can seriously degrade compression.\n    Full = ,\n\n    /// Pending input is processed and pending output is flushed.\n    ///\n    /// The return value may indicate that the stream is not yet done and more\n    /// data has yet to be processed.\n    Finish = ,\n}","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":536}],"decl_id":null,"docs":" Values which indicate the form of flushing to be used when compressing or\n decompressing in-memory data.\n","sig":null,"attributes":[{"value":"/ Values which indicate the form of flushing to be used when compressing or","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":88104,"byte_end":88181,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ decompressing in-memory data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":88182,"byte_end":88215,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":745},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90892,"byte_end":90901,"line_start":111,"line_end":111,"column_start":12,"column_end":21},"name":"DataError","qualname":"::mem::DataError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned when a decompression object finds that the input stream of\n bytes was not a valid input stream of bytes.\n","sig":null,"attributes":[{"value":"/ Error returned when a decompression object finds that the input stream of","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90737,"byte_end":90814,"line_start":108,"line_end":108,"column_start":1,"column_end":78}},{"value":"/ bytes was not a valid input stream of bytes.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90815,"byte_end":90863,"line_start":109,"line_end":109,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":540},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91213,"byte_end":91215,"line_start":120,"line_end":120,"column_start":5,"column_end":7},"name":"Ok","qualname":"::mem::Status::Ok","value":"Status::Ok","parent":{"krate":0,"index":539},"children":[],"decl_id":null,"docs":" Indicates success.","sig":null,"attributes":[{"value":"/ Indicates success.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91034,"byte_end":91056,"line_start":116,"line_end":116,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91061,"byte_end":91064,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Means that more input may be needed but isn't available","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91069,"byte_end":91128,"line_start":118,"line_end":118,"column_start":5,"column_end":64}},{"value":"/ and/or there' smore output to be written but the output buffer is full.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91133,"byte_end":91208,"line_start":119,"line_end":119,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":542},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91694,"byte_end":91702,"line_start":131,"line_end":131,"column_start":5,"column_end":13},"name":"BufError","qualname":"::mem::Status::BufError","value":"Status::BufError","parent":{"krate":0,"index":539},"children":[],"decl_id":null,"docs":" Indicates that forward progress is not possible due to input or output\n buffers being empty.","sig":null,"attributes":[{"value":"/ Indicates that forward progress is not possible due to input or output","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91222,"byte_end":91296,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ buffers being empty.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91301,"byte_end":91325,"line_start":123,"line_end":123,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91330,"byte_end":91333,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ For compression it means the input buffer needs some more data or the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91338,"byte_end":91411,"line_start":125,"line_end":125,"column_start":5,"column_end":78}},{"value":"/ output buffer needs to be freed up before trying again.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91416,"byte_end":91475,"line_start":126,"line_end":126,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91480,"byte_end":91483,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ For decompression this means that more input is needed to continue or","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91488,"byte_end":91561,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/ the output buffer isn't large enough to contain the result. The function","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91566,"byte_end":91642,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ can be called again after fixing both.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91647,"byte_end":91689,"line_start":130,"line_end":130,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":544},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91984,"byte_end":91993,"line_start":138,"line_end":138,"column_start":5,"column_end":14},"name":"StreamEnd","qualname":"::mem::Status::StreamEnd","value":"Status::StreamEnd","parent":{"krate":0,"index":539},"children":[],"decl_id":null,"docs":" Indicates that all input has been consumed and all output bytes have\n been written. Decompression/compression should not be called again.","sig":null,"attributes":[{"value":"/ Indicates that all input has been consumed and all output bytes have","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91709,"byte_end":91781,"line_start":133,"line_end":133,"column_start":5,"column_end":77}},{"value":"/ been written. Decompression/compression should not be called again.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91786,"byte_end":91857,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91862,"byte_end":91865,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ For decompression with zlib streams the adler-32 of the decompressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91870,"byte_end":91942,"line_start":136,"line_end":136,"column_start":5,"column_end":77}},{"value":"/ data has also been verified.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91947,"byte_end":91979,"line_start":137,"line_end":137,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":539},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":91021,"byte_end":91027,"line_start":115,"line_end":115,"column_start":10,"column_end":16},"name":"Status","qualname":"::mem::Status","value":"pub enum Status {\n\n    /// Indicates success.\n    ///\n    /// Means that more input may be needed but isn't available\n    /// and/or there' smore output to be written but the output buffer is full.\n    Ok,\n\n    /// Indicates that forward progress is not possible due to input or output\n    /// buffers being empty.\n    ///\n    /// For compression it means the input buffer needs some more data or the\n    /// output buffer needs to be freed up before trying again.\n    ///\n    /// For decompression this means that more input is needed to continue or\n    /// the output buffer isn't large enough to contain the result. The function\n    /// can be called again after fixing both.\n    BufError,\n\n    /// Indicates that all input has been consumed and all output bytes have\n    /// been written. Decompression/compression should not be called again.\n    ///\n    /// For decompression with zlib streams the adler-32 of the decompressed\n    /// data has also been verified.\n    StreamEnd,\n}","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":544}],"decl_id":null,"docs":" Possible status results of compressing some data or successfully\n decompressing a block of data.\n","sig":null,"attributes":[{"value":"/ Possible status results of compressing some data or successfully","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90908,"byte_end":90976,"line_start":113,"line_end":113,"column_start":1,"column_end":69}},{"value":"/ decompressing a block of data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":90977,"byte_end":91011,"line_start":114,"line_end":114,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":92317,"byte_end":92320,"line_start":147,"line_end":147,"column_start":12,"column_end":15},"name":"new","qualname":"<Compress>::new","value":"pub fn new(Compression, bool) -> Compress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object ready for compressing data that it's given.","sig":null,"attributes":[{"value":"/ Creates a new object ready for compressing data that it's given.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":92018,"byte_end":92086,"line_start":142,"line_end":142,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":92091,"byte_end":92094,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ The `level` argument here indicates what level of compression is going","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":92099,"byte_end":92173,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ to be performed, and the `zlib_header` argument indicates whether the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":92178,"byte_end":92251,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ output data should have a zlib header or not.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":92256,"byte_end":92305,"line_start":146,"line_end":146,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":93475,"byte_end":93483,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"total_in","qualname":"<Compress>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of input bytes which have been processed by\n this compression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of input bytes which have been processed by","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":93358,"byte_end":93430,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/ this compression object.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":93435,"byte_end":93463,"line_start":173,"line_end":173,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":93656,"byte_end":93665,"line_start":180,"line_end":180,"column_start":12,"column_end":21},"name":"total_out","qualname":"<Compress>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of output bytes which have been produced by\n this compression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of output bytes which have been produced by","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":93539,"byte_end":93611,"line_start":178,"line_end":178,"column_start":5,"column_end":77}},{"value":"/ this compression object.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":93616,"byte_end":93644,"line_start":179,"line_end":179,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":93895,"byte_end":93900,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"reset","qualname":"<Compress>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Quickly resets this compressor without having to reallocate anything.","sig":null,"attributes":[{"value":"/ Quickly resets this compressor without having to reallocate anything.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":93722,"byte_end":93795,"line_start":184,"line_end":184,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":93800,"byte_end":93803,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to dropping this object and then creating a new one.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":93808,"byte_end":93883,"line_start":186,"line_end":186,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":94506,"byte_end":94514,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"compress","qualname":"<Compress>::compress","value":"pub fn compress(&mut Self, &[u8], &mut [u8], Flush) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Compresses the input data into the output, consuming only as much\n input as needed and writing as much output as possible.","sig":null,"attributes":[{"value":"/ Compresses the input data into the output, consuming only as much","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":94112,"byte_end":94181,"line_start":195,"line_end":195,"column_start":5,"column_end":74}},{"value":"/ input as needed and writing as much output as possible.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":94186,"byte_end":94245,"line_start":196,"line_end":196,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":94250,"byte_end":94253,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The flush option can be any of the available flushing parameters.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":94258,"byte_end":94327,"line_start":198,"line_end":198,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":94332,"byte_end":94335,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ To learn how much data was consumed or how much output was produced, use","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":94340,"byte_end":94416,"line_start":200,"line_end":200,"column_start":5,"column_end":81}},{"value":"/ the `total_in` and `total_out` functions before/after this is called.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":94421,"byte_end":94494,"line_start":201,"line_end":201,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":96103,"byte_end":96115,"line_start":238,"line_end":238,"column_start":12,"column_end":24},"name":"compress_vec","qualname":"<Compress>::compress_vec","value":"pub fn compress_vec(&mut Self, &[u8], &mut Vec<u8>, Flush) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Compresses the input data into the extra space of the output, consuming\n only as much input as needed and writing as much output as possible.","sig":null,"attributes":[{"value":"/ Compresses the input data into the extra space of the output, consuming","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":95604,"byte_end":95679,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ only as much input as needed and writing as much output as possible.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":95684,"byte_end":95756,"line_start":231,"line_end":231,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":95761,"byte_end":95764,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This function has the same semantics as `compress`, except that the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":95769,"byte_end":95840,"line_start":233,"line_end":233,"column_start":5,"column_end":76}},{"value":"/ length of `vec` is managed by this function. This will not reallocate","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":95845,"byte_end":95918,"line_start":234,"line_end":234,"column_start":5,"column_end":78}},{"value":"/ the vector provided or attempt to grow it, so space for the output must","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":95923,"byte_end":95998,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ be reserved in the output vector by the caller before calling this","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":96003,"byte_end":96073,"line_start":236,"line_end":236,"column_start":5,"column_end":75}},{"value":"/ function.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":96078,"byte_end":96091,"line_start":237,"line_end":237,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":96984,"byte_end":96987,"line_start":264,"line_end":264,"column_start":12,"column_end":15},"name":"new","qualname":"<Decompress>::new","value":"pub fn new(bool) -> Decompress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object ready for decompressing data that it's given.","sig":null,"attributes":[{"value":"/ Creates a new object ready for decompressing data that it's given.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":96776,"byte_end":96846,"line_start":260,"line_end":260,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":96851,"byte_end":96854,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The `zlib_header` argument indicates whether the input data is expected","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":96859,"byte_end":96934,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ to have a zlib header or not.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":96939,"byte_end":96972,"line_start":263,"line_end":263,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":97893,"byte_end":97901,"line_start":287,"line_end":287,"column_start":12,"column_end":20},"name":"total_in","qualname":"<Decompress>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of input bytes which have been processed by\n this decompression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of input bytes which have been processed by","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":97774,"byte_end":97846,"line_start":285,"line_end":285,"column_start":5,"column_end":77}},{"value":"/ this decompression object.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":97851,"byte_end":97881,"line_start":286,"line_end":286,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":98076,"byte_end":98085,"line_start":293,"line_end":293,"column_start":12,"column_end":21},"name":"total_out","qualname":"<Decompress>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of output bytes which have been produced by\n this decompression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of output bytes which have been produced by","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":97957,"byte_end":98029,"line_start":291,"line_end":291,"column_start":5,"column_end":77}},{"value":"/ this decompression object.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":98034,"byte_end":98064,"line_start":292,"line_end":292,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":98998,"byte_end":99008,"line_start":311,"line_end":311,"column_start":12,"column_end":22},"name":"decompress","qualname":"<Decompress>::decompress","value":"pub fn decompress(&mut Self, &[u8], &mut [u8], Flush)\n-> Result<Status, DataError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the input data into the output, consuming only as much\n input as needed and writing as much output as possible.","sig":null,"attributes":[{"value":"/ Decompresses the input data into the output, consuming only as much","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":98142,"byte_end":98213,"line_start":297,"line_end":297,"column_start":5,"column_end":76}},{"value":"/ input as needed and writing as much output as possible.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":98218,"byte_end":98277,"line_start":298,"line_end":298,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":98282,"byte_end":98285,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ The flush option provided can either be `Flush::None`, `Flush::Sync`,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":98290,"byte_end":98363,"line_start":300,"line_end":300,"column_start":5,"column_end":78}},{"value":"/ or `Flush::Finish`. If the first call passes `Flush::Finish` it is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":98368,"byte_end":98438,"line_start":301,"line_end":301,"column_start":5,"column_end":75}},{"value":"/ assumed that the input and output buffers are both sized large enough to","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":98443,"byte_end":98519,"line_start":302,"line_end":302,"column_start":5,"column_end":81}},{"value":"/ decompress the entire stream in a single call.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":98524,"byte_end":98574,"line_start":303,"line_end":303,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":98579,"byte_end":98582,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ A flush value of `Flush::Finish` indicates that there are no more source","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":98587,"byte_end":98663,"line_start":305,"line_end":305,"column_start":5,"column_end":81}},{"value":"/ bytes available beside what's already in the input buffer, and the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":98668,"byte_end":98738,"line_start":306,"line_end":306,"column_start":5,"column_end":75}},{"value":"/ output buffer is large enough to hold the rest of the decompressed data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":98743,"byte_end":98819,"line_start":307,"line_end":307,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":98824,"byte_end":98827,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ To learn how much data was consumed or how much output was produced, use","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":98832,"byte_end":98908,"line_start":309,"line_end":309,"column_start":5,"column_end":81}},{"value":"/ the `total_in` and `total_out` functions before/after this is called.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":98913,"byte_end":98986,"line_start":310,"line_end":310,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":100680,"byte_end":100694,"line_start":349,"line_end":349,"column_start":12,"column_end":26},"name":"decompress_vec","qualname":"<Decompress>::decompress_vec","value":"pub fn decompress_vec(&mut Self, &[u8], &mut Vec<u8>, Flush)\n-> Result<Status, DataError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the input data into the extra space in the output vector\n specified by `output`.","sig":null,"attributes":[{"value":"/ Decompresses the input data into the extra space in the output vector","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":100227,"byte_end":100300,"line_start":341,"line_end":341,"column_start":5,"column_end":78}},{"value":"/ specified by `output`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":100305,"byte_end":100331,"line_start":342,"line_end":342,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":100336,"byte_end":100339,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This function has the same semantics as `decompress`, except that the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":100344,"byte_end":100417,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/ length of `vec` is managed by this function. This will not reallocate","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":100422,"byte_end":100495,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ the vector provided or attempt to grow it, so space for the output must","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":100500,"byte_end":100575,"line_start":346,"line_end":346,"column_start":5,"column_end":80}},{"value":"/ be reserved in the output vector by the caller before calling this","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":100580,"byte_end":100650,"line_start":347,"line_end":347,"column_start":5,"column_end":75}},{"value":"/ function.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":100655,"byte_end":100668,"line_start":348,"line_end":348,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":101744,"byte_end":101749,"line_start":377,"line_end":377,"column_start":12,"column_end":17},"name":"reset","qualname":"<Decompress>::reset","value":"pub fn reset(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Performs the equivalent of replacing this decompression state with a\n freshly allocated copy.","sig":null,"attributes":[{"value":"/ Performs the equivalent of replacing this decompression state with a","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":101364,"byte_end":101436,"line_start":369,"line_end":369,"column_start":5,"column_end":77}},{"value":"/ freshly allocated copy.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":101441,"byte_end":101468,"line_start":370,"line_end":370,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":101473,"byte_end":101476,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ This function may not allocate memory, though, and attempts to reuse any","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":101481,"byte_end":101557,"line_start":372,"line_end":372,"column_start":5,"column_end":81}},{"value":"/ previously existing resources.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":101562,"byte_end":101596,"line_start":373,"line_end":373,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":101601,"byte_end":101604,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ The argument provided here indicates whether the reset state will","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":101609,"byte_end":101678,"line_start":375,"line_end":375,"column_start":5,"column_end":74}},{"value":"/ attempt to decode a zlib header first or not.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":101683,"byte_end":101732,"line_start":376,"line_end":376,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":583},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":105960,"byte_end":105973,"line_start":20,"line_end":20,"column_start":12,"column_end":25},"name":"EncoderWriter","qualname":"::zlib::EncoderWriter","value":"EncoderWriter {  }","parent":null,"children":[{"krate":0,"index":585}],"decl_id":null,"docs":" A ZLIB encoder, or compressor.","sig":null,"attributes":[{"value":"/ A ZLIB encoder, or compressor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":105764,"byte_end":105798,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":105799,"byte_end":105802,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This structure implements a `Write` interface and takes a stream of","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":105803,"byte_end":105874,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ uncompressed data, writing the compressed data to the wrapped writer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":105875,"byte_end":105948,"line_start":19,"line_end":19,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":586},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106225,"byte_end":106238,"line_start":28,"line_end":28,"column_start":12,"column_end":25},"name":"EncoderReader","qualname":"::zlib::EncoderReader","value":"EncoderReader {  }","parent":null,"children":[{"krate":0,"index":588}],"decl_id":null,"docs":" A ZLIB encoder, or compressor.","sig":null,"attributes":[{"value":"/ A ZLIB encoder, or compressor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106026,"byte_end":106060,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106061,"byte_end":106064,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This structure implements a `Read` interface and will read uncompressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106065,"byte_end":106140,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ data from an underlying stream and emit a stream of compressed data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106141,"byte_end":106213,"line_start":27,"line_end":27,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":589},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106492,"byte_end":106508,"line_start":36,"line_end":36,"column_start":12,"column_end":28},"name":"EncoderReaderBuf","qualname":"::zlib::EncoderReaderBuf","value":"EncoderReaderBuf {  }","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592}],"decl_id":null,"docs":" A ZLIB encoder, or compressor.","sig":null,"attributes":[{"value":"/ A ZLIB encoder, or compressor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106290,"byte_end":106324,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106325,"byte_end":106328,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This structure implements a `BufRead` interface and will read uncompressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106329,"byte_end":106407,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ data from an underlying stream and emit a stream of compressed data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106408,"byte_end":106480,"line_start":35,"line_end":35,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":593},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106750,"byte_end":106763,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"DecoderReader","qualname":"::zlib::DecoderReader","value":"DecoderReader {  }","parent":null,"children":[{"krate":0,"index":595}],"decl_id":null,"docs":" A ZLIB decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A ZLIB decoder, or decompressor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106549,"byte_end":106585,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106586,"byte_end":106589,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This structure implements a `Read` interface and takes a stream of","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106590,"byte_end":106660,"line_start":43,"line_end":43,"column_start":1,"column_end":71}},{"value":"/ compressed data as input, providing the decompressed data when read from.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106661,"byte_end":106738,"line_start":44,"line_end":44,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":596},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107019,"byte_end":107035,"line_start":53,"line_end":53,"column_start":12,"column_end":28},"name":"DecoderReaderBuf","qualname":"::zlib::DecoderReaderBuf","value":"DecoderReaderBuf {  }","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599}],"decl_id":null,"docs":" A ZLIB decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A ZLIB decoder, or decompressor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106815,"byte_end":106851,"line_start":49,"line_end":49,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106852,"byte_end":106855,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This structure implements a `BufRead` interface and takes a stream of","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106856,"byte_end":106929,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ compressed data as input, providing the decompressed data when read from.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":106930,"byte_end":107007,"line_start":52,"line_end":52,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":600},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107256,"byte_end":107269,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"DecoderWriter","qualname":"::zlib::DecoderWriter","value":"DecoderWriter {  }","parent":null,"children":[{"krate":0,"index":602}],"decl_id":null,"docs":" A ZLIB decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A ZLIB decoder, or decompressor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107078,"byte_end":107114,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107115,"byte_end":107118,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This structure implements a `Write` and will emit a stream of decompressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107119,"byte_end":107197,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ data when fed a stream of compressed data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107198,"byte_end":107244,"line_start":61,"line_end":61,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107600,"byte_end":107603,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<EncoderWriter<W>>::new","value":"pub fn new(W, ::Compression) -> EncoderWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will write compressed data to the stream\n given at the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will write compressed data to the stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107362,"byte_end":107434,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ given at the given compression level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107439,"byte_end":107480,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107485,"byte_end":107488,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ When this encoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107493,"byte_end":107568,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107573,"byte_end":107588,"line_start":71,"line_end":71,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107829,"byte_end":107836,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<EncoderWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107767,"byte_end":107817,"line_start":78,"line_end":78,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":108113,"byte_end":108120,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<EncoderWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107892,"byte_end":107950,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107955,"byte_end":107958,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107963,"byte_end":108039,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":108044,"byte_end":108101,"line_start":86,"line_end":86,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":108825,"byte_end":108830,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"reset","qualname":"<EncoderWriter<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the output","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":108184,"byte_end":108254,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":108259,"byte_end":108282,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":108287,"byte_end":108290,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This function will finish encoding the current stream into the current","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":108295,"byte_end":108369,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ output stream before swapping out the two output streams. If the stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":108374,"byte_end":108449,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ cannot be finished an error is returned.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":108454,"byte_end":108498,"line_start":96,"line_end":96,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":108503,"byte_end":108506,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ After the current stream has been finished, this will reset the internal","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":108511,"byte_end":108587,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/ state of this encoder and replace the output stream with the one","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":108592,"byte_end":108660,"line_start":99,"line_end":99,"column_start":5,"column_end":73}},{"value":"/ provided, returning the previous output stream. Future data written to","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":108665,"byte_end":108739,"line_start":100,"line_end":100,"column_start":5,"column_end":79}},{"value":"/ this encoder will be the compressed into the stream `w` provided.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":108744,"byte_end":108813,"line_start":101,"line_end":101,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109422,"byte_end":109432,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<EncoderWriter<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":108980,"byte_end":109055,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109060,"byte_end":109063,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109068,"byte_end":109141,"line_start":110,"line_end":110,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109146,"byte_end":109222,"line_start":111,"line_end":111,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109227,"byte_end":109270,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109275,"byte_end":109278,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109283,"byte_end":109295,"line_start":114,"line_end":114,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109300,"byte_end":109303,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109308,"byte_end":109382,"line_start":116,"line_end":116,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109387,"byte_end":109410,"line_start":117,"line_end":117,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":110094,"byte_end":110100,"line_start":132,"line_end":132,"column_start":12,"column_end":18},"name":"finish","qualname":"<EncoderWriter<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109503,"byte_end":109557,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109562,"byte_end":109565,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream, close off the compressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109570,"byte_end":109642,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ stream and, if successful, return the contained writer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109647,"byte_end":109706,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109711,"byte_end":109714,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109719,"byte_end":109795,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109800,"byte_end":109875,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109880,"byte_end":109950,"line_start":129,"line_end":129,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":109955,"byte_end":110028,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":110033,"byte_end":110082,"line_start":131,"line_end":131,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":110617,"byte_end":110629,"line_start":144,"line_end":144,"column_start":12,"column_end":24},"name":"flush_finish","qualname":"<EncoderWriter<W>>::flush_finish","value":"pub fn flush_finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":110212,"byte_end":110266,"line_start":137,"line_end":137,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":110271,"byte_end":110274,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":110279,"byte_end":110355,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":110360,"byte_end":110394,"line_start":140,"line_end":140,"column_start":5,"column_end":39}},{"value":"/ The compressed stream will not closed but only flushed. This","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":110399,"byte_end":110463,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/ means that obtained byte array can by extended by another deflated","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":110468,"byte_end":110538,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ stream. To close the stream add the two bytes 0x3 and 0x0.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":110543,"byte_end":110605,"line_start":143,"line_end":143,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":110960,"byte_end":110968,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"total_in","qualname":"<EncoderWriter<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been written to this compresor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been written to this compresor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":110740,"byte_end":110813,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":110818,"byte_end":110821,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes written to this object may be accounted for,","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":110826,"byte_end":110898,"line_start":151,"line_end":151,"column_start":5,"column_end":77}},{"value":"/ there may still be some active buffering.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":110903,"byte_end":110948,"line_start":152,"line_end":152,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":111211,"byte_end":111220,"line_start":161,"line_end":161,"column_start":12,"column_end":21},"name":"total_out","qualname":"<EncoderWriter<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":111031,"byte_end":111096,"line_start":157,"line_end":157,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":111101,"byte_end":111104,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been written yet, some may still be","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":111109,"byte_end":111181,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/ buffered.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":111186,"byte_end":111199,"line_start":160,"line_end":160,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":112131,"byte_end":112134,"line_start":197,"line_end":197,"column_start":12,"column_end":15},"name":"new","qualname":"<EncoderReader<R>>::new","value":"pub fn new(R, ::Compression) -> EncoderReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":111998,"byte_end":112072,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":112077,"byte_end":112119,"line_start":196,"line_end":196,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":112827,"byte_end":112832,"line_start":213,"line_end":213,"column_start":12,"column_end":17},"name":"reset","qualname":"<EncoderReader<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":112298,"byte_end":112367,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":112372,"byte_end":112395,"line_start":204,"line_end":204,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":112400,"byte_end":112403,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":112408,"byte_end":112483,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":112488,"byte_end":112560,"line_start":207,"line_end":207,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":112565,"byte_end":112634,"line_start":208,"line_end":208,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":112639,"byte_end":112665,"line_start":209,"line_end":209,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":112670,"byte_end":112673,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":112678,"byte_end":112750,"line_start":211,"line_end":211,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":112755,"byte_end":112815,"line_start":212,"line_end":212,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":112994,"byte_end":113001,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<EncoderReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":112933,"byte_end":112982,"line_start":218,"line_end":218,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":113267,"byte_end":113274,"line_start":227,"line_end":227,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<EncoderReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":113067,"byte_end":113124,"line_start":223,"line_end":223,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":113129,"byte_end":113132,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":113137,"byte_end":113209,"line_start":225,"line_end":225,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":113214,"byte_end":113255,"line_start":226,"line_end":226,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":113615,"byte_end":113625,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<EncoderReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":113348,"byte_end":113407,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":113412,"byte_end":113415,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":113420,"byte_end":113495,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":113500,"byte_end":113573,"line_start":234,"line_end":234,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":113578,"byte_end":113603,"line_start":235,"line_end":235,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":113924,"byte_end":113932,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"total_in","qualname":"<EncoderReader<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":113695,"byte_end":113768,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":113773,"byte_end":113776,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":113781,"byte_end":113857,"line_start":242,"line_end":242,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":113862,"byte_end":113912,"line_start":243,"line_end":243,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":114172,"byte_end":114181,"line_start":252,"line_end":252,"column_start":12,"column_end":21},"name":"total_out","qualname":"<EncoderReader<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":113995,"byte_end":114060,"line_start":248,"line_end":248,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":114065,"byte_end":114068,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":114073,"byte_end":114142,"line_start":250,"line_end":250,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":114147,"byte_end":114160,"line_start":251,"line_end":251,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":115064,"byte_end":115067,"line_start":287,"line_end":287,"column_start":12,"column_end":15},"name":"new","qualname":"<EncoderReaderBuf<R>>::new","value":"pub fn new(R, ::Compression) -> EncoderReaderBuf<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":114931,"byte_end":115005,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":115010,"byte_end":115052,"line_start":286,"line_end":286,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":115614,"byte_end":115619,"line_start":301,"line_end":301,"column_start":12,"column_end":17},"name":"reset","qualname":"<EncoderReaderBuf<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":115235,"byte_end":115304,"line_start":294,"line_end":294,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":115309,"byte_end":115332,"line_start":295,"line_end":295,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":115337,"byte_end":115340,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":115345,"byte_end":115420,"line_start":297,"line_end":297,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":115425,"byte_end":115497,"line_start":298,"line_end":298,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":115502,"byte_end":115571,"line_start":299,"line_end":299,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":115576,"byte_end":115602,"line_start":300,"line_end":300,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":115782,"byte_end":115789,"line_start":307,"line_end":307,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<EncoderReaderBuf<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":115721,"byte_end":115770,"line_start":306,"line_end":306,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":116034,"byte_end":116041,"line_start":315,"line_end":315,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<EncoderReaderBuf<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":115834,"byte_end":115891,"line_start":311,"line_end":311,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":115896,"byte_end":115899,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":115904,"byte_end":115976,"line_start":313,"line_end":313,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":115981,"byte_end":116022,"line_start":314,"line_end":314,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":116169,"byte_end":116179,"line_start":320,"line_end":320,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<EncoderReaderBuf<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":116098,"byte_end":116157,"line_start":319,"line_end":319,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":116450,"byte_end":116458,"line_start":328,"line_end":328,"column_start":12,"column_end":20},"name":"total_in","qualname":"<EncoderReaderBuf<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":116221,"byte_end":116294,"line_start":324,"line_end":324,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":116299,"byte_end":116302,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":116307,"byte_end":116383,"line_start":326,"line_end":326,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":116388,"byte_end":116438,"line_start":327,"line_end":327,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":116692,"byte_end":116701,"line_start":336,"line_end":336,"column_start":12,"column_end":21},"name":"total_out","qualname":"<EncoderReaderBuf<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":116515,"byte_end":116580,"line_start":332,"line_end":332,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":116585,"byte_end":116588,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":116593,"byte_end":116662,"line_start":334,"line_end":334,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":116667,"byte_end":116680,"line_start":335,"line_end":335,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":117590,"byte_end":117593,"line_start":371,"line_end":371,"column_start":12,"column_end":15},"name":"new","qualname":"<DecoderReader<R>>::new","value":"pub fn new(R) -> DecoderReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":117490,"byte_end":117562,"line_start":369,"line_end":369,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":117567,"byte_end":117578,"line_start":370,"line_end":370,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":117924,"byte_end":117936,"line_start":379,"line_end":379,"column_start":12,"column_end":24},"name":"new_with_buf","qualname":"<DecoderReader<R>>::new_with_buf","value":"pub fn new_with_buf(R, Vec<u8>) -> DecoderReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Same as `new`, but the intermediate buffer for data is specified.","sig":null,"attributes":[{"value":"/ Same as `new`, but the intermediate buffer for data is specified.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":117692,"byte_end":117761,"line_start":375,"line_end":375,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":117766,"byte_end":117769,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Note that the specified buffer will only be used up to its current","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":117774,"byte_end":117844,"line_start":377,"line_end":377,"column_start":5,"column_end":75}},{"value":"/ length. The buffer's capacity will also not grow over time.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":117849,"byte_end":117912,"line_start":378,"line_end":378,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":118617,"byte_end":118622,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"reset","qualname":"<DecoderReader<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":118095,"byte_end":118164,"line_start":385,"line_end":385,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":118169,"byte_end":118192,"line_start":386,"line_end":386,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":118197,"byte_end":118200,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":118205,"byte_end":118275,"line_start":388,"line_end":388,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":118280,"byte_end":118348,"line_start":389,"line_end":389,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":118353,"byte_end":118424,"line_start":390,"line_end":390,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":118429,"byte_end":118455,"line_start":391,"line_end":391,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":118460,"byte_end":118463,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":118468,"byte_end":118540,"line_start":393,"line_end":393,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":118545,"byte_end":118605,"line_start":394,"line_end":394,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":118800,"byte_end":118807,"line_start":401,"line_end":401,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DecoderReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":118739,"byte_end":118788,"line_start":400,"line_end":400,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":119073,"byte_end":119080,"line_start":409,"line_end":409,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DecoderReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":118873,"byte_end":118930,"line_start":405,"line_end":405,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":118935,"byte_end":118938,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":118943,"byte_end":119015,"line_start":407,"line_end":407,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":119020,"byte_end":119061,"line_start":408,"line_end":408,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":119421,"byte_end":119431,"line_start":418,"line_end":418,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DecoderReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":119154,"byte_end":119213,"line_start":413,"line_end":413,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":119218,"byte_end":119221,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":119226,"byte_end":119301,"line_start":415,"line_end":415,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":119306,"byte_end":119379,"line_start":416,"line_end":416,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":119384,"byte_end":119409,"line_start":417,"line_end":417,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":119728,"byte_end":119736,"line_start":426,"line_end":426,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DecoderReader<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":119501,"byte_end":119568,"line_start":422,"line_end":422,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":119573,"byte_end":119576,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":119581,"byte_end":119649,"line_start":424,"line_end":424,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":119654,"byte_end":119716,"line_start":425,"line_end":425,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":119873,"byte_end":119882,"line_start":431,"line_end":431,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DecoderReader<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":119794,"byte_end":119861,"line_start":430,"line_end":430,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":120729,"byte_end":120732,"line_start":466,"line_end":466,"column_start":12,"column_end":15},"name":"new","qualname":"<DecoderReaderBuf<R>>::new","value":"pub fn new(R) -> DecoderReaderBuf<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":120629,"byte_end":120701,"line_start":464,"line_end":464,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":120706,"byte_end":120717,"line_start":465,"line_end":465,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":121245,"byte_end":121250,"line_start":480,"line_end":480,"column_start":12,"column_end":17},"name":"reset","qualname":"<DecoderReaderBuf<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":120873,"byte_end":120942,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":120947,"byte_end":120970,"line_start":474,"line_end":474,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":120975,"byte_end":120978,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":120983,"byte_end":121053,"line_start":476,"line_end":476,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":121058,"byte_end":121126,"line_start":477,"line_end":477,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":121131,"byte_end":121202,"line_start":478,"line_end":478,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":121207,"byte_end":121233,"line_start":479,"line_end":479,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":121429,"byte_end":121436,"line_start":486,"line_end":486,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DecoderReaderBuf<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":121368,"byte_end":121417,"line_start":485,"line_end":485,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":121681,"byte_end":121688,"line_start":494,"line_end":494,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DecoderReaderBuf<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":121481,"byte_end":121538,"line_start":490,"line_end":490,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":121543,"byte_end":121546,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":121551,"byte_end":121623,"line_start":492,"line_end":492,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":121628,"byte_end":121669,"line_start":493,"line_end":493,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":121816,"byte_end":121826,"line_start":499,"line_end":499,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DecoderReaderBuf<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":121745,"byte_end":121804,"line_start":498,"line_end":498,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":122095,"byte_end":122103,"line_start":507,"line_end":507,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DecoderReaderBuf<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":121868,"byte_end":121935,"line_start":503,"line_end":503,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":121940,"byte_end":121943,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":121948,"byte_end":122016,"line_start":505,"line_end":505,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":122021,"byte_end":122083,"line_start":506,"line_end":506,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":122239,"byte_end":122248,"line_start":512,"line_end":512,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DecoderReaderBuf<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":122160,"byte_end":122227,"line_start":511,"line_end":511,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123235,"byte_end":123238,"line_start":549,"line_end":549,"column_start":12,"column_end":15},"name":"new","qualname":"<DecoderWriter<W>>::new","value":"pub fn new(W) -> DecoderWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will write uncompressed data to the stream.","sig":null,"attributes":[{"value":"/ Creates a new decoder which will write uncompressed data to the stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123040,"byte_end":123115,"line_start":545,"line_end":545,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123120,"byte_end":123123,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ When this decoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123128,"byte_end":123203,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123208,"byte_end":123223,"line_start":548,"line_end":548,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123437,"byte_end":123444,"line_start":556,"line_end":556,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DecoderWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123375,"byte_end":123425,"line_start":555,"line_end":555,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123721,"byte_end":123728,"line_start":564,"line_end":564,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DecoderWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123500,"byte_end":123558,"line_start":560,"line_end":560,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123563,"byte_end":123566,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123571,"byte_end":123647,"line_start":562,"line_end":562,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123652,"byte_end":123709,"line_start":563,"line_end":563,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":124169,"byte_end":124174,"line_start":575,"line_end":575,"column_start":12,"column_end":17},"name":"reset","qualname":"<DecoderWriter<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the output","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123792,"byte_end":123862,"line_start":568,"line_end":568,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123867,"byte_end":123890,"line_start":569,"line_end":569,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123895,"byte_end":123898,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123903,"byte_end":123973,"line_start":571,"line_end":571,"column_start":5,"column_end":75}},{"value":"/ output stream with the one provided, returning the previous output","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123978,"byte_end":124048,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/ stream. Future data written to this decoder will be decompressed into","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":124053,"byte_end":124126,"line_start":573,"line_end":573,"column_start":5,"column_end":78}},{"value":"/ the output stream `w`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":124131,"byte_end":124157,"line_start":574,"line_end":574,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":124782,"byte_end":124792,"line_start":591,"line_end":591,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<DecoderWriter<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":124340,"byte_end":124415,"line_start":581,"line_end":581,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":124420,"byte_end":124423,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":124428,"byte_end":124501,"line_start":583,"line_end":583,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":124506,"byte_end":124582,"line_start":584,"line_end":584,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":124587,"byte_end":124630,"line_start":585,"line_end":585,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":124635,"byte_end":124638,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":124643,"byte_end":124655,"line_start":587,"line_end":587,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":124660,"byte_end":124663,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":124668,"byte_end":124742,"line_start":589,"line_end":589,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":124747,"byte_end":124770,"line_start":590,"line_end":590,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":125433,"byte_end":125439,"line_start":605,"line_end":605,"column_start":12,"column_end":18},"name":"finish","qualname":"<DecoderWriter<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":124863,"byte_end":124917,"line_start":595,"line_end":595,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":124922,"byte_end":124925,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":124930,"byte_end":125006,"line_start":597,"line_end":597,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":125011,"byte_end":125045,"line_start":598,"line_end":598,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":125050,"byte_end":125053,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":125058,"byte_end":125134,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":125139,"byte_end":125214,"line_start":601,"line_end":601,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":125219,"byte_end":125289,"line_start":602,"line_end":602,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":125294,"byte_end":125367,"line_start":603,"line_end":603,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":125372,"byte_end":125421,"line_start":604,"line_end":604,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":125806,"byte_end":125814,"line_start":615,"line_end":615,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DecoderWriter<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed for\n decompression.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed for","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":125551,"byte_end":125621,"line_start":610,"line_end":610,"column_start":5,"column_end":75}},{"value":"/ decompression.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":125626,"byte_end":125644,"line_start":611,"line_end":611,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":125649,"byte_end":125652,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than the number of bytes","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":125657,"byte_end":125723,"line_start":613,"line_end":613,"column_start":5,"column_end":71}},{"value":"/ successfully written to this stream due to internal buffering.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":125728,"byte_end":125794,"line_start":614,"line_end":614,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":125984,"byte_end":125993,"line_start":621,"line_end":621,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DecoderWriter<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has written to its\n output stream.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has written to its","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":125877,"byte_end":125949,"line_start":619,"line_end":619,"column_start":5,"column_end":77}},{"value":"/ output stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":125954,"byte_end":125972,"line_start":620,"line_end":620,"column_start":5,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":703},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2609,"byte_end":2613,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"name":"read","qualname":"::read","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710}],"decl_id":null,"docs":" Types which operate over `Read` streams, both encoders and decoders for\n various formats.\n","sig":null,"attributes":[{"value":"/ Types which operate over `Read` streams, both encoders and decoders for","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2504,"byte_end":2579,"line_start":80,"line_end":80,"column_start":1,"column_end":76}},{"value":"/ various formats.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2580,"byte_end":2600,"line_start":81,"line_end":81,"column_start":1,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":711},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":3071,"byte_end":3076,"line_start":94,"line_end":94,"column_start":9,"column_end":14},"name":"write","qualname":"::write","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716}],"decl_id":null,"docs":" Types which operate over `Write` streams, both encoders and decoders for\n various formats.\n","sig":null,"attributes":[{"value":"/ Types which operate over `Write` streams, both encoders and decoders for","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":2965,"byte_end":3041,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/ various formats.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":3042,"byte_end":3062,"line_start":93,"line_end":93,"column_start":1,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":717},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":3438,"byte_end":3445,"line_start":104,"line_end":104,"column_start":9,"column_end":16},"name":"bufread","qualname":"::bufread","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724}],"decl_id":null,"docs":" Types which operate over `BufRead` streams, both encoders and decoders for\n various formats.\n","sig":null,"attributes":[{"value":"/ Types which operate over `BufRead` streams, both encoders and decoders for","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":3330,"byte_end":3408,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ various formats.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":3409,"byte_end":3429,"line_start":103,"line_end":103,"column_start":1,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":751},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":4804,"byte_end":4808,"line_start":137,"line_end":137,"column_start":5,"column_end":9},"name":"None","qualname":"::Compression::None","value":"Compression::None","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" No compression is to be performed, this may actually inflate data\n slightly when encoding.\n","sig":null,"attributes":[{"value":"/ No compression is to be performed, this may actually inflate data","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":4698,"byte_end":4767,"line_start":135,"line_end":135,"column_start":5,"column_end":74}},{"value":"/ slightly when encoding.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":4772,"byte_end":4799,"line_start":136,"line_end":136,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":754},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":4867,"byte_end":4871,"line_start":139,"line_end":139,"column_start":5,"column_end":9},"name":"Fast","qualname":"::Compression::Fast","value":"Compression::Fast","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" Optimize for the best speed of encoding.\n","sig":null,"attributes":[{"value":"/ Optimize for the best speed of encoding.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":4818,"byte_end":4862,"line_start":138,"line_end":138,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":757},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":4934,"byte_end":4938,"line_start":141,"line_end":141,"column_start":5,"column_end":9},"name":"Best","qualname":"::Compression::Best","value":"Compression::Best","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" Optimize for the size of data being encoded.\n","sig":null,"attributes":[{"value":"/ Optimize for the size of data being encoded.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":4881,"byte_end":4929,"line_start":140,"line_end":140,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":760},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":5022,"byte_end":5029,"line_start":143,"line_end":143,"column_start":5,"column_end":12},"name":"Default","qualname":"::Compression::Default","value":"Compression::Default","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" Choose the default compression, a balance between speed and size.\n","sig":null,"attributes":[{"value":"/ Choose the default compression, a balance between speed and size.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":4948,"byte_end":5017,"line_start":142,"line_end":142,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":750},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":4680,"byte_end":4691,"line_start":134,"line_end":134,"column_start":10,"column_end":21},"name":"Compression","qualname":"::Compression","value":"pub enum Compression {\n\n    /// No compression is to be performed, this may actually inflate data\n    /// slightly when encoding.\n    None = ,\n\n    /// Optimize for the best speed of encoding.\n    Fast = ,\n\n    /// Optimize for the size of data being encoded.\n    Best = ,\n\n    /// Choose the default compression, a balance between speed and size.\n    Default = ,\n}","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":757},{"krate":0,"index":760}],"decl_id":null,"docs":" When compressing data, the compression level can be specified by a value in\n this enum.\n","sig":null,"attributes":[{"value":"/ When compressing data, the compression level can be specified by a value in","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":4553,"byte_end":4632,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ this enum.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":4633,"byte_end":4647,"line_start":132,"line_end":132,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":728},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":5114,"byte_end":5126,"line_start":147,"line_end":147,"column_start":11,"column_end":23},"name":"FlateReadExt","qualname":"::FlateReadExt","value":"FlateReadExt: Read + Sized","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734}],"decl_id":null,"docs":" A helper trait to create encoder/decoders with method syntax.\n","sig":null,"attributes":[{"value":"/ A helper trait to create encoder/decoders with method syntax.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":5038,"byte_end":5103,"line_start":146,"line_end":146,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":5253,"byte_end":5262,"line_start":150,"line_end":150,"column_start":8,"column_end":17},"name":"gz_encode","qualname":"::FlateReadExt::gz_encode","value":"pub fn gz_encode(Self, Compression) -> read::GzEncoder<Self>","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":" Consume this reader to create a compression stream at the specified\n compression level.\n","sig":null,"attributes":[{"value":"/ Consume this reader to create a compression stream at the specified","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":5147,"byte_end":5218,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"/ compression level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":5223,"byte_end":5245,"line_start":149,"line_end":149,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":5445,"byte_end":5454,"line_start":155,"line_end":155,"column_start":8,"column_end":17},"name":"gz_decode","qualname":"::FlateReadExt::gz_decode","value":"pub fn gz_decode(Self) -> io::Result<read::GzDecoder<Self>>","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":" Consume this reader to create a decompression stream of this stream.\n","sig":null,"attributes":[{"value":"/ Consume this reader to create a decompression stream of this stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":5365,"byte_end":5437,"line_start":154,"line_end":154,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":5652,"byte_end":5663,"line_start":161,"line_end":161,"column_start":8,"column_end":19},"name":"zlib_encode","qualname":"::FlateReadExt::zlib_encode","value":"pub fn zlib_encode(Self, Compression) -> read::ZlibEncoder<Self>","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":" Consume this reader to create a compression stream at the specified\n compression level.\n","sig":null,"attributes":[{"value":"/ Consume this reader to create a compression stream at the specified","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":5546,"byte_end":5617,"line_start":159,"line_end":159,"column_start":5,"column_end":76}},{"value":"/ compression level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":5622,"byte_end":5644,"line_start":160,"line_end":160,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":5850,"byte_end":5861,"line_start":166,"line_end":166,"column_start":8,"column_end":19},"name":"zlib_decode","qualname":"::FlateReadExt::zlib_decode","value":"pub fn zlib_decode(Self) -> read::ZlibDecoder<Self>","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":" Consume this reader to create a decompression stream of this stream.\n","sig":null,"attributes":[{"value":"/ Consume this reader to create a decompression stream of this stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":5770,"byte_end":5842,"line_start":165,"line_end":165,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":6051,"byte_end":6065,"line_start":172,"line_end":172,"column_start":8,"column_end":22},"name":"deflate_encode","qualname":"::FlateReadExt::deflate_encode","value":"pub fn deflate_encode(Self, Compression) -> read::DeflateEncoder<Self>","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":" Consume this reader to create a compression stream at the specified\n compression level.\n","sig":null,"attributes":[{"value":"/ Consume this reader to create a compression stream at the specified","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":5945,"byte_end":6016,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ compression level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":6021,"byte_end":6043,"line_start":171,"line_end":171,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":6258,"byte_end":6272,"line_start":177,"line_end":177,"column_start":8,"column_end":22},"name":"deflate_decode","qualname":"::FlateReadExt::deflate_decode","value":"pub fn deflate_decode(Self) -> read::DeflateDecoder<Self>","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":" Consume this reader to create a decompression stream of this stream.\n","sig":null,"attributes":[{"value":"/ Consume this reader to create a decompression stream of this stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":6178,"byte_end":6250,"line_start":176,"line_end":176,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":735},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":6436,"byte_end":6449,"line_start":183,"line_end":183,"column_start":11,"column_end":24},"name":"FlateWriteExt","qualname":"::FlateWriteExt","value":"FlateWriteExt: Write + Sized","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740}],"decl_id":null,"docs":" A helper trait to create encoder/decoders with method syntax.\n","sig":null,"attributes":[{"value":"/ A helper trait to create encoder/decoders with method syntax.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":6360,"byte_end":6425,"line_start":182,"line_end":182,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":6577,"byte_end":6586,"line_start":186,"line_end":186,"column_start":8,"column_end":17},"name":"gz_encode","qualname":"::FlateWriteExt::gz_encode","value":"pub fn gz_encode(Self, Compression) -> write::GzEncoder<Self>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Consume this writer to create a compression stream at the specified\n compression level.\n","sig":null,"attributes":[{"value":"/ Consume this writer to create a compression stream at the specified","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":6471,"byte_end":6542,"line_start":184,"line_end":184,"column_start":5,"column_end":76}},{"value":"/ compression level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":6547,"byte_end":6569,"line_start":185,"line_end":185,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":7038,"byte_end":7049,"line_start":198,"line_end":198,"column_start":8,"column_end":19},"name":"zlib_encode","qualname":"::FlateWriteExt::zlib_encode","value":"pub fn zlib_encode(Self, Compression) -> write::ZlibEncoder<Self>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Consume this writer to create a compression stream at the specified\n compression level.\n","sig":null,"attributes":[{"value":"/ Consume this writer to create a compression stream at the specified","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":6932,"byte_end":7003,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/ compression level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":7008,"byte_end":7030,"line_start":197,"line_end":197,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":7238,"byte_end":7249,"line_start":203,"line_end":203,"column_start":8,"column_end":19},"name":"zlib_decode","qualname":"::FlateWriteExt::zlib_decode","value":"pub fn zlib_decode(Self) -> write::ZlibDecoder<Self>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Consume this writer to create a decompression stream of this stream.\n","sig":null,"attributes":[{"value":"/ Consume this writer to create a decompression stream of this stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":7158,"byte_end":7230,"line_start":202,"line_end":202,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":7441,"byte_end":7455,"line_start":209,"line_end":209,"column_start":8,"column_end":22},"name":"deflate_encode","qualname":"::FlateWriteExt::deflate_encode","value":"pub fn deflate_encode(Self, Compression) -> write::DeflateEncoder<Self>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Consume this writer to create a compression stream at the specified\n compression level.\n","sig":null,"attributes":[{"value":"/ Consume this writer to create a compression stream at the specified","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":7335,"byte_end":7406,"line_start":207,"line_end":207,"column_start":5,"column_end":76}},{"value":"/ compression level.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":7411,"byte_end":7433,"line_start":208,"line_end":208,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":7650,"byte_end":7664,"line_start":214,"line_end":214,"column_start":8,"column_end":22},"name":"deflate_decode","qualname":"::FlateWriteExt::deflate_decode","value":"pub fn deflate_decode(Self) -> write::DeflateDecoder<Self>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Consume this writer to create a decompression stream of this stream.\n","sig":null,"attributes":[{"value":"/ Consume this writer to create a decompression stream of this stream.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":7570,"byte_end":7642,"line_start":213,"line_end":213,"column_start":5,"column_end":77}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/bufreader.rs","byte_start":9000,"byte_end":9009,"line_start":23,"line_end":23,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/bufreader.rs","byte_start":9687,"byte_end":9696,"line_start":56,"line_end":56,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/bufreader.rs","byte_start":10247,"byte_end":10256,"line_start":73,"line_end":73,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":11056,"byte_end":11059,"line_start":21,"line_end":21,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":12242,"byte_end":12251,"line_start":63,"line_end":63,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":13047,"byte_end":13056,"line_start":98,"line_end":98,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":13265,"byte_end":13274,"line_start":106,"line_end":106,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":15456,"byte_end":15469,"line_start":66,"line_end":66,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":19425,"byte_end":19438,"line_start":166,"line_end":166,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":19870,"byte_end":19883,"line_start":184,"line_end":184,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":20107,"byte_end":20120,"line_start":194,"line_end":194,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":22398,"byte_end":22411,"line_start":257,"line_end":257,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":22630,"byte_end":22643,"line_start":267,"line_end":267,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":23037,"byte_end":23053,"line_start":284,"line_end":284,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":24916,"byte_end":24932,"line_start":341,"line_end":341,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":25192,"byte_end":25208,"line_start":351,"line_end":351,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":25600,"byte_end":25613,"line_start":368,"line_end":368,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":28080,"byte_end":28093,"line_start":436,"line_end":436,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":28314,"byte_end":28327,"line_start":446,"line_end":446,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":28721,"byte_end":28737,"line_start":463,"line_end":463,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":30707,"byte_end":30723,"line_start":525,"line_end":525,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":30985,"byte_end":31001,"line_start":535,"line_end":535,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":31394,"byte_end":31407,"line_start":552,"line_end":552,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":34680,"byte_end":34693,"line_start":638,"line_end":638,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":35125,"byte_end":35138,"line_start":656,"line_end":656,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/ffi.rs","byte_start":44918,"byte_end":44931,"line_start":108,"line_end":108,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/ffi.rs","byte_start":45100,"byte_end":45113,"line_start":116,"line_end":116,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/ffi.rs","byte_start":45256,"byte_end":45269,"line_start":124,"line_end":124,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":52190,"byte_end":52197,"line_start":131,"line_end":131,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56042,"byte_end":56055,"line_start":255,"line_end":255,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":58956,"byte_end":58969,"line_start":333,"line_end":333,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":59587,"byte_end":59600,"line_start":356,"line_end":356,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":59828,"byte_end":59841,"line_start":366,"line_end":366,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":59981,"byte_end":59994,"line_start":374,"line_end":374,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":61292,"byte_end":61305,"line_start":414,"line_end":414,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":61449,"byte_end":61462,"line_start":420,"line_end":420,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":61669,"byte_end":61685,"line_start":430,"line_end":430,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":63354,"byte_end":63370,"line_start":477,"line_end":477,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":64060,"byte_end":64076,"line_start":501,"line_end":501,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":64280,"byte_end":64293,"line_start":511,"line_end":511,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":65393,"byte_end":65406,"line_start":547,"line_end":547,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":65546,"byte_end":65559,"line_start":553,"line_end":553,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":65763,"byte_end":65781,"line_start":563,"line_end":563,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":66986,"byte_end":67004,"line_start":600,"line_end":600,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":67144,"byte_end":67162,"line_start":606,"line_end":606,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":67369,"byte_end":67385,"line_start":616,"line_end":616,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":69613,"byte_end":69629,"line_start":690,"line_end":690,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":69912,"byte_end":69928,"line_start":702,"line_end":702,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":70135,"byte_end":70156,"line_start":712,"line_end":712,"column_start":18,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":73016,"byte_end":73037,"line_start":803,"line_end":803,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":73444,"byte_end":73465,"line_start":818,"line_end":818,"column_start":36,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":73660,"byte_end":73666,"line_start":828,"line_end":828,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zio.rs","byte_start":80684,"byte_end":80692,"line_start":22,"line_end":22,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zio.rs","byte_start":81158,"byte_end":81168,"line_start":35,"line_end":35,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zio.rs","byte_start":82976,"byte_end":82982,"line_start":84,"line_end":84,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zio.rs","byte_start":84444,"byte_end":84450,"line_start":141,"line_end":141,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zio.rs","byte_start":86466,"byte_end":86472,"line_start":191,"line_end":191,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87917,"byte_end":87923,"line_start":45,"line_end":45,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87965,"byte_end":87971,"line_start":46,"line_end":46,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":92003,"byte_end":92011,"line_start":141,"line_end":141,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":96759,"byte_end":96769,"line_start":259,"line_end":259,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":102365,"byte_end":102374,"line_start":401,"line_end":401,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":102468,"byte_end":102473,"line_start":405,"line_end":405,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":102602,"byte_end":102611,"line_start":411,"line_end":411,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":102735,"byte_end":102746,"line_start":417,"line_end":417,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":102873,"byte_end":102886,"line_start":422,"line_end":422,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":103023,"byte_end":103029,"line_start":428,"line_end":428,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107339,"byte_end":107352,"line_start":66,"line_end":66,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":111307,"byte_end":111320,"line_start":166,"line_end":166,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":111744,"byte_end":111757,"line_start":184,"line_end":184,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":111975,"byte_end":111988,"line_start":194,"line_end":194,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":114266,"byte_end":114279,"line_start":257,"line_end":257,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":114498,"byte_end":114511,"line_start":267,"line_end":267,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":114905,"byte_end":114921,"line_start":284,"line_end":284,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":116783,"byte_end":116799,"line_start":341,"line_end":341,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":117059,"byte_end":117075,"line_start":351,"line_end":351,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":117467,"byte_end":117480,"line_start":368,"line_end":368,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":119962,"byte_end":119975,"line_start":436,"line_end":436,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":120196,"byte_end":120209,"line_start":446,"line_end":446,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":120603,"byte_end":120619,"line_start":463,"line_end":463,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":122330,"byte_end":122346,"line_start":517,"line_end":517,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":122608,"byte_end":122624,"line_start":527,"line_end":527,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123017,"byte_end":123030,"line_start":544,"line_end":544,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":126080,"byte_end":126093,"line_start":626,"line_end":626,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":126525,"byte_end":126538,"line_start":644,"line_end":644,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":7785,"byte_end":7786,"line_start":219,"line_end":219,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":7823,"byte_end":7824,"line_start":220,"line_end":220,"column_start":34,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/bufreader.rs","byte_start":9000,"byte_end":9009,"line_start":23,"line_end":23,"column_start":15,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":22},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/bufreader.rs","byte_start":9687,"byte_end":9696,"line_start":56,"line_end":56,"column_start":24,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":22},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/bufreader.rs","byte_start":10247,"byte_end":10256,"line_start":73,"line_end":73,"column_start":27,"column_end":36},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":22},"to":{"krate":1,"index":3281}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":11056,"byte_end":11059,"line_start":21,"line_end":21,"column_start":6,"column_end":9},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":48},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":12242,"byte_end":12251,"line_start":63,"line_end":63,"column_start":15,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":51},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":13047,"byte_end":13056,"line_start":98,"line_end":98,"column_start":24,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":51},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/crc.rs","byte_start":13265,"byte_end":13274,"line_start":106,"line_end":106,"column_start":30,"column_end":39},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":51},"to":{"krate":1,"index":3281}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":15456,"byte_end":15469,"line_start":66,"line_end":66,"column_start":16,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":86},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":19425,"byte_end":19438,"line_start":166,"line_end":166,"column_start":26,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":86},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":19870,"byte_end":19883,"line_start":184,"line_end":184,"column_start":32,"column_end":45},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":86},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":20107,"byte_end":20120,"line_start":194,"line_end":194,"column_start":15,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":89},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":22398,"byte_end":22411,"line_start":257,"line_end":257,"column_start":24,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":89},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":22630,"byte_end":22643,"line_start":267,"line_end":267,"column_start":33,"column_end":46},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":89},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":23037,"byte_end":23053,"line_start":284,"line_end":284,"column_start":18,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":92},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":24916,"byte_end":24932,"line_start":341,"line_end":341,"column_start":27,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":92},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":25192,"byte_end":25208,"line_start":351,"line_end":351,"column_start":36,"column_end":52},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":92},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":25600,"byte_end":25613,"line_start":368,"line_end":368,"column_start":15,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":96},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":28080,"byte_end":28093,"line_start":436,"line_end":436,"column_start":24,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":96},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":28314,"byte_end":28327,"line_start":446,"line_end":446,"column_start":33,"column_end":46},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":96},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":28721,"byte_end":28737,"line_start":463,"line_end":463,"column_start":18,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":99},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":30707,"byte_end":30723,"line_start":525,"line_end":525,"column_start":27,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":99},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":30985,"byte_end":31001,"line_start":535,"line_end":535,"column_start":36,"column_end":52},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":99},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":31394,"byte_end":31407,"line_start":552,"line_end":552,"column_start":16,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":34680,"byte_end":34693,"line_start":638,"line_end":638,"column_start":26,"column_end":39},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":103},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/deflate.rs","byte_start":35125,"byte_end":35138,"line_start":656,"line_end":656,"column_start":32,"column_end":45},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":103},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/ffi.rs","byte_start":44918,"byte_end":44931,"line_start":108,"line_end":108,"column_start":22,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":219},"to":{"krate":2,"index":2062}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/ffi.rs","byte_start":45100,"byte_end":45113,"line_start":116,"line_end":116,"column_start":20,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":219},"to":{"krate":2,"index":2274}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/ffi.rs","byte_start":45256,"byte_end":45269,"line_start":124,"line_end":124,"column_start":23,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":219},"to":{"krate":2,"index":2287}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":52190,"byte_end":52197,"line_start":131,"line_end":131,"column_start":6,"column_end":13},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":56042,"byte_end":56055,"line_start":255,"line_end":255,"column_start":16,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":58956,"byte_end":58969,"line_start":333,"line_end":333,"column_start":26,"column_end":39},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":257},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":59587,"byte_end":59600,"line_start":356,"line_end":356,"column_start":32,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":257},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":59828,"byte_end":59841,"line_start":366,"line_end":366,"column_start":25,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":2298}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":59981,"byte_end":59994,"line_start":374,"line_end":374,"column_start":15,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":61292,"byte_end":61305,"line_start":414,"line_end":414,"column_start":24,"column_end":37},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":263},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":61449,"byte_end":61462,"line_start":420,"line_end":420,"column_start":33,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":263},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":61669,"byte_end":61685,"line_start":430,"line_end":430,"column_start":18,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":63354,"byte_end":63370,"line_start":477,"line_end":477,"column_start":27,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":266},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":64060,"byte_end":64076,"line_start":501,"line_end":501,"column_start":36,"column_end":52},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":266},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":64280,"byte_end":64293,"line_start":511,"line_end":511,"column_start":15,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":65393,"byte_end":65406,"line_start":547,"line_end":547,"column_start":24,"column_end":37},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":277},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":65546,"byte_end":65559,"line_start":553,"line_end":553,"column_start":33,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":277},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":65763,"byte_end":65781,"line_start":563,"line_end":563,"column_start":15,"column_end":33},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":66986,"byte_end":67004,"line_start":600,"line_end":600,"column_start":24,"column_end":42},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":67144,"byte_end":67162,"line_start":606,"line_end":606,"column_start":33,"column_end":51},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":67369,"byte_end":67385,"line_start":616,"line_end":616,"column_start":18,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":69613,"byte_end":69629,"line_start":690,"line_end":690,"column_start":27,"column_end":43},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":283},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":69912,"byte_end":69928,"line_start":702,"line_end":702,"column_start":36,"column_end":52},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":283},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":70135,"byte_end":70156,"line_start":712,"line_end":712,"column_start":18,"column_end":39},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":73016,"byte_end":73037,"line_start":803,"line_end":803,"column_start":27,"column_end":48},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":288},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":73444,"byte_end":73465,"line_start":818,"line_end":818,"column_start":36,"column_end":57},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":288},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/gz.rs","byte_start":73660,"byte_end":73666,"line_start":828,"line_end":828,"column_start":6,"column_end":12},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zio.rs","byte_start":80684,"byte_end":80692,"line_start":22,"line_end":22,"column_start":14,"column_end":22},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":502},"to":{"krate":0,"index":453}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zio.rs","byte_start":81158,"byte_end":81168,"line_start":35,"line_end":35,"column_start":14,"column_end":24},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":504},"to":{"krate":0,"index":453}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zio.rs","byte_start":82976,"byte_end":82982,"line_start":84,"line_end":84,"column_start":24,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zio.rs","byte_start":84444,"byte_end":84450,"line_start":141,"line_end":141,"column_start":34,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":447},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zio.rs","byte_start":86466,"byte_end":86472,"line_start":191,"line_end":191,"column_start":33,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":447},"to":{"krate":2,"index":2298}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87917,"byte_end":87923,"line_start":45,"line_end":45,"column_start":36,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":87965,"byte_end":87971,"line_start":46,"line_end":46,"column_start":36,"column_end":42},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":92003,"byte_end":92011,"line_start":141,"line_end":141,"column_start":6,"column_end":14},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":96759,"byte_end":96769,"line_start":259,"line_end":259,"column_start":6,"column_end":16},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":102365,"byte_end":102374,"line_start":401,"line_end":401,"column_start":16,"column_end":25},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":745},"to":{"krate":1,"index":1751}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":102468,"byte_end":102473,"line_start":405,"line_end":405,"column_start":30,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":1,"index":2785},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":102602,"byte_end":102611,"line_start":411,"line_end":411,"column_start":23,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":745},"to":{"krate":2,"index":6951}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":102735,"byte_end":102746,"line_start":417,"line_end":417,"column_start":20,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":518},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":102873,"byte_end":102886,"line_start":422,"line_end":422,"column_start":20,"column_end":33},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":519},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/mem.rs","byte_start":103023,"byte_end":103029,"line_start":428,"line_end":428,"column_start":29,"column_end":35},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":2298}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":107339,"byte_end":107352,"line_start":66,"line_end":66,"column_start":16,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":111307,"byte_end":111320,"line_start":166,"line_end":166,"column_start":26,"column_end":39},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":583},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":111744,"byte_end":111757,"line_start":184,"line_end":184,"column_start":32,"column_end":45},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":583},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":111975,"byte_end":111988,"line_start":194,"line_end":194,"column_start":15,"column_end":28},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":114266,"byte_end":114279,"line_start":257,"line_end":257,"column_start":24,"column_end":37},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":586},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":114498,"byte_end":114511,"line_start":267,"line_end":267,"column_start":33,"column_end":46},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":586},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":114905,"byte_end":114921,"line_start":284,"line_end":284,"column_start":18,"column_end":34},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":116783,"byte_end":116799,"line_start":341,"line_end":341,"column_start":27,"column_end":43},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":589},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":117059,"byte_end":117075,"line_start":351,"line_end":351,"column_start":36,"column_end":52},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":589},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":117467,"byte_end":117480,"line_start":368,"line_end":368,"column_start":15,"column_end":28},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":119962,"byte_end":119975,"line_start":436,"line_end":436,"column_start":24,"column_end":37},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":593},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":120196,"byte_end":120209,"line_start":446,"line_end":446,"column_start":33,"column_end":46},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":593},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":120603,"byte_end":120619,"line_start":463,"line_end":463,"column_start":18,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":122330,"byte_end":122346,"line_start":517,"line_end":517,"column_start":27,"column_end":43},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":122608,"byte_end":122624,"line_start":527,"line_end":527,"column_start":36,"column_end":52},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":123017,"byte_end":123030,"line_start":544,"line_end":544,"column_start":16,"column_end":29},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":126080,"byte_end":126093,"line_start":626,"line_end":626,"column_start":26,"column_end":39},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/zlib.rs","byte_start":126525,"byte_end":126538,"line_start":644,"line_end":644,"column_start":32,"column_end":45},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":3196}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":5128,"byte_end":5132,"line_start":147,"line_end":147,"column_start":25,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":3196},"to":{"krate":0,"index":728}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":5135,"byte_end":5140,"line_start":147,"line_end":147,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2079},"to":{"krate":0,"index":728}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":6451,"byte_end":6456,"line_start":183,"line_end":183,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":3257},"to":{"krate":0,"index":735}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":6459,"byte_end":6464,"line_start":183,"line_end":183,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2079},"to":{"krate":0,"index":735}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":7785,"byte_end":7786,"line_start":219,"line_end":219,"column_start":32,"column_end":33},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":742},"to":{"krate":0,"index":728}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.19/src/lib.rs","byte_start":7823,"byte_end":7824,"line_start":220,"line_end":220,"column_start":34,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":744},"to":{"krate":0,"index":735}}]}