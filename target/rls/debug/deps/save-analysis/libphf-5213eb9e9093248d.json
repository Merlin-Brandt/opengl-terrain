{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21","program":"/home/merlin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","phf","/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=5213eb9e9093248d","-C","extra-filename=-5213eb9e9093248d","--out-dir","/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps","-L","dependency=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps","--extern","phf_shared=/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libphf_shared-2798691a7c404fae.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/merlin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/merlin/Projects/Programming/Rust/tetras/target/rls/debug/deps/libphf-5213eb9e9093248d.rmeta"},"prelude":{"crate_id":{"name":"phf","disambiguator":[12502136599564924454,7456607026231350415]},"crate_root":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src","external_crates":[{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[761217931017169021,11182540429948991214]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2858088706689600179,17176650857302713463]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15879356389475821678,5643460802079966270]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8920863043171661139,6394972819860350927]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7444524629517225000,3862632196027588969]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5618285707243958873,10527758992658711681]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15786611459077781418,3427959288485188730]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7447291644365204408,1470667821728193545]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6110035509052048891,1769159197608489149]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2517392378542245850,1007682534799069383]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10841319041269114641,5435836511512932455]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11288057705607810041,2650294536215064940]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3615958118357796166,6340715783279141278]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5192402504599619502,9026648258735454425]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[18157078792379649936,5967302931976128037]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[7273518522570529581,7645160771462661682]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14392049376104722820,4331661258852677409]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":18,"id":{"name":"phf_shared","disambiguator":[13493823540058136944,6694510945480412289]}},{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","num":19,"id":{"name":"siphasher","disambiguator":[14807039005414626440,3693488939454433785]}}],"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":0,"byte_end":1275,"line_start":1,"line_end":53,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":16},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":495,"byte_end":502,"line_start":17,"line_end":17,"column_start":21,"column_end":28},"alias_span":null,"name":"PhfHash","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":21},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":532,"byte_end":535,"line_start":19,"line_end":19,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":142},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":565,"byte_end":568,"line_start":21,"line_end":21,"column_start":14,"column_end":17},"alias_span":null,"name":"Set","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":198},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":606,"byte_end":616,"line_start":23,"line_end":23,"column_start":22,"column_end":32},"alias_span":null,"name":"OrderedMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":329},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":654,"byte_end":664,"line_start":25,"line_end":25,"column_start":22,"column_end":32},"alias_span":null,"name":"OrderedSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":0,"byte_end":1275,"line_start":1,"line_end":53,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":135},{"krate":0,"index":188},{"krate":0,"index":321},{"krate":0,"index":379},{"krate":0,"index":387}],"decl_id":null,"docs":" Compile time optimized maps and sets.","sig":null,"attributes":[{"value":"/ Compile time optimized maps and sets.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":0,"byte_end":41,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":42,"byte_end":45,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ PHF data structures can be generated via the syntax extensions in the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":46,"byte_end":119,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ `phf_macros` crate or via code generation in the `phf_codegen` crate. See","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":120,"byte_end":197,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ the documentation of those crates for more details.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":198,"byte_end":253,"line_start":5,"line_end":5,"column_start":1,"column_end":56}},{"value":"warn(missing_docs)","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":306,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::map","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":27},{"krate":0,"index":31},{"krate":0,"index":38},{"krate":0,"index":59},{"krate":0,"index":66},{"krate":0,"index":71},{"krate":0,"index":79},{"krate":0,"index":85},{"krate":0,"index":89},{"krate":0,"index":94},{"krate":0,"index":102},{"krate":0,"index":108},{"krate":0,"index":112},{"krate":0,"index":117},{"krate":0,"index":125},{"krate":0,"index":131}],"decl_id":null,"docs":" An immutable map constructed at compile time.\n","sig":null,"attributes":[{"value":"/ An immutable map constructed at compile time.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":1277,"byte_end":1326,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":21},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":1767,"byte_end":1770,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"Map","qualname":"::map::Map","value":"Map { key, disps, entries }","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26}],"decl_id":null,"docs":" An immutable map constructed at compile time.","sig":null,"attributes":[{"value":"/ An immutable map constructed at compile time.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":1482,"byte_end":1531,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":1532,"byte_end":1535,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":1536,"byte_end":1547,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":1548,"byte_end":1551,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The fields of this struct are public so that they may be initialized by the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":1552,"byte_end":1631,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ `phf_map!` macro and code generation. They are subject to change at any","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":1632,"byte_end":1707,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ time and should never be accessed directly.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":1708,"byte_end":1755,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":24},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":1824,"byte_end":1827,"line_start":19,"line_end":19,"column_start":9,"column_end":12},"name":"key","qualname":"::map::Map::key","value":"u64","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":25},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":1861,"byte_end":1866,"line_start":21,"line_end":21,"column_start":9,"column_end":14},"name":"disps","qualname":"::map::Map::disps","value":"Slice<(u32, u32)>","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":26},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":1914,"byte_end":1921,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"name":"entries","qualname":"::map::Map::entries","value":"Slice<(K, V)>","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":2421,"byte_end":2429,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Map<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Map` is empty.\n","sig":null,"attributes":[{"value":"/ Returns true if the `Map` is empty.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":2370,"byte_end":2409,"line_start":41,"line_end":41,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":2541,"byte_end":2544,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<Map<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of entries in the `Map`.\n","sig":null,"attributes":[{"value":"/ Returns the number of entries in the `Map`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":2482,"byte_end":2529,"line_start":46,"line_end":46,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":2653,"byte_end":2665,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<Map<K, V>>::contains_key","value":"pub fn contains_key<T: ?Sized>(&Self, &T) -> bool where T: Eq + PhfHash,\nK: Borrow<T>","parent":null,"children":[],"decl_id":null,"docs":" Determines if `key` is in the `Map`.\n","sig":null,"attributes":[{"value":"/ Determines if `key` is in the `Map`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":2601,"byte_end":2641,"line_start":51,"line_end":51,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":2876,"byte_end":2879,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"get","qualname":"<Map<K, V>>::get","value":"pub fn get<T: ?Sized>(&Self, &T) -> Option<&V> where T: Eq + PhfHash,\nK: Borrow<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value that `key` maps to.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the value that `key` maps to.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":2808,"byte_end":2864,"line_start":59,"line_end":59,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":3194,"byte_end":3201,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"get_key","qualname":"<Map<K, V>>::get_key","value":"pub fn get_key<T: ?Sized>(&Self, &T) -> Option<&K> where T: Eq + PhfHash,\nK: Borrow<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the map's internal static instance of the given\n key.","sig":null,"attributes":[{"value":"/ Returns a reference to the map's internal static instance of the given","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":3037,"byte_end":3111,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/ key.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":3116,"byte_end":3124,"line_start":68,"line_end":68,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":3129,"byte_end":3132,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This can be useful for interning schemes.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":3137,"byte_end":3182,"line_start":70,"line_end":70,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":3426,"byte_end":3435,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"get_entry","qualname":"<Map<K, V>>::get_entry","value":"pub fn get_entry<T: ?Sized>(&Self, &T) -> Option<(&K, &V)> where T: Eq +\nPhfHash, K: Borrow<T>","parent":null,"children":[],"decl_id":null,"docs":" Like `get`, but returns both the key and the value.\n","sig":null,"attributes":[{"value":"/ Like `get`, but returns both the key and the value.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":3359,"byte_end":3414,"line_start":78,"line_end":78,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":4029,"byte_end":4036,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"entries","qualname":"<Map<K, V>>::entries","value":"pub fn entries<'a>(&'a Self) -> Entries","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the key/value pairs in the map.","sig":null,"attributes":[{"value":"/ Returns an iterator over the key/value pairs in the map.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":3887,"byte_end":3947,"line_start":94,"line_end":94,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":3952,"byte_end":3955,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Entries are returned in an arbitrary but fixed order.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":3960,"byte_end":4017,"line_start":96,"line_end":96,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":4259,"byte_end":4263,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map<K, V>>::keys","value":"pub fn keys<'a>(&'a Self) -> Keys","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the keys in the map.","sig":null,"attributes":[{"value":"/ Returns an iterator over the keys in the map.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":4131,"byte_end":4180,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":4185,"byte_end":4188,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Keys are returned in an arbitrary but fixed order.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":4193,"byte_end":4247,"line_start":103,"line_end":103,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":4479,"byte_end":4485,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"values","qualname":"<Map<K, V>>::values","value":"pub fn values<'a>(&'a Self) -> Values","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the values in the map.","sig":null,"attributes":[{"value":"/ Returns an iterator over the values in the map.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":4347,"byte_end":4398,"line_start":108,"line_end":108,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":4403,"byte_end":4406,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Values are returned in an arbitrary but fixed order.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":4411,"byte_end":4467,"line_start":110,"line_end":110,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":4833,"byte_end":4840,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"Entries","qualname":"::map::Entries","value":"Entries {  }","parent":null,"children":[{"krate":0,"index":70}],"decl_id":null,"docs":" An iterator over the key/value pairs in a `Map`.\n","sig":null,"attributes":[{"value":"/ An iterator over the key/value pairs in a `Map`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":4769,"byte_end":4821,"line_start":125,"line_end":125,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":89},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":5472,"byte_end":5476,"line_start":151,"line_end":151,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":93}],"decl_id":null,"docs":" An iterator over the keys in a `Map`.\n","sig":null,"attributes":[{"value":"/ An iterator over the keys in a `Map`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":5419,"byte_end":5460,"line_start":150,"line_end":150,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":112},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":6042,"byte_end":6048,"line_start":176,"line_end":176,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":116}],"decl_id":null,"docs":" An iterator over the values in a `Map`.\n","sig":null,"attributes":[{"value":"/ An iterator over the values in a `Map`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":5987,"byte_end":6030,"line_start":175,"line_end":175,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":135},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::set","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":158},{"krate":0,"index":165},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":181},{"krate":0,"index":185}],"decl_id":null,"docs":" An immutable set constructed at compile time.\n","sig":null,"attributes":[{"value":"/ An immutable set constructed at compile time.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":6565,"byte_end":6614,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":142},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":7004,"byte_end":7007,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"Set","qualname":"::set::Set","value":"Set { map }","parent":null,"children":[{"krate":0,"index":144}],"decl_id":null,"docs":" An immutable set constructed at compile time.","sig":null,"attributes":[{"value":"/ An immutable set constructed at compile time.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":6719,"byte_end":6768,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":6769,"byte_end":6772,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":6773,"byte_end":6784,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":6785,"byte_end":6788,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The fields of this struct are public so that they may be initialized by the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":6789,"byte_end":6868,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ `phf_set!` macro and code generation. They are subject to change at any","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":6869,"byte_end":6944,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ time and should never be accessed directly.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":6945,"byte_end":6992,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":144},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":7049,"byte_end":7052,"line_start":19,"line_end":19,"column_start":9,"column_end":12},"name":"map","qualname":"::set::Set::map","value":"map::Map<T, ()>","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":7319,"byte_end":7322,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"len","qualname":"<Set<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the `Set`.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the `Set`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":7259,"byte_end":7307,"line_start":29,"line_end":29,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":7438,"byte_end":7446,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Set<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Set` contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns true if the `Set` contains no elements.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":7375,"byte_end":7426,"line_start":34,"line_end":34,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":7656,"byte_end":7663,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_key","qualname":"<Set<T>>::get_key","value":"pub fn get_key<U: ?Sized>(&Self, &U) -> Option<&T> where U: Eq + PhfHash,\nT: Borrow<U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the set's internal static instance of the given\n key.","sig":null,"attributes":[{"value":"/ Returns a reference to the set's internal static instance of the given","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":7499,"byte_end":7573,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ key.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":7578,"byte_end":7586,"line_start":40,"line_end":40,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":7591,"byte_end":7594,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This can be useful for interning schemes.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":7599,"byte_end":7644,"line_start":42,"line_end":42,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":7866,"byte_end":7874,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"contains","qualname":"<Set<T>>::contains","value":"pub fn contains<U: ?Sized>(&Self, &U) -> bool where U: Eq + PhfHash,\nT: Borrow<U>","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `value` is in the `Set`.\n","sig":null,"attributes":[{"value":"/ Returns true if `value` is in the `Set`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":7810,"byte_end":7854,"line_start":50,"line_end":50,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":8156,"byte_end":8160,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"iter","qualname":"<Set<T>>::iter","value":"pub fn iter<'a>(&'a Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the values in the set.","sig":null,"attributes":[{"value":"/ Returns an iterator over the values in the set.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":8024,"byte_end":8075,"line_start":58,"line_end":58,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":8080,"byte_end":8083,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Values are returned in an arbitrary but fixed order.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":8088,"byte_end":8144,"line_start":60,"line_end":60,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":8354,"byte_end":8365,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<Set<T>>::is_disjoint","value":"pub fn is_disjoint(&Self, &Set<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `other` shares no elements with `self`.\n","sig":null,"attributes":[{"value":"/ Returns true if `other` shares no elements with `self`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":8283,"byte_end":8342,"line_start":67,"line_end":67,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":8536,"byte_end":8545,"line_start":73,"line_end":73,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<Set<T>>::is_subset","value":"pub fn is_subset(&Self, &Set<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `other` contains all values in `self`.\n","sig":null,"attributes":[{"value":"/ Returns true if `other` contains all values in `self`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":8466,"byte_end":8524,"line_start":72,"line_end":72,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":8715,"byte_end":8726,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<Set<T>>::is_superset","value":"pub fn is_superset(&Self, &Set<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `self` contains all values in `other`.\n","sig":null,"attributes":[{"value":"/ Returns true if `self` contains all values in `other`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":8645,"byte_end":8703,"line_start":77,"line_end":77,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":171},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":9022,"byte_end":9026,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":174}],"decl_id":null,"docs":" An iterator over the values in a `Set`.\n","sig":null,"attributes":[{"value":"/ An iterator over the values in a `Set`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":8967,"byte_end":9010,"line_start":92,"line_end":92,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":188},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ordered_map","qualname":"::ordered_map","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":205},{"krate":0,"index":209},{"krate":0,"index":216},{"krate":0,"index":245},{"krate":0,"index":252},{"krate":0,"index":257},{"krate":0,"index":265},{"krate":0,"index":271},{"krate":0,"index":275},{"krate":0,"index":280},{"krate":0,"index":288},{"krate":0,"index":294},{"krate":0,"index":298},{"krate":0,"index":303},{"krate":0,"index":311},{"krate":0,"index":317}],"decl_id":null,"docs":" An order-preserving immutable map constructed at compile time.\n","sig":null,"attributes":[{"value":"/ An order-preserving immutable map constructed at compile time.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":9494,"byte_end":9560,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":198},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":10116,"byte_end":10126,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"OrderedMap","qualname":"::ordered_map::OrderedMap","value":"OrderedMap { key, disps, idxs, entries }","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204}],"decl_id":null,"docs":" An order-preserving immutable map constructed at compile time.","sig":null,"attributes":[{"value":"/ An order-preserving immutable map constructed at compile time.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":9717,"byte_end":9783,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":9784,"byte_end":9787,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Unlike a `Map`, iteration order is guaranteed to match the definition","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":9788,"byte_end":9861,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ order.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":9862,"byte_end":9872,"line_start":14,"line_end":14,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":9873,"byte_end":9876,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":9877,"byte_end":9888,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":9889,"byte_end":9892,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The fields of this struct are public so that they may be initialized by the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":9893,"byte_end":9972,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ `phf_ordered_map!` macro and code generation. They are subject to change at","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":9973,"byte_end":10052,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ any time and should never be accessed directly.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":10053,"byte_end":10104,"line_start":20,"line_end":20,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":201},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":10180,"byte_end":10183,"line_start":23,"line_end":23,"column_start":9,"column_end":12},"name":"key","qualname":"::ordered_map::OrderedMap::key","value":"u64","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":202},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":10217,"byte_end":10222,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"disps","qualname":"::ordered_map::OrderedMap::disps","value":"Slice<(u32, u32)>","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":203},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":10270,"byte_end":10274,"line_start":27,"line_end":27,"column_start":9,"column_end":13},"name":"idxs","qualname":"::ordered_map::OrderedMap::idxs","value":"Slice<usize>","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":204},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":10317,"byte_end":10324,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"entries","qualname":"::ordered_map::OrderedMap::entries","value":"Slice<(K, V)>","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":10853,"byte_end":10856,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"len","qualname":"<OrderedMap<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of entries in the `Map`.\n","sig":null,"attributes":[{"value":"/ Returns the number of entries in the `Map`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":10794,"byte_end":10841,"line_start":47,"line_end":47,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":10964,"byte_end":10972,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<OrderedMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Map` is empty.\n","sig":null,"attributes":[{"value":"/ Returns true if the `Map` is empty.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":10913,"byte_end":10952,"line_start":52,"line_end":52,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":11093,"byte_end":11096,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"get","qualname":"<OrderedMap<K, V>>::get","value":"pub fn get<T: ?Sized>(&Self, &T) -> Option<&V> where T: Eq + PhfHash,\nK: Borrow<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value that `key` maps to.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the value that `key` maps to.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":11025,"byte_end":11081,"line_start":57,"line_end":57,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":11411,"byte_end":11418,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_key","qualname":"<OrderedMap<K, V>>::get_key","value":"pub fn get_key<T: ?Sized>(&Self, &T) -> Option<&K> where T: Eq + PhfHash,\nK: Borrow<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the map's internal static instance of the given\n key.","sig":null,"attributes":[{"value":"/ Returns a reference to the map's internal static instance of the given","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":11254,"byte_end":11328,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ key.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":11333,"byte_end":11341,"line_start":66,"line_end":66,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":11346,"byte_end":11349,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This can be useful for interning schemes.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":11354,"byte_end":11399,"line_start":68,"line_end":68,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":11628,"byte_end":11640,"line_start":77,"line_end":77,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<OrderedMap<K, V>>::contains_key","value":"pub fn contains_key<T: ?Sized>(&Self, &T) -> bool where T: Eq + PhfHash,\nK: Borrow<T>","parent":null,"children":[],"decl_id":null,"docs":" Determines if `key` is in the `Map`.\n","sig":null,"attributes":[{"value":"/ Determines if `key` is in the `Map`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":11576,"byte_end":11616,"line_start":76,"line_end":76,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":11887,"byte_end":11896,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"get_index","qualname":"<OrderedMap<K, V>>::get_index","value":"pub fn get_index<T: ?Sized>(&Self, &T) -> Option<usize> where T: Eq + PhfHash,\nK: Borrow<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the key within the list used to initialize\n the ordered map.\n","sig":null,"attributes":[{"value":"/ Returns the index of the key within the list used to initialize","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":11783,"byte_end":11850,"line_start":84,"line_end":84,"column_start":5,"column_end":72}},{"value":"/ the ordered map.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":11855,"byte_end":11875,"line_start":85,"line_end":85,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":12219,"byte_end":12224,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"index","qualname":"<OrderedMap<K, V>>::index","value":"pub fn index(&Self, usize) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Returns references to both the key and values at an index\n within the list used to initialize the ordered map. See `.get_index(key)`.\n","sig":null,"attributes":[{"value":"/ Returns references to both the key and values at an index","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":12063,"byte_end":12124,"line_start":93,"line_end":93,"column_start":5,"column_end":66}},{"value":"/ within the list used to initialize the ordered map. See `.get_index(key)`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":12129,"byte_end":12207,"line_start":94,"line_end":94,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":12408,"byte_end":12417,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"get_entry","qualname":"<OrderedMap<K, V>>::get_entry","value":"pub fn get_entry<T: ?Sized>(&Self, &T) -> Option<(&K, &V)> where T: Eq +\nPhfHash, K: Borrow<T>","parent":null,"children":[],"decl_id":null,"docs":" Like `get`, but returns both the key and the value.\n","sig":null,"attributes":[{"value":"/ Like `get`, but returns both the key and the value.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":12341,"byte_end":12396,"line_start":99,"line_end":99,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":13265,"byte_end":13272,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"entries","qualname":"<OrderedMap<K, V>>::entries","value":"pub fn entries<'a>(&'a Self) -> Entries","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the key/value pairs in the map.","sig":null,"attributes":[{"value":"/ Returns an iterator over the key/value pairs in the map.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":13110,"byte_end":13170,"line_start":124,"line_end":124,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":13175,"byte_end":13178,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Entries are returned in the same order in which they were defined.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":13183,"byte_end":13253,"line_start":126,"line_end":126,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":13508,"byte_end":13512,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"keys","qualname":"<OrderedMap<K, V>>::keys","value":"pub fn keys<'a>(&'a Self) -> Keys","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the keys in the map.","sig":null,"attributes":[{"value":"/ Returns an iterator over the keys in the map.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":13367,"byte_end":13416,"line_start":131,"line_end":131,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":13421,"byte_end":13424,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Keys are returned in the same order in which they were defined.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":13429,"byte_end":13496,"line_start":133,"line_end":133,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":13741,"byte_end":13747,"line_start":141,"line_end":141,"column_start":12,"column_end":18},"name":"values","qualname":"<OrderedMap<K, V>>::values","value":"pub fn values<'a>(&'a Self) -> Values","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the values in the map.","sig":null,"attributes":[{"value":"/ Returns an iterator over the values in the map.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":13596,"byte_end":13647,"line_start":138,"line_end":138,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":13652,"byte_end":13655,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Values are returned in the same order in which they were defined.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":13660,"byte_end":13729,"line_start":140,"line_end":140,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":252},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":14101,"byte_end":14108,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"Entries","qualname":"::ordered_map::Entries","value":"Entries {  }","parent":null,"children":[{"krate":0,"index":256}],"decl_id":null,"docs":" An iterator over the entries in a `OrderedMap`.\n","sig":null,"attributes":[{"value":"/ An iterator over the entries in a `OrderedMap`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":14038,"byte_end":14089,"line_start":155,"line_end":155,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":275},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":14739,"byte_end":14743,"line_start":181,"line_end":181,"column_start":12,"column_end":16},"name":"Keys","qualname":"::ordered_map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":279}],"decl_id":null,"docs":" An iterator over the keys in a `OrderedMap`.\n","sig":null,"attributes":[{"value":"/ An iterator over the keys in a `OrderedMap`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":14679,"byte_end":14727,"line_start":180,"line_end":180,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":298},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":15316,"byte_end":15322,"line_start":206,"line_end":206,"column_start":12,"column_end":18},"name":"Values","qualname":"::ordered_map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":302}],"decl_id":null,"docs":" An iterator over the values in a `OrderedMap`.\n","sig":null,"attributes":[{"value":"/ An iterator over the values in a `OrderedMap`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":15254,"byte_end":15304,"line_start":205,"line_end":205,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":321},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ordered_set","qualname":"::ordered_set","value":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":349},{"krate":0,"index":356},{"krate":0,"index":362},{"krate":0,"index":366},{"krate":0,"index":372},{"krate":0,"index":376}],"decl_id":null,"docs":" An order-preserving immutable set constructed at compile time.\n","sig":null,"attributes":[{"value":"/ An order-preserving immutable set constructed at compile time.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":15839,"byte_end":15905,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":329},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16421,"byte_end":16431,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"OrderedSet","qualname":"::ordered_set::OrderedSet","value":"OrderedSet { map }","parent":null,"children":[{"krate":0,"index":331}],"decl_id":null,"docs":" An order-preserving immutable set constructed at compile time.","sig":null,"attributes":[{"value":"/ An order-preserving immutable set constructed at compile time.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16022,"byte_end":16088,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16089,"byte_end":16092,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Unlike a `Set`, iteration order is guaranteed to match the definition","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16093,"byte_end":16166,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ order.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16167,"byte_end":16177,"line_start":11,"line_end":11,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16178,"byte_end":16181,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16182,"byte_end":16193,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16194,"byte_end":16197,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The fields of this struct are public so that they may be initialized by the","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16198,"byte_end":16277,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ `phf_ordered_set!` macro and code generation. They are subject to change at","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16278,"byte_end":16357,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ any time and should never be accessed directly.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16358,"byte_end":16409,"line_start":17,"line_end":17,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":331},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16473,"byte_end":16476,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"name":"map","qualname":"::ordered_set::OrderedSet::map","value":"ordered_map::OrderedMap<T, ()>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16771,"byte_end":16774,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"len","qualname":"<OrderedSet<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the `OrderedSet`.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the `OrderedSet`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16704,"byte_end":16759,"line_start":30,"line_end":30,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16897,"byte_end":16905,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<OrderedSet<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `OrderedSet` contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns true if the `OrderedSet` contains no elements.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16827,"byte_end":16885,"line_start":35,"line_end":35,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":17115,"byte_end":17122,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_key","qualname":"<OrderedSet<T>>::get_key","value":"pub fn get_key<U: ?Sized>(&Self, &U) -> Option<&T> where U: Eq + PhfHash,\nT: Borrow<U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the set's internal static instance of the given\n key.","sig":null,"attributes":[{"value":"/ Returns a reference to the set's internal static instance of the given","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16958,"byte_end":17032,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/ key.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":17037,"byte_end":17045,"line_start":41,"line_end":41,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":17050,"byte_end":17053,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This can be useful for interning schemes.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":17058,"byte_end":17103,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":17373,"byte_end":17382,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"get_index","qualname":"<OrderedSet<T>>::get_index","value":"pub fn get_index<U: ?Sized>(&Self, &U) -> Option<usize> where U: Eq + PhfHash,\nT: Borrow<U>","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the key within the list used to initialize\n the ordered set.\n","sig":null,"attributes":[{"value":"/ Returns the index of the key within the list used to initialize","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":17269,"byte_end":17336,"line_start":51,"line_end":51,"column_start":5,"column_end":72}},{"value":"/ the ordered set.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":17341,"byte_end":17361,"line_start":52,"line_end":52,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":17675,"byte_end":17680,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"index","qualname":"<OrderedSet<T>>::index","value":"pub fn index(&Self, usize) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the key at an index\n within the list used to initialize the ordered set. See `.get_index(key)`.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the key at an index","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":17534,"byte_end":17580,"line_start":60,"line_end":60,"column_start":5,"column_end":51}},{"value":"/ within the list used to initialize the ordered set. See `.get_index(key)`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":17585,"byte_end":17663,"line_start":61,"line_end":61,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":17833,"byte_end":17841,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"contains","qualname":"<OrderedSet<T>>::contains","value":"pub fn contains<U: ?Sized>(&Self, &U) -> bool where U: Eq + PhfHash,\nT: Borrow<U>","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `value` is in the `Set`.\n","sig":null,"attributes":[{"value":"/ Returns true if `value` is in the `Set`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":17777,"byte_end":17821,"line_start":66,"line_end":66,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":18136,"byte_end":18140,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"iter","qualname":"<OrderedSet<T>>::iter","value":"pub fn iter<'a>(&'a Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the values in the set.","sig":null,"attributes":[{"value":"/ Returns an iterator over the values in the set.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":17991,"byte_end":18042,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":18047,"byte_end":18050,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Values are returned in the same order in which they were defined.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":18055,"byte_end":18124,"line_start":76,"line_end":76,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":18355,"byte_end":18366,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<OrderedSet<T>>::is_disjoint","value":"pub fn is_disjoint(&Self, &OrderedSet<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `other` shares no elements with `self`.\n","sig":null,"attributes":[{"value":"/ Returns true if `other` shares no elements with `self`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":18270,"byte_end":18329,"line_start":83,"line_end":83,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":18334,"byte_end":18343,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":18558,"byte_end":18567,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<OrderedSet<T>>::is_subset","value":"pub fn is_subset(&Self, &OrderedSet<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `other` contains all values in `self`.\n","sig":null,"attributes":[{"value":"/ Returns true if `other` contains all values in `self`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":18474,"byte_end":18532,"line_start":89,"line_end":89,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":18537,"byte_end":18546,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":18758,"byte_end":18769,"line_start":97,"line_end":97,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<OrderedSet<T>>::is_superset","value":"pub fn is_superset(&Self, &OrderedSet<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `self` contains all values in `other`.\n","sig":null,"attributes":[{"value":"/ Returns true if `self` contains all values in `other`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":18674,"byte_end":18732,"line_start":95,"line_end":95,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":18737,"byte_end":18746,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":362},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":19086,"byte_end":19090,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"Iter","qualname":"::ordered_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":365}],"decl_id":null,"docs":" An iterator over the values in a `OrderedSet`.\n","sig":null,"attributes":[{"value":"/ An iterator over the values in a `OrderedSet`.","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":19024,"byte_end":19074,"line_start":111,"line_end":111,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":381},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":956,"byte_end":962,"line_start":38,"line_end":38,"column_start":5,"column_end":11},"name":"Static","qualname":"::Slice::Static","value":"Slice::Static(&'static [T])","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":384},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":1016,"byte_end":1023,"line_start":40,"line_end":40,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::Slice::Dynamic","value":"Slice::Dynamic(Vec<T>)","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"core\"))","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":982,"byte_end":1011,"line_start":39,"line_end":39,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":379},"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":932,"byte_end":937,"line_start":37,"line_end":37,"column_start":10,"column_end":15},"name":"Slice","qualname":"::Slice","value":"pub enum Slice<T: 'static> {\n    Static(&'static [T]),\n\n    #[cfg(not(feature = \"core\"))]\n    Dynamic(Vec<T>),\n}","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":384}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":1967,"byte_end":1970,"line_start":26,"line_end":26,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":2184,"byte_end":2187,"line_start":32,"line_end":32,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":2354,"byte_end":2357,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":4927,"byte_end":4934,"line_start":130,"line_end":130,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":5223,"byte_end":5230,"line_start":142,"line_end":142,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":5397,"byte_end":5404,"line_start":148,"line_end":148,"column_start":38,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":5557,"byte_end":5561,"line_start":155,"line_end":155,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":5815,"byte_end":5819,"line_start":167,"line_end":167,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":5968,"byte_end":5972,"line_start":173,"line_end":173,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":6129,"byte_end":6135,"line_start":180,"line_end":180,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":6389,"byte_end":6395,"line_start":192,"line_end":192,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":6544,"byte_end":6550,"line_start":198,"line_end":198,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":7092,"byte_end":7095,"line_start":22,"line_end":22,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":7246,"byte_end":7249,"line_start":28,"line_end":28,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":8248,"byte_end":8251,"line_start":66,"line_end":66,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":9105,"byte_end":9109,"line_start":97,"line_end":97,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":9344,"byte_end":9348,"line_start":109,"line_end":109,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":9478,"byte_end":9482,"line_start":115,"line_end":115,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":10370,"byte_end":10380,"line_start":32,"line_end":32,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":10594,"byte_end":10604,"line_start":38,"line_end":38,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":10771,"byte_end":10781,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":14195,"byte_end":14202,"line_start":160,"line_end":160,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":14483,"byte_end":14490,"line_start":172,"line_end":172,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":14657,"byte_end":14664,"line_start":178,"line_end":178,"column_start":38,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":14824,"byte_end":14828,"line_start":185,"line_end":185,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":15082,"byte_end":15086,"line_start":197,"line_end":197,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":15235,"byte_end":15239,"line_start":203,"line_end":203,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":15403,"byte_end":15409,"line_start":210,"line_end":210,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":15663,"byte_end":15669,"line_start":222,"line_end":222,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":15818,"byte_end":15824,"line_start":228,"line_end":228,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16523,"byte_end":16533,"line_start":23,"line_end":23,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16684,"byte_end":16694,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":18228,"byte_end":18238,"line_start":82,"line_end":82,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":19172,"byte_end":19176,"line_start":116,"line_end":116,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":19439,"byte_end":19443,"line_start":130,"line_end":130,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":19587,"byte_end":19591,"line_start":137,"line_end":137,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":1054,"byte_end":1059,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":675,"byte_end":678,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":11}},{"kind":"Mod","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":688,"byte_end":691,"line_start":28,"line_end":28,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":135}},{"kind":"Mod","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":701,"byte_end":712,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":188}},{"kind":"Mod","span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":722,"byte_end":733,"line_start":30,"line_end":30,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":321}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":1967,"byte_end":1970,"line_start":26,"line_end":26,"column_start":27,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":21},"to":{"krate":2,"index":6946}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":2184,"byte_end":2187,"line_start":32,"line_end":32,"column_start":44,"column_end":47},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":21},"to":{"krate":2,"index":2355}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":2354,"byte_end":2357,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":21},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":4927,"byte_end":4934,"line_start":130,"line_end":130,"column_start":29,"column_end":36},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":5618}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":5223,"byte_end":5230,"line_start":142,"line_end":142,"column_start":40,"column_end":47},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":5545}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":5397,"byte_end":5404,"line_start":148,"line_end":148,"column_start":38,"column_end":45},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":5570}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":5557,"byte_end":5561,"line_start":155,"line_end":155,"column_start":29,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":89},"to":{"krate":2,"index":5618}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":5815,"byte_end":5819,"line_start":167,"line_end":167,"column_start":40,"column_end":44},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":89},"to":{"krate":2,"index":5545}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":5968,"byte_end":5972,"line_start":173,"line_end":173,"column_start":38,"column_end":42},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":89},"to":{"krate":2,"index":5570}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":6129,"byte_end":6135,"line_start":180,"line_end":180,"column_start":29,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":112},"to":{"krate":2,"index":5618}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":6389,"byte_end":6395,"line_start":192,"line_end":192,"column_start":40,"column_end":46},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":112},"to":{"krate":2,"index":5545}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/map.rs","byte_start":6544,"byte_end":6550,"line_start":198,"line_end":198,"column_start":38,"column_end":44},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":112},"to":{"krate":2,"index":5570}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":7092,"byte_end":7095,"line_start":22,"line_end":22,"column_start":24,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":142},"to":{"krate":2,"index":6946}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":7246,"byte_end":7249,"line_start":28,"line_end":28,"column_start":9,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":8248,"byte_end":8251,"line_start":66,"line_end":66,"column_start":9,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":9105,"byte_end":9109,"line_start":97,"line_end":97,"column_start":26,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":171},"to":{"krate":2,"index":5618}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":9344,"byte_end":9348,"line_start":109,"line_end":109,"column_start":37,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":171},"to":{"krate":2,"index":5545}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/set.rs","byte_start":9478,"byte_end":9482,"line_start":115,"line_end":115,"column_start":35,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":171},"to":{"krate":2,"index":5570}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":10370,"byte_end":10380,"line_start":32,"line_end":32,"column_start":27,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":198},"to":{"krate":2,"index":6946}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":10594,"byte_end":10604,"line_start":38,"line_end":38,"column_start":44,"column_end":54},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":198},"to":{"krate":2,"index":2355}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":10771,"byte_end":10781,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":14195,"byte_end":14202,"line_start":160,"line_end":160,"column_start":29,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":5618}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":14483,"byte_end":14490,"line_start":172,"line_end":172,"column_start":40,"column_end":47},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":5545}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":14657,"byte_end":14664,"line_start":178,"line_end":178,"column_start":38,"column_end":45},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":5570}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":14824,"byte_end":14828,"line_start":185,"line_end":185,"column_start":29,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":275},"to":{"krate":2,"index":5618}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":15082,"byte_end":15086,"line_start":197,"line_end":197,"column_start":40,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":275},"to":{"krate":2,"index":5545}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":15235,"byte_end":15239,"line_start":203,"line_end":203,"column_start":38,"column_end":42},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":275},"to":{"krate":2,"index":5570}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":15403,"byte_end":15409,"line_start":210,"line_end":210,"column_start":29,"column_end":35},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":5618}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":15663,"byte_end":15669,"line_start":222,"line_end":222,"column_start":40,"column_end":46},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":5545}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_map.rs","byte_start":15818,"byte_end":15824,"line_start":228,"line_end":228,"column_start":38,"column_end":44},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":5570}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16523,"byte_end":16533,"line_start":23,"line_end":23,"column_start":24,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":6946}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":16684,"byte_end":16694,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":18228,"byte_end":18238,"line_start":82,"line_end":82,"column_start":9,"column_end":19},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":19172,"byte_end":19176,"line_start":116,"line_end":116,"column_start":26,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":362},"to":{"krate":2,"index":5618}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":19439,"byte_end":19443,"line_start":130,"line_end":130,"column_start":37,"column_end":41},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":362},"to":{"krate":2,"index":5545}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/ordered_set.rs","byte_start":19587,"byte_end":19591,"line_start":137,"line_end":137,"column_start":35,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":362},"to":{"krate":2,"index":5570}},{"span":{"file_name":"/home/merlin/.cargo/registry/src/github.com-1ecc6299db9ec823/phf-0.7.21/src/lib.rs","byte_start":1054,"byte_end":1059,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":379},"to":{"krate":2,"index":2274}}]}